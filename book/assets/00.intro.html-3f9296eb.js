import{_ as t,Y as o,Z as n,$ as e,a0 as s}from"./framework-3d290349.js";const _={},a=e("h1",{id:"前言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),s(" 前言")],-1),c=e("p",null,"到目前为止，您已经了解了很多关于协程的知识。例如：如何启动协程并分发异步工作，而不会产生任何线程分配开销或内存泄漏。然而，协程的基础能力是能够挂起代码，随意控制其流程，并以相同的语法和顺序代码结构从同步和异步操作中返回值。",-1),r=e("p",null,"在本章中，您将了解更多关于可挂起函数的内部工作信息。您将看到如何将依赖回调的现有代码转换为可挂起的函数，这些函数的调用方式与常规的阻塞函数相同。",-1),d=e("p",null,"在整个过程中，您将了解到协程谜团中最重要的部分。",-1),i=[a,c,r,d];function l(h,u){return o(),n("div",null,i)}const p=t(_,[["render",l],["__file","00.intro.html.vue"]]);export{p as default};
