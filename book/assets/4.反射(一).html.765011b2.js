import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as t,a as s,b as o,w as c,d as n,e as l,r as i}from"./app.32f320c9.js";var u="/book/assets/4.type.a9360483.jpg";const r={},k=s("h2",{id:"\u524D\u8A00",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u524D\u8A00","aria-hidden":"true"},"#"),n(" \u524D\u8A00")],-1),d=n("\u5728 "),m=n("\u4E0A\u4E00\u7BC7\u6587\u7AE0"),v=n(" \u4E2D\u6211\u4EEC\u7B80\u5355\u5B66\u4E60\u4E86\u4E0B\u6CDB\u578B\u77E5\u8BC6\uFF0C\u90A3\u4E48\u672C\u6587\u4E3B\u8981\u5B66\u4E60\u4E0B\u53CD\u5C04\u76F8\u5173\u7684\u77E5\u8BC6\u3002\u5728 "),y=s("code",null,"Retrofit",-1),g=n(" \u4E2D\u4E0E\u53CD\u5C04\u76F8\u5173\u7684\u4E3B\u8981\u662F "),b=s("code",null,"Method",-1),T=n("\uFF0C\u6240\u4EE5\u672C\u6587\u5B66\u4E60\u53CD\u5C04\u7684\u91CD\u70B9\u5728\u4E8E "),f=s("code",null,"Method",-1),w=n(" \u76F8\u5173\u7684\u77E5\u8BC6\u70B9\u3002"),h=l(`<p>\u5728\u5B66\u4E60 <code>Method</code> \u4E4B\u524D\uFF0C\u6211\u4EEC\u5148\u5B66\u4E60\u4E0B <code>Type</code> \u76F8\u5173\u7684\u5185\u5BB9\u3002</p><h2 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> Type</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">default</span> <span class="token class-name">String</span> <span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Type</code> \u7C7B\u662F Java \u53CD\u5C04\u4E2D\u91CD\u8981\u7684\u7EC4\u6210\u90E8\u5206\u3002\u6839\u636E\u5176\u6CE8\u91CA\u63CF\u8FF0\uFF1A<code>Type</code>\u662F Java \u4E2D\u6240\u6709\u7C7B\u578B\u7684\u901A\u7528\u8D85\u63A5\u53E3\u3002\u8FD9\u4E9B\u5305\u62EC\u539F\u59CB\u7C7B\u578B\u3001\u53C2\u6570\u5316\u7C7B\u578B\u3001\u6570\u7EC4\u7C7B\u578B\u3001\u7C7B\u578B\u53D8\u91CF\u548C\u57FA\u672C\u7C7B\u578B\u3002</p><p>\u4E0B\u56FE\u662F\u4E0E <code>Type</code> \u76F8\u5173\u7684\u7C7B\u56FE\uFF1A</p><p><img src="`+u+`" alt="Type"></p><p>\u4E0A\u56FE\u4E2D <code>Type</code> \u7684\u5B50\u7C7B\u4E0E <code>Type</code> \u6CE8\u91CA\u4E2D\u7684\u63CF\u8FF0\u57FA\u672C\u4E00\u81F4\uFF1A</p><ol><li>\u539F\u59CB\u7C7B\u578B\u3001\u57FA\u672C\u7C7B\u578B\u5BF9\u5E94 <code>Class</code>\uFF0C\u8868\u793A Java \u7C7B\u3001\u6570\u7EC4\uFF0C8\u79CD\u57FA\u672C\u7C7B\u578B\uFF0C</li><li>\u6570\u7EC4\u7C7B\u578B\u5BF9\u5E94 <code>GenericArrayType</code>\uFF0C\u8868\u793A\u53C2\u6570\u5316\u7C7B\u578B\u6216\u8005\u7C7B\u578B\u53D8\u91CF\u7684\u6570\u7EC4\uFF0C\u6BD4\u5982\uFF1A<code>List&lt;String&gt;[]</code> \u548C <code>T[]</code> \u7B49\uFF0C</li><li>\u53C2\u6570\u5316\u7C7B\u578B\u5BF9\u5E94 <code>ParameterizedType</code>\uFF0C\u8868\u793A\u53C2\u6570\u5316\u7C7B\u578B\u7684\u7C7B\uFF0C\u6BD4\u5982\uFF1A<code>Class&lt;T&gt;</code></li><li>\u7C7B\u578B\u53D8\u91CF\u5BF9\u5E94 <code>TypeVariable</code>\uFF0C\u4E00\u822C\u8868\u793A\u6CDB\u578B\u53D8\u91CF\uFF0C</li><li>\u901A\u914D\u7B26\u7C7B\u578B\u5BF9\u5E94 <code>WildcardType</code>\uFF0C\u8868\u793A\u6CDB\u578B\u901A\u914D\u7B26\uFF0C\u5176\u6CA1\u6709\u5728 <code>Type</code> \u6CE8\u91CA\u4E2D\u63CF\u8FF0\u3002</li></ol><h2 id="class" tabindex="-1"><a class="header-anchor" href="#class" aria-hidden="true">#</a> Class</h2><p><code>Class</code> \u7684\u786E\u5B9E\u73B0\u4E86 <code>Type</code> \u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u591A\u79CD\u65B9\u5F0F\u53EF\u4EE5\u83B7\u53D6 <code>Class</code> \uFF0C\u6BD4\u5982\u4EE5\u4E0B\u51E0\u79CD\u65B9\u5F0F\uFF1A</p><ul><li><code>Class&lt;Integer&gt; integerClass = int.class;</code></li><li><code>Class&lt;? extends Integer&gt; numberClass = number.getClass();</code></li><li><code>Class&lt;?&gt; strClass = Class.forName(&quot;java.lang.String&quot;);</code></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numberClass <span class="token operator">=</span> number<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>numberClass<span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u8C03\u7528 <code>Type#getTypeName()</code> \u65B9\u6CD5\uFF0C\u8F93\u51FA\u5185\u5BB9\u5982\u4E0B\uFF1A<code>java.lang.Integer</code>\u3002</p><h2 id="genericarraytype" tabindex="-1"><a class="header-anchor" href="#genericarraytype" aria-hidden="true">#</a> GenericArrayType</h2><p><code>GenericArrayType</code> \u8868\u793A\u53C2\u6570\u5316\u7C7B\u578B\u6216\u8005\u7C7B\u578B\u53D8\u91CF\u7684\u6570\u7EC4\uFF0C\u6BD4\u5982\uFF1A<code>List&lt;String&gt;[]</code> \u548C <code>T[]</code> \u7B49\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GenericArrayType</span> <span class="token keyword">extends</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
    
    <span class="token class-name">Type</span> <span class="token function">getGenericComponentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>GenericArrayType</code> \u4E2D\u4EC5\u6709\u4E00\u4E2A <code>getGenericComponentType</code> \u65B9\u6CD5\uFF0C\u65B9\u6CD5\u8FD4\u56DE\u6570\u636E\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u6BD4\u5982\uFF1A<code>List&lt;String&gt;[]</code> \u8FD4\u56DE <code>List&lt;String&gt;</code>\u3002</p><p>\u4E0B\u9762\u662F\u6D4B\u8BD5\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">testGenericArrayType</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ia<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sa<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> lsa<span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ta<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;testGenericArrayType&quot;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> types <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getGenericParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Type</span> type <span class="token operator">:</span> types<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token keyword">instanceof</span> <span class="token class-name">GenericArrayType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Type</span> componentType <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">GenericArrayType</span><span class="token punctuation">)</span> type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getGenericComponentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>componentType<span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>componentType<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u4EE3\u7801\u4E2D\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E2A <code>testGenericArrayType</code> \u65B9\u6CD5\uFF0C\u65B9\u6CD5\u6709\u56DB\u4E2A\u53C2\u6570\uFF0C\u53C2\u6570\u90FD\u662F\u6570\u7EC4\u7C7B\u578B\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u5728 <code>main</code> \u65B9\u6CD5\u4E2D\u901A\u8FC7\u53CD\u5C04\u83B7\u53D6 <code>Method</code>\uFF0C\u518D\u901A\u8FC7<code>getGenericParameterTypes</code> \u83B7\u53D6\u65B9\u6CD5\u7684\u53C2\u6570\u7C7B\u578B\u6570\u7EC4\uFF0C\u6211\u4EEC\u904D\u5386\u65B9\u6CD5\u53C2\u6570\u7C7B\u578B\u6570\u7EC4\uFF0C\u8F93\u51FA\u7C7B\u578B\u540D\u79F0\u548C\u7C7B\u540D\u79F0\uFF0C\u5E76\u5224\u65AD\u662F\u5426\u662F <code>GenericArrayType</code>\uFF0C\u5982\u679C\u662F <code>GenericArrayType</code> \u7C7B\u578B\u518D\u901A\u8FC7 <code>getGenericComponentType</code> \u65B9\u6CD5\u83B7\u53D6\u5B83\u7684 <code>componentType</code>\uFF0C\u6700\u540E\u8F93\u51FA <code>componentType</code> \u7684\u7C7B\u578B\u540D\u79F0\u548C\u7C7B\u540D\u79F0\u3002</p><p>\u4EE5\u4E0A\u4EE3\u7801\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>int<span class="token punctuation">[</span><span class="token punctuation">]</span>
java.lang.Class
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
java.lang.String<span class="token punctuation">[</span><span class="token punctuation">]</span>
java.lang.Class
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
java.util.List<span class="token operator">&lt;</span>java.lang.String<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
java.util.List<span class="token operator">&lt;</span>java.lang.String<span class="token operator">&gt;</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
T<span class="token punctuation">[</span><span class="token punctuation">]</span>
sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
T
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u8F93\u51FA\u7ED3\u679C\u53EF\u4EE5\u770B\uFF1A</p><ol><li><code>int[]</code> \u548C <code>String[]</code> \u4E0D\u662F <code>GenericArrayType</code> \u7C7B\u578B\uFF0C\u800C\u662F <code>Class</code> \u7C7B\u578B\uFF0C\u56E0\u4E3A\u4ED6\u4FE9\u4E0D\u5C5E\u4E8E\u53C2\u6570\u5316\u7C7B\u578B\u548C\u7C7B\u578B\u53D8\u91CF\uFF0C</li><li>\u540E\u9762\u7684\u4E24\u4E2A\u53C2\u6570\u90FD\u662F <code>GenericArrayType</code> \u7C7B\u578B\uFF0C\u800C <code>getGenericComponentType</code> \u65B9\u6CD5\u83B7\u53D6\u7684\u662F <code>[]</code> \u524D\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u662F\u591A\u7EF4\u6570\u7EC4\uFF0C\u90A3\u4E48\u5B83\u83B7\u53D6\u7684\u662F\u6700\u540E\u4E00\u4E2A <code>[]</code> \u4E4B\u524D\u7684\u7C7B\u578B\uFF0C\u6BD4\u5982\uFF1A<code>List&lt;String&gt;[][][]</code>\uFF0C\u8C03\u7528 <code>getGenericComponentType</code> \u65B9\u6CD5\u8FD4\u56DE <code>List&lt;String&gt;[][]</code>\u3002</li></ol><p>\u6211\u4EEC\u4FEE\u6539\u4E0B <code>testGenericArrayType</code> \u65B9\u6CD5\uFF1A<code>List&lt;String&gt;[]</code> \u4FEE\u6539\u4E3A <code>List&lt;String&gt;[][][]</code>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">testGenericArrayType</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ia<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sa<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> lsa<span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ta<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>java.util.List<span class="token operator">&lt;</span>java.lang.String<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
java.util.List<span class="token operator">&lt;</span>java.lang.String<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="parameterizedtype" tabindex="-1"><a class="header-anchor" href="#parameterizedtype" aria-hidden="true">#</a> ParameterizedType</h2><p><code>ParameterizedType</code> \u8868\u793A\u53C2\u6570\u5316\u7C7B\u578B\u7684\u7C7B\uFF0C\u6BD4\u5982\uFF1A<code>Class&lt;T&gt;</code> \u7B49\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ParameterizedType</span> <span class="token keyword">extends</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
    
    <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getActualTypeArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Type</span> <span class="token function">getRawType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Type</span> <span class="token function">getOwnerType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ParameterizedType</code> \u63A5\u53E3\u6709\u4E09\u4E2A\u65B9\u6CD5\uFF1A</p><ol><li><code>getActualTypeArguments</code> \u65B9\u6CD5\uFF1A\u53C2\u6570\u5316\u7C7B\u578B\u4E2D\u7684\u53C2\u6570\u5B9E\u9645\u7C7B\u578B\uFF0C\u6BD4\u5982\uFF1A<code>Class&lt;String&gt;</code> \u4E2D\u7684 <code>String</code>\uFF0C</li><li><code>getRawType</code> \u65B9\u6CD5\uFF1A\u53C2\u6570\u5316\u7C7B\u578B\u4E2D\u7684\u539F\u59CB\u7C7B\u578B\uFF0C\u6BD4\u5982\uFF1A<code>Class&lt;String&gt;</code> \u4E2D\u7684 <code>Class</code>\uFF0C</li><li><code>getOwnerType</code> \u65B9\u6CD5\uFF1A\u5D4C\u5957\u53C2\u6570\u5316\u7C7B\u578B\u4E2D\u7684\u4E0A\u5C42\u7C7B\u578B\uFF0C\u6839\u636E\u65B9\u6CD5\u6CE8\u91CA\u63CF\u8FF0\uFF1A\u5BF9\u4E8E <code>O&lt;T&gt;.I&lt;S&gt;</code> \u4E2D\u7684 <code>I&lt;S&gt;</code> \u6765\u8BF4\uFF0C\u5B83\u7684 <code>ownerType</code> \u662F <code>O&lt;T&gt;</code>\uFF0C\u800C <code>O&lt;T&gt;</code> \u662F\u9876\u5C42\u7C7B\u578B\uFF0C\u5B83\u6CA1\u6709 <code>ownerType</code>\uFF0C\u8FD4\u56DE null\u3002</li></ol><p>\u4E0B\u9762\u6211\u4EEC\u770B\u770B\u6D4B\u8BD5\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>guodong<span class="token punctuation">.</span>android<span class="token punctuation">.</span>retrofit</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">testParameterizedType</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> clz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;testParameterizedType&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> types <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getGenericParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Type</span> type <span class="token operator">:</span> types<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token keyword">instanceof</span> <span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ParameterizedType</span> parameterizedType <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> type<span class="token punctuation">;</span>
                <span class="token class-name">Type</span> ownerType <span class="token operator">=</span> parameterizedType<span class="token punctuation">.</span><span class="token function">getOwnerType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Type</span> rawType <span class="token operator">=</span> parameterizedType<span class="token punctuation">.</span><span class="token function">getRawType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> actualTypeArguments <span class="token operator">=</span> parameterizedType<span class="token punctuation">.</span><span class="token function">getActualTypeArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ownerType = &quot;</span> <span class="token operator">+</span> ownerType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;rawType = &quot;</span> <span class="token operator">+</span> rawType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;actualTypeArguments = &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>actualTypeArguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E2A <code>testParameterizedType</code> \u65B9\u6CD5\uFF0C\u5B83\u4EC5\u6709\u4E00\u4E2A <code>Class&lt;T&gt;</code> \u7C7B\u578B\u7684\u53C2\u6570\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u5728 <code>main</code> \u65B9\u6CD5\u4E2D\u901A\u8FC7\u53CD\u5C04\u83B7\u53D6 <code>Method</code>\uFF0C\u518D\u901A\u8FC7<code>getGenericParameterTypes</code> \u83B7\u53D6\u65B9\u6CD5\u7684\u53C2\u6570\u7C7B\u578B\u6570\u7EC4\uFF0C\u6211\u4EEC\u904D\u5386\u65B9\u6CD5\u53C2\u6570\u7C7B\u578B\u6570\u7EC4\uFF0C\u8F93\u51FA\u7C7B\u578B\u540D\u79F0\u548C\u7C7B\u540D\u79F0\uFF0C\u5E76\u5224\u65AD\u662F\u5426\u662F <code>ParameterizedType</code>\uFF0C\u5982\u679C\u662F <code>ParameterizedType</code> \u7C7B\u578B\uFF0C\u518D\u83B7\u53D6\u5B83\u7684 <code>ownerType</code>\u3001<code>rawType</code> \u548C <code>actualTypeArguments</code>\uFF0C\u5E76\u8F93\u51FA\u3002</p><p>\u4E0A\u8FF0\u4EE3\u7801\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>java.lang.Class<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span>
sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl
ownerType <span class="token operator">=</span> null
rawType <span class="token operator">=</span> class java.lang.Class
actualTypeArguments <span class="token operator">=</span> <span class="token punctuation">[</span>T<span class="token punctuation">]</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u8F93\u51FA\u7ED3\u679C\u53EF\u4EE5\u770B\u51FA\uFF1A</p><ol><li>\u5BF9\u4E8E <code>Class&lt;T&gt;</code> \u6765\u8BF4\uFF0C\u5B83\u662F\u9876\u5C42\u7C7B\u578B\uFF0C\u5B83\u6CA1\u6709 <code>ownerType</code>\uFF0C\u6240\u4EE5 <code>ownerType</code> \u4E3A null\uFF0C</li><li>\u5B83\u7684\u539F\u59CB\u7C7B\u578B <code>rawType</code> \u662F <code>java.lang.Class</code>\uFF0C</li><li>\u5B83\u7684\u53C2\u6570\u5B9E\u9645\u7C7B\u578B\u662F\uFF1A<code>T</code>\u3002</li></ol><h2 id="typevariable" tabindex="-1"><a class="header-anchor" href="#typevariable" aria-hidden="true">#</a> TypeVariable</h2><p><code>TypeVariable</code> \u4E00\u822C\u8868\u793A\u6CDB\u578B\u53D8\u91CF\uFF0C\u5728 Java \u4E2D\u6709\u4E09\u4E2A\u5730\u65B9\u53EF\u4EE5\u58F0\u660E\u7C7B\u578B\u53D8\u91CF\uFF1A</p><ol><li>Class\uFF0C\u6BD4\u5982\uFF1A<code>User&lt;T&gt;</code>\uFF0C</li><li>Constructor\uFF0C\u6BD4\u5982\uFF1A <code>public &lt;S&gt; User(S s) {}</code>\uFF0C</li><li>Method\uFF0C\u6BD4\u5982\uFF1A<code>public &lt;F, R&gt; R convert(F f) {}</code>\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TypeVariable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">D</span> <span class="token keyword">extends</span> <span class="token class-name">GenericDeclaration</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Type</span><span class="token punctuation">,</span> <span class="token class-name">AnnotatedElement</span> <span class="token punctuation">{</span>
    
    <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">D</span> <span class="token function">getGenericDeclaration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">AnnotatedType</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAnnotatedBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>TypeVariable</code> \u63A5\u53E3\u6709\u56DB\u4E2A\u65B9\u6CD5\uFF1A</p><ol><li><code>getBounds</code> \u65B9\u6CD5\uFF1A\u83B7\u53D6\u6CDB\u578B\u53D8\u91CF\u7684\u4E0A\u9650\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>&amp;</code> \u7B26\u53F7\u6307\u5B9A\u591A\u4E2A\u4E0A\u9650\uFF0C\u6240\u4EE5\u6B64\u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u7C7B\u578B\u6570\u7EC4\uFF0C\u5982\u679C\u6CA1\u6709\u663E\u5F0F\u6307\u5B9A\u4E0A\u9650\uFF0C\u9ED8\u8BA4\u4E0A\u9650\u4E3A <code>Object</code>\uFF0C</li><li><code>getGenericDeclaration</code> \u65B9\u6CD5\uFF1A\u83B7\u53D6\u58F0\u660E\u6CDB\u578B\u53D8\u91CF\u7684\u7C7B\u578B\uFF1A\u662F Class \u8FD8\u662F Constructor\uFF0C\u6216\u8005\u662F Method\uFF0C</li><li><code>getName</code> \u65B9\u6CD5\uFF1A\u83B7\u53D6\u58F0\u660E\u6CDB\u578B\u53D8\u91CF\u65F6\u7684\u53D8\u91CF\u540D\u79F0\uFF0C\u5982\uFF1A<code>Class&lt;T&gt;</code> \u4E2D <code>T</code>\uFF0C</li><li><code>getAnnotatedBounds</code> \u65B9\u6CD5\uFF1A\u6B64\u65B9\u6CD5\u662F Java 1.8 \u6DFB\u52A0\u7684\uFF0C\u83B7\u53D6\u58F0\u660E\u6CDB\u578B\u53D8\u91CF\u4E0A\u9650\u4E0A\u7684\u6CE8\u89E3\u6570\u7EC4\uFF0C\u6570\u7EC4\u5185\u7684\u987A\u5E8F\u6309\u6CE8\u89E3\u58F0\u660E\u987A\u5E8F\u3002</li></ol><p>\u4E0B\u9762\u8FD8\u662F\u6D4B\u8BD5\u4EE3\u7801\uFF0C\u6211\u4EEC\u5C31\u4EE5 Class \u4E3A\u4F8B\u5427\uFF1A</p><p>\u9996\u5148\u58F0\u660E <code>AnnotationTest</code> \u6CE8\u89E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE_USE<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">AnnotationTest</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5FC5\u987B\u4E3A <code>RUNTIME</code> \u8FD0\u884C\u65F6\u6CE8\u89E3\uFF0C</li><li>\u5FC5\u987B\u4F5C\u7528\u5728 <code>TYPE_USE</code> \u5143\u7D20\u4E0A\u3002</li></ol><p>\u4FEE\u6539 <code>Test </code> \u7C7B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token operator">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token annotation punctuation">@AnnotationTest</span><span class="token punctuation">(</span><span class="token string">&quot;Closeable&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Closeable</span> <span class="token operator">&amp;</span> <span class="token annotation punctuation">@AnnotationTest</span><span class="token punctuation">(</span><span class="token string">&quot;Runnable&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Runnable</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">TypeVariable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token class-name">Test</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> typeVariables <span class="token operator">=</span> <span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getTypeParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TypeVariable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token class-name">Test</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> typeVariable <span class="token operator">:</span> typeVariables<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;typeName = &quot;</span> <span class="token operator">+</span> typeVariable<span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;name = &quot;</span> <span class="token operator">+</span> typeVariable<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;genericDeclaration = &quot;</span> <span class="token operator">+</span> typeVariable<span class="token punctuation">.</span><span class="token function">getGenericDeclaration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bounds <span class="token operator">=</span> typeVariable<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Type</span> bound <span class="token operator">:</span> bounds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;boundTypeName = &quot;</span> <span class="token operator">+</span> bound<span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">AnnotatedType</span><span class="token punctuation">[</span><span class="token punctuation">]</span> annotatedBounds <span class="token operator">=</span> typeVariable<span class="token punctuation">.</span><span class="token function">getAnnotatedBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AnnotatedType</span> annotatedBound <span class="token operator">:</span> annotatedBounds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;annotateTypeName = &quot;</span> <span class="token operator">+</span> annotatedBound<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> annotations <span class="token operator">=</span> annotatedBound<span class="token punctuation">.</span><span class="token function">getAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Annotation</span> declaredAnnotation <span class="token operator">:</span> annotations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;declaredAnnotation = &quot;</span> <span class="token operator">+</span> declaredAnnotation<span class="token punctuation">.</span><span class="token function">annotationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;=======================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u4E3A <code>Test</code> \u7C7B\u5B9A\u4E49\u4E86\u6CDB\u578B\u53D8\u91CF <code>T</code>\uFF0C\u540C\u65F6\u6307\u5B9A\u5B83\u7684\u4E0A\u9650\u4E3A <code>Closeable</code> \u548C <code>Runnbale</code> \uFF0C\u5E76\u4E14\u4E3A\u6CDB\u578B\u53D8\u91CF\u4E0A\u9650\u52A0\u4E0A\u4E86 <code>AnnotationTest</code> \u6CE8\u89E3\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u5728 <code>main</code> \u65B9\u6CD5\u4E2D\u901A\u8FC7 <code>Test.class.getTypeParameters();</code> \u83B7\u53D6 <code>Test</code> \u7684\u7C7B\u578B\u53D8\u91CF\u6570\u7EC4\uFF0C\u904D\u5386\u7C7B\u578B\u53D8\u91CF\u6570\u7EC4\uFF0C\u4F9D\u6B21\u8F93\u51FA <code>TypeName</code>\u3001<code>Name</code> \u3001<code>GenericDeclaration</code>\u3001<code>Bounds</code> \u548C <code>AnnotatedBounds</code>\u3002</p><p>\u4E0A\u8FF0\u4EE3\u7801\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>typeName <span class="token operator">=</span> T
name <span class="token operator">=</span> T
genericDeclarationclass <span class="token operator">=</span> com.guodong.android.retrofit.Test
boundTypeName <span class="token operator">=</span> java.io.Closeable
boundTypeName <span class="token operator">=</span> java.lang.Runnable
annotateTypeName <span class="token operator">=</span> java.io.Closeable
declaredAnnotation <span class="token operator">=</span> com.guodong.android.retrofit.AnnotationTest
annotateTypeName <span class="token operator">=</span> java.lang.Runnable
declaredAnnotation <span class="token operator">=</span> com.guodong.android.retrofit.AnnotationTest
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u8F93\u51FA\u7ED3\u679C\u53EF\u4EE5\u770B\u51FA\uFF1A</p><ol><li>\u7C7B\u522B\u53D8\u91CF\u7684\u540D\u79F0\u4E3A\uFF1A<code>T</code>\uFF0C</li><li>\u58F0\u660E\u7C7B\u578B\u53D8\u91CF\u7684\u7C7B\u578B\u4E3A\uFF1A<code>com.guodong.android.retrofit.Test</code>\uFF0C</li><li>\u7C7B\u578B\u53D8\u91CF\u6709\u4E24\u4E2A\u4E0A\u9650\uFF0C\u5206\u522B\u4E3A\uFF1A<code>java.io.Closeable</code> \u548C <code>java.lang.Runnable</code>\uFF0C\u4E14\u662F\u6309\u58F0\u660E\u987A\u5E8F\u6392\u5E8F\uFF0C</li><li><code>annotateTypeName</code> \u8868\u793A <code>AnnotationTest</code> \u6CE8\u89E3\u52A0\u7684\u7C7B\u578B\uFF0C</li><li><code>declaredAnnotation</code> \u8868\u793A\u6CE8\u89E3\u7684\u5168\u9650\u5B9A\u540D\u3002</li></ol><h2 id="wildcardtype" tabindex="-1"><a class="header-anchor" href="#wildcardtype" aria-hidden="true">#</a> WildcardType</h2><p><code>WildcardType</code> \u8868\u793A\u6CDB\u578B\u901A\u914D\u7B26\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">WildcardType</span> <span class="token keyword">extends</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
    
    <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getUpperBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getLowerBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>WildcardType</code> \u63A5\u53E3\u6709\u4E24\u4E2A\u65B9\u6CD5\uFF1A</p><ol><li><code>getUpperBounds</code> \u65B9\u6CD5\uFF0C\u83B7\u53D6\u6CDB\u578B\u4E0A\u9650\uFF0C\u5982\u679C\u6CA1\u6709\u663E\u5F0F\u6307\u5B9A\u4E0A\u9650\uFF0C\u9ED8\u8BA4\u4E0A\u9650\u4E3A <code>Object</code>\uFF0C</li><li><code>getLowerBounds</code> \u65B9\u6CD5\uFF0C\u83B7\u53D6\u6CDB\u578B\u4E0B\u9650\uFF0C\u5982\u679C\u6CA1\u6709\u663E\u5F0F\u6307\u5B9A\u4E0B\u9650\uFF0C\u9ED8\u8BA4\u4E0B\u9650\u4E3A <code>null</code>\uFF0C\u6B64\u65F6\u957F\u5EA6\u4E3A <code>0</code>\u3002</li></ol><p>\u4E0B\u9762\u8FD8\u662F\u6D4B\u8BD5\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>guodong<span class="token punctuation">.</span>android<span class="token punctuation">.</span>retrofit</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">ParameterizedType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Type</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">WildcardType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Field</span> field <span class="token operator">=</span> <span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;map&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Type</span> genericType <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getGenericType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>genericType <span class="token keyword">instanceof</span> <span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ParameterizedType</span> parameterizedType <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> genericType<span class="token punctuation">;</span>
            <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> actualTypeArguments <span class="token operator">=</span> parameterizedType<span class="token punctuation">.</span><span class="token function">getActualTypeArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Type</span> actualTypeArgument <span class="token operator">:</span> actualTypeArguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>actualTypeArgument <span class="token keyword">instanceof</span> <span class="token class-name">WildcardType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">WildcardType</span> wildcardType <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WildcardType</span><span class="token punctuation">)</span> actualTypeArgument<span class="token punctuation">;</span>
                    <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> upperBounds <span class="token operator">=</span> wildcardType<span class="token punctuation">.</span><span class="token function">getUpperBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> lowerBounds <span class="token operator">=</span> wildcardType<span class="token punctuation">.</span><span class="token function">getLowerBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;upperBounds = &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>upperBounds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;lowerBounds = &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>lowerBounds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u58F0\u660E\u4E86\u4E00\u4E2A <code>private static Map&lt;? super String, ? extends Number&gt; map;</code> \u9759\u6001\u53D8\u91CF\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u6709\u4E24\u4E2A\u6CDB\u578B\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u6CDB\u578B\u53C2\u6570\u6307\u5B9A\u4E86\u4E0B\u9650\u4E3A <code>String</code>\uFF0C\u7B2C\u4E8C\u4E2A\u6CDB\u578B\u53C2\u6570\u6307\u5B9A\u4E86\u4E0A\u9650\u4E3A <code>Number</code>\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u5728 <code>main</code> \u65B9\u6CD5\u4E2D\u83B7\u53D6\u8FD9\u4E2A\u53D8\u91CF\u58F0\u660E\u7684\u6CDB\u578B\u53C2\u6570\u901A\u914D\u7B26\u5E76\u8F93\u51FA\u3002</p><p>\u4E0A\u8FF0\u4EE3\u7801\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>upperBounds <span class="token operator">=</span> <span class="token punctuation">[</span>class java.lang.Object<span class="token punctuation">]</span>
lowerBounds <span class="token operator">=</span> <span class="token punctuation">[</span>class java.lang.String<span class="token punctuation">]</span>
----------------------------------------------
upperBounds <span class="token operator">=</span> <span class="token punctuation">[</span>class java.lang.Number<span class="token punctuation">]</span>
lowerBounds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
----------------------------------------------
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u8F93\u51FA\u7ED3\u679C\u53EF\u4EE5\u770B\u51FA\uFF1A</p><ol><li>\u7B2C\u4E00\u4E2A\u6CDB\u578B\u53C2\u6570\u6CA1\u6709\u6307\u5B9A\u4E0A\u9650\uFF0C\u90A3\u4E48\u9ED8\u8BA4\u4E0A\u9650\u4E3A <code>Object</code>\uFF0C</li><li>\u7B2C\u4E00\u4E2A\u6CDB\u578B\u53C2\u6570\u6307\u5B9A\u4E86\u4E0B\u9650 <code>String</code>\uFF0C\u5B9E\u9645\u8F93\u51FA\u4E5F\u662F <code>String</code>\uFF0C</li><li>\u7B2C\u4E8C\u4E2A\u6CDB\u578B\u53C2\u6570\u6307\u5B9A\u4E86\u4E0A\u9650 <code>Number</code>\uFF0C\u5B9E\u9645\u8F93\u51FA\u4E5F\u662F <code>Number</code>\uFF0C</li><li>\u7B2C\u4E8C\u4E2A\u6CDB\u578B\u53C2\u6570\u6CA1\u6709\u6307\u5B9A\u4E0B\u9650\uFF0C\u90A3\u4E48\u9ED8\u8BA4\u4E0B\u9650\u4E3A <code>null</code>\uFF0C\u6570\u7EC4\u957F\u5EA6\u4E3A <code>0</code>\uFF0C\u4E0E <code>getLowerBounds</code> \u65B9\u6CD5\u6CE8\u91CA\u63CF\u8FF0\u76F8\u7B26\u3002</li></ol><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u6211\u4EEC\u901A\u8FC7\u672C\u7AE0\u7684\u5B66\u4E60\uFF0C\u5F00\u542F\u4E86\u53CD\u5C04\u77E5\u8BC6\u7684\u5927\u95E8\uFF0C\u4E3A\u63A5\u4E0B\u6765\u6211\u4EEC\u5B66\u4E60 <code>Retrofit</code> \u6253\u4E0B\u77E5\u8BC6\u50A8\u5907\u3002</p>`,73);function j(A,S){const a=i("RouterLink");return e(),t("div",null,[k,s("p",null,[d,o(a,{to:"/SourceCodeAnalysis/Retrofit/3.%E6%B3%9B%E5%9E%8B.html"},{default:c(()=>[m]),_:1}),v,y,g,b,T,f,w]),h])}var x=p(r,[["render",j],["__file","4.\u53CD\u5C04(\u4E00).html.vue"]]);export{x as default};
