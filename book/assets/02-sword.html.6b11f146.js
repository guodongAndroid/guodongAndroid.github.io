import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{o as l,c as r,a as n,b as a,w as o,d as s,e as c,r as p}from"./app.3b603edd.js";var u="/book/assets/02-00-idea.24c7388c.png";const d={},k=n("h1",{id:"sword-\u4E3A-kotlin-\u51FD\u6570\u589E\u52A0\u4EE3\u7406\u529F\u80FD-\u4E09",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sword-\u4E3A-kotlin-\u51FD\u6570\u589E\u52A0\u4EE3\u7406\u529F\u80FD-\u4E09","aria-hidden":"true"},"#"),s(" Sword - \u4E3A Kotlin \u51FD\u6570\u589E\u52A0\u4EE3\u7406\u529F\u80FD(\u4E09)")],-1),v=n("h2",{id:"\u7B80\u4ECB",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B80\u4ECB","aria-hidden":"true"},"#"),s(" \u7B80\u4ECB")],-1),m=n("p",null,"Sword\uFF1A\u4E00\u4E2A\u53EF\u4EE5\u7ED9 Kotlin \u51FD\u6570\u589E\u52A0\u4EE3\u7406\u7684\u7B2C\u4E09\u65B9\u5E93\uFF0C\u57FA\u4E8E KCP \u5B9E\u73B0\u3002",-1),b=s("Sword - \u4E3A Kotlin \u51FD\u6570\u589E\u52A0\u4EE3\u7406\u529F\u80FD(\u4E00)"),g=s("Sword - \u4E3A Kotlin \u51FD\u6570\u589E\u52A0\u4EE3\u7406\u529F\u80FD(\u4E8C)"),y=c(`<p>\u524D\u9762\u4E24\u7BC7\u6587\u7AE0\u7B14\u8005\u8BB0\u5F55\u4E86 <code>Sword</code> \u7684\u5B9E\u73B0\u8FC7\u7A0B\uFF0C\u672C\u7BC7\u6587\u7AE0\u7B80\u5355\u8BB0\u5F55\u4E0B\u5982\u4F55\u4F7F\u7528 <code>Sword</code> \u4EE5\u53CA\u5982\u4F55\u901A\u8FC7 <code>KSP</code> \u4E3A <code>InvocationHandler</code> \u751F\u6210 <code>FqName</code> \u7D22\u5F15\u7C7B <code>HandlerFqName</code>\u3002</p><p>\u4E0B\u9762\u6211\u4EEC\u5148\u770B\u4E0B\u5982\u4F55\u4F7F\u7528 <code>Sword</code> \u5427\u3002</p><h2 id="\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528" aria-hidden="true">#</a> \u5E94\u7528</h2><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// \`InvocationHandler\` \u5B9E\u73B0\u7C7B1</span>
<span class="token keyword">class</span> GetTextNoArgInvocationHandler <span class="token operator">:</span> InvocationHandler <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">val</span> TAG <span class="token operator">=</span> GetTextNoArgInvocationHandler<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">.</span>simpleName

    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">invoke</span><span class="token punctuation">(</span>className<span class="token operator">:</span> String<span class="token punctuation">,</span> methodName<span class="token operator">:</span> String<span class="token punctuation">,</span> args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>Any<span class="token operator">?</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Any<span class="token operator">?</span> <span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;invoke: className = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">className</span></span><span class="token string">, methodName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">methodName</span></span><span class="token string">, args(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">args<span class="token punctuation">.</span>size</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">args<span class="token punctuation">.</span><span class="token function">joinToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-literal singleline"><span class="token string">&quot;guodongAndroid-Debug&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \`InvocationHandler\` \u5B9E\u73B0\u7C7B2</span>
<span class="token keyword">class</span> GetTextArgInvocationHandler <span class="token operator">:</span> InvocationHandler <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">val</span> TAG <span class="token operator">=</span> GetTextArgInvocationHandler<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">.</span>simpleName

    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">invoke</span><span class="token punctuation">(</span>className<span class="token operator">:</span> String<span class="token punctuation">,</span> methodName<span class="token operator">:</span> String<span class="token punctuation">,</span> args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>Any<span class="token operator">?</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Any<span class="token operator">?</span> <span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;invoke: className = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">className</span></span><span class="token string">, methodName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">methodName</span></span><span class="token string">, args(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">args<span class="token punctuation">.</span>size</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">args<span class="token punctuation">.</span><span class="token function">joinToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">User</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;guodongAndroid-Debug&quot;</span></span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u7247\u6BB5\u4E2D\uFF0C\u7B14\u8005\u521B\u5EFA\u4E86\u4E24\u4E2A <code>InvocationHandler</code> \u5B9E\u73B0\u7C7B\uFF0C\u5BF9\u539F\u59CB\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u8FDB\u884C\u4E86\u66FF\u6362\uFF0C\u63A5\u4E0B\u6765\u521B\u5EFA\u6D4B\u8BD5\u7C7B\uFF1A</p><p><strong>\u5411 <code>Proxy</code> \u6CE8\u89E3\u4E2D\u7684 <code>handler</code> \u53C2\u6570\u6CE8\u5165 <code>InvocationHandler</code> \u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D(Fully Qualified Name)\uFF0C\u5176\u5B9E\u73B0\u7C7B\u5FC5\u987B\u6709\u65E0\u53C2\u6784\u9020\u65B9\u6CD5</strong>\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// \u6D4B\u8BD5\u7C7B</span>
<span class="token keyword">class</span> Test <span class="token punctuation">{</span>

    <span class="token annotation builtin">@Proxy</span><span class="token punctuation">(</span>
        enable <span class="token operator">=</span> BuildConfig<span class="token punctuation">.</span>isDebug<span class="token punctuation">,</span>
        <span class="token comment">// \u6CE8\u5165 \`InvocationHandler\` \u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D</span>
        handler <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.guodong.android.sword.app.GetTextNoArgInvocationHandler&quot;</span></span>
    <span class="token punctuation">)</span>
    <span class="token keyword">fun</span> <span class="token function">getTextNoArg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;guodongAndroid&quot;</span></span>

    <span class="token annotation builtin">@Proxy</span><span class="token punctuation">(</span>
        enable <span class="token operator">=</span> BuildConfig<span class="token punctuation">.</span>isDebug<span class="token punctuation">,</span>
        <span class="token comment">// \u6CE8\u5165 \`InvocationHandler\` \u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D</span>
        handler <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.guodong.android.sword.app.GetTextArgInvocationHandler&quot;</span></span>
    <span class="token punctuation">)</span>
    <span class="token keyword">fun</span> <span class="token function">getTextArg</span><span class="token punctuation">(</span>
        b<span class="token operator">:</span> Byte<span class="token punctuation">,</span>
        z<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>
        c<span class="token operator">:</span> Char<span class="token punctuation">,</span>
        s<span class="token operator">:</span> Short<span class="token punctuation">,</span>
        i<span class="token operator">:</span> Int<span class="token punctuation">,</span>
        l<span class="token operator">:</span> Long<span class="token punctuation">,</span>
        f<span class="token operator">:</span> Float<span class="token punctuation">,</span>
        d<span class="token operator">:</span> Double<span class="token punctuation">,</span>
        str<span class="token operator">:</span> String<span class="token punctuation">,</span>
        ia<span class="token operator">:</span> IntArray<span class="token punctuation">,</span>
        sa<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">,</span>
        ls<span class="token operator">:</span> List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">,</span>
        lls<span class="token operator">:</span> List<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        map<span class="token operator">:</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">&gt;</span><span class="token punctuation">,</span>
        user<span class="token operator">:</span> User<span class="token punctuation">,</span>
        callback<span class="token operator">:</span> Callback<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token operator">:</span> User <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">User</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;guodongAndroid-Release&quot;</span></span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B14\u8005\u521B\u5EFA\u4E86\u4E24\u4E2A\u6D4B\u8BD5\u51FD\u6570\uFF1A<code>getTextNoArg</code> \u548C <code>getTextArg</code>\uFF0C\u4E00\u4E2A\u51FD\u6570\u6CA1\u6709\u53C2\u6570\uFF0C\u53E6\u4E00\u4E2A\u51FD\u6570\u6709\u591A\u4E2A\u4E0D\u540C\u7C7B\u578B\u7684\u53C2\u6570\u3002\u8FD9\u4E24\u4E2A\u51FD\u6570\u4E0A\u90FD\u6709 <code>Proxy</code> \u6CE8\u89E3\uFF0C\u5E76\u4E14\u6CE8\u89E3\u7684\u53C2\u6570 <code>enable</code> \u90FD\u5904\u4E8E\u5F00\u542F\u72B6\u6001\uFF0C<code>handler</code> \u53C2\u6570\u90FD\u6CE8\u5165\u4E86\u5BF9\u5E94 <code>InvocationHandler</code> \u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D\u3002</p><p>\u4E0B\u9762\u6267\u884C\u6D4B\u8BD5\u903B\u8F91\uFF0C\u5206\u522B\u8C03\u7528\u4E0A\u8FF0\u4E24\u4E2A\u51FD\u6570\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> test <span class="token operator">=</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">val</span> textNoArg <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">getTextNoArg</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;onCreate: textNoArg = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">textNoArg<span class="token punctuation">.</span>length</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">val</span> textArg <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">getTextArg</span><span class="token punctuation">(</span>
    <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span>
    <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token number">1F</span><span class="token punctuation">,</span>
    <span class="token number">1.0</span><span class="token punctuation">,</span>
    <span class="token string-literal singleline"><span class="token string">&quot;test&quot;</span></span><span class="token punctuation">,</span>
    <span class="token function">intArrayOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">User</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;1&quot;</span></span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">object</span> <span class="token operator">:</span> Callback <span class="token punctuation">{</span>
        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onFailure</span><span class="token punctuation">(</span>cause<span class="token operator">:</span> Throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;onCreate: textArg = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">textArg</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u59CB\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-logcat ext-logcat line-numbers-mode"><pre class="language-logcat"><code>1.MainActivity: onCreate: textNoArg = 14
2.MainActivity: onCreate: textArg = User(name=guodongAndroid-Release, age=28)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7406\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-logcat ext-logcat line-numbers-mode"><pre class="language-logcat"><code>1.GetTextNoArgInvocationHandler: invoke: className = Test, methodName = getTextNoArg, args(0) = 
2.MainActivity: onCreate: textNoArg = 20
3.GetTextArgInvocationHandler: invoke: className = Test, methodName = getTextArg, args(16) = 1, false, A, 1, 1, 1, 1.0, 1.0, test, [I@156552e7, [Ljava.lang.String;@110de94, [], [], {}, User(name=1, age=1), com.guodong.android.sword.app.MainActivity$onCreate$textArg$2@12780d3d
4.onCreate: textArg = User(name=guodongAndroid-Debug, age=18)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u8F93\u51FA\u7ED3\u679C\u53EF\u4EE5\u770B\u51FA\uFF0C<code>Proxy</code> \u6CE8\u89E3\u751F\u6548\u4E86\uFF1A\u8C03\u7528\u4E0A\u8FF0\u4E24\u4E2A\u51FD\u6570\u540E\u6210\u529F\u6267\u884C\u4E86\u4EE3\u7406\u7C7B\u7684 <code>invoke</code> \u51FD\u6570\u3002</p><p>\u81F3\u6B64\uFF0C<code>Sword</code> \u7684\u4F7F\u7528\u5C31\u7ED3\u675F\u4E86\uFF0C\u662F\u4E0D\u662F\u6BD4\u8F83\u7B80\u5355\u5462\uFF1F</p><p>\u4F46\u662F\u8FD9\u91CC\u6709\u4E2A\u95EE\u9898\uFF1A\u6211\u4EEC\u5728\u7ED9 <code>Proxy</code> \u6CE8\u89E3\u7684 <code>handler</code> \u53C2\u6570\u6CE8\u5165 <code>InvocationHandler</code> \u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D\u65F6\u4F7F\u7528\u7684\u662F\u786C\u7F16\u7801\uFF0C\u5982\u679C\u6211\u4EEC\u4FEE\u6539\u4E86\u5B9E\u73B0\u7C7B\u7684\u7C7B\u540D\uFF0C\u800C\u5FD8\u8BB0\u4FEE\u6539\u6B64\u5904\u7684\u5168\u9650\u5B9A\u540D\uFF0C\u4EE3\u7801\u5728\u8FD0\u884C\u65F6\u5C31\u4F1A\u53D1\u751F\u9519\u8BEF\u4E86\u3002</p><p>\u9488\u5BF9\u8FD9\u4E2A\u95EE\u9898\uFF0C\u7B14\u8005\u7684\u7B2C\u4E00\u60F3\u6CD5\u662F\u4F7F\u7528 <code>handler = GetTextNoArgInvocationHandler::class.java.name</code>\uFF0C\u4F46\u662F\u4E0D\u884C\uFF0C<strong>\u6CE8\u89E3\u53C2\u6570\u5FC5\u987B\u662F\u7F16\u8BD1\u671F\u5E38\u91CF</strong>\uFF0C\u6B64\u8DEF\u4E0D\u901A\u4E86\u3002</p><p>\u540E\u9762\u7B14\u8005\u60F3\u5230\u4E00\u79CD\u65B9\u6848\uFF1A\u4E3A <code>InvocationHandler</code> \u7684\u5B9E\u73B0\u7C7B\u751F\u6210\u5168\u9650\u5B9A\u540D\u7D22\u5F15\u3002</p><p>\u6B64\u65B9\u6848\u53C2\u8003\u81EA <code>EventBus</code> \u4E3A <code>Event</code> \u4E8B\u4EF6\u751F\u6210 <code>EventIndex</code> \uFF0C\u4E0D\u8FC7 <code>EventBus</code> \u4F7F\u7528 <code>APT</code> \u6280\u672F\u8FDB\u884C\u5B9E\u73B0\uFF0C\u800C <code>Sword</code> \u9009\u62E9\u4F7F\u7528 <code>KSP</code> \u5B9E\u73B0\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u5C31\u770B\u770B\u5982\u4F55\u4E3A <code>InvocationHandler</code> \u7684\u5B9E\u73B0\u7C7B\u751F\u6210\u5168\u9650\u5B9A\u540D\u7D22\u5F15\u5427\u3002</p><p>\u9996\u5148\u770B\u4E0B\u6700\u540E\u7684\u7D22\u5F15\u7C7B <code>HandlerFqName</code> \u6548\u679C\uFF1A</p><h2 id="handlerfqname" tabindex="-1"><a class="header-anchor" href="#handlerfqname" aria-hidden="true">#</a> HandlerFqName</h2><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// The file is automatic generated by Sword, don&#39;t modify it.</span>
<span class="token keyword">package</span> com<span class="token punctuation">.</span>guodong<span class="token punctuation">.</span>android<span class="token punctuation">.</span>sword<span class="token punctuation">.</span>app

<span class="token keyword">import</span> kotlin<span class="token punctuation">.</span>String

<span class="token comment">/**
 * The class is automatic generated by Sword, don&#39;t modify it.
 *
 * [com.guodong.android.sword.api.kt.InvocationHandler]\u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D
 */</span>
<span class="token keyword">public</span> <span class="token keyword">object</span> HandlerFqName <span class="token punctuation">{</span>
  <span class="token comment">/**
   * [com.guodong.android.sword.app.GetTextArgInvocationHandler]
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token keyword">val</span> GetTextArgInvocationHandler<span class="token operator">:</span> String <span class="token operator">=</span>
      <span class="token string-literal singleline"><span class="token string">&quot;com.guodong.android.sword.app.GetTextArgInvocationHandler&quot;</span></span>

  <span class="token comment">/**
   * [com.guodong.android.sword.app.GetTextNoArgInvocationHandler]
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token keyword">val</span> GET_TEXT_NO_ARG<span class="token operator">:</span> String <span class="token operator">=</span>
      <span class="token string-literal singleline"><span class="token string">&quot;com.guodong.android.sword.app.GetTextNoArgInvocationHandler&quot;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="proxyhandler" tabindex="-1"><a class="header-anchor" href="#proxyhandler" aria-hidden="true">#</a> ProxyHandler</h2><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">/**
 * \u6807\u8BB0[InvocationHandler]\u7684\u5B9E\u73B0\u7C7B, \u4E3A\u5176\u751F\u6210\`FqName\`\u7D22\u5F15\u7C7B\`HandlerFqName\`
 *
 * \u4F7F\u7528 ksp \u5B9E\u73B0
 */</span>
<span class="token annotation builtin">@Target</span><span class="token punctuation">(</span>AnnotationTarget<span class="token punctuation">.</span>CLASS<span class="token punctuation">)</span>
<span class="token annotation builtin">@Retention</span><span class="token punctuation">(</span>AnnotationRetention<span class="token punctuation">.</span>BINARY<span class="token punctuation">)</span>
<span class="token keyword">annotation</span> <span class="token keyword">class</span> <span class="token function">ProxyHandler</span><span class="token punctuation">(</span>
    <span class="token comment">/**
     * \u751F\u6210\u5B57\u6BB5\u7684\u540D\u79F0, \u9ED8\u8BA4\u4E3A\u7C7B\u540D
     *
     * \`paramName\`\u53C2\u6570\u540D\u79F0\u4E0D\u8981\u968F\u610F\u53D8\u52A8
     */</span>
    <span class="token keyword">val</span> paramName<span class="token operator">:</span> String <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>api-kotlin</code> \u6A21\u5757\u4E2D\u65B0\u589E <code>ProxyHandler</code> \u6CE8\u89E3\uFF0C\u6B64\u6CE8\u89E3\u7528\u4E8E\u6807\u8BB0 <code>InvocationHandler</code> \u7684\u5B9E\u73B0\u7C7B\uFF0C\u4E3A\u5176\u751F\u6210<code>FqName</code>\u7D22\u5F15\uFF0C\u6BD4\u5982\u6211\u4EEC\u6807\u8BB0\u5728 <code>GetTextNoArgInvocationHandler</code> \u7C7B\u4E0A\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@ProxyHandler</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;GET_TEXT_NO_ARG&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">class</span> GetTextNoArgInvocationHandler <span class="token operator">:</span> InvocationHandler
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D <code>paramName</code> \u53C2\u6570\u53EF\u4EE5\u6307\u5B9A\u751F\u6210\u5B57\u6BB5\u7684\u540D\u79F0\uFF0C\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E\uFF0C\u9ED8\u8BA4\u751F\u6210\u7684\u5B57\u6BB5\u540D\u79F0\u4E3A\u5B9E\u73B0\u7C7B\u7684\u7C7B\u540D\uFF1A<code>HandlerFqName.GetTextArgInvocationHandler</code>\u3002</p><h2 id="ksp" tabindex="-1"><a class="header-anchor" href="#ksp" aria-hidden="true">#</a> KSP</h2>`,30),w={href:"https://github.com/google/ksp",target:"_blank",rel:"noopener noreferrer"},f=s("KSP"),h=s(" \u57FA\u4E8E "),A=n("code",null,"KCP",-1),x=s(" \u5B9E\u73B0\uFF0C\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7B80\u5316\u7684\u7F16\u8BD1\u5668\u63D2\u4EF6 API\uFF0C\u4E0E "),N=n("code",null,"KCP",-1),_=s(" \u9661\u5CED\u7684\u5B66\u4E60\u66F2\u7EBF\u76F8\u6BD4\uFF0C"),H=n("code",null,"KSP",-1),q=s(" \u7684\u5B66\u4E60\u66F2\u7EBF\u8981\u5E73\u6ED1\u4E00\u4E9B\u3002\u3001"),S=s("\u5982\u4F55\u4F7F\u7528 "),T=n("code",null,"KSP",-1),I=s(" \u8BFB\u8005\u53EF\u4EE5\u53C2\u8003"),P={href:"https://github.com/google/ksp",target:"_blank",rel:"noopener noreferrer"},C=s("\u5B98\u7F51"),E=s("\uFF0C\u672C\u6587\u5C31\u4E0D\u8BB0\u5F55\u642D\u5EFA "),K=n("code",null,"KSP",-1),G=s(" \u5F00\u53D1\u73AF\u5883\u4E86\uFF0C\u76F4\u63A5\u8FDB\u5165\u6B63\u9898\u3002"),L=c('<p>\u7B14\u8005\u5148\u63CF\u8FF0\u4E0B\u81EA\u5DF1\u7684\u5B9E\u73B0\u601D\u8DEF\uFF1A</p><ol><li>\u9996\u5148\u5224\u65AD\u5F53\u524D\u6A21\u5757\u662F\u5426\u6709 <code>InvocationHandler</code> \u63A5\u53E3\uFF0C\u5982\u82E5\u6CA1\u6709\uFF0C\u5219\u4E0D\u5904\u7406\uFF0C</li><li>\u5176\u6B21\u5224\u65AD\u5F53\u524D\u6A21\u5757\u662F\u5426\u6709 <code>ProxyHandler</code> \u6CE8\u89E3\uFF0C\u5982\u82E5\u6CA1\u6709\uFF0C\u5219\u4E0D\u5904\u7406\uFF0C</li><li>\u4EE5\u4E0A\u4E24\u4E2A\u6761\u4EF6\u90FD\u6EE1\u8DB3\u7684\uFF0C\u518D\u83B7\u53D6\u5305\u542B <code>ProxyHandler</code> \u6CE8\u89E3\u7684\u6240\u6709 <code>Kotlin</code> \u7B26\u53F7\uFF0C</li><li>\u5BF9\u83B7\u53D6\u7684 <code>Kotlin</code> \u7B26\u53F7\u8FDB\u884C\u51E0\u79CD\u6761\u4EF6\u8FC7\u6EE4\uFF0C\u76EE\u7684\u662F\u786E\u4FDD\u6B64\u7B26\u53F7\u662F <code>InvocationHandler</code> \u63A5\u53E3\u7684\u5B9E\u73B0\u7C7B\uFF0C\u8FC7\u6EE4\u6761\u4EF6\uFF1A <ol><li>\u5224\u65AD\u662F\u5426\u662F\u7C7B\uFF0C\u800C\u4E0D\u662F\u63A5\u53E3\u3001\u679A\u4E3E\u7C7B\u7B49\uFF0C</li><li>\u5224\u65AD\u7C7B\u662F\u5426\u662F\u516C\u5F00\u4E14\u4E0D\u662F\u62BD\u8C61\u7C7B\uFF0C\u786E\u4FDD\u5F53\u524D\u7C7B\u53EF\u4EE5\u8BBF\u95EE\u5E76\u76F4\u63A5\u5B9E\u4F8B\u5316\uFF0C</li><li>\u5224\u65AD\u662F\u5426\u6709\u4E3B\u6784\u9020\u65B9\u6CD5\u6216\u4E3B\u6784\u9020\u65B9\u6CD5\u6CA1\u6709\u53C2\u6570\uFF0C\u786E\u4FDD\u6709\u65E0\u53C2\u6784\u9020\u65B9\u6CD5\uFF0C</li><li>\u6700\u540E\u5224\u65AD\u5F53\u524D\u7C7B\u662F\u5426\u5B9E\u73B0\u4E86 <code>InvocationHandler</code> \u63A5\u53E3\u3002</li></ol></li><li>\u901A\u8FC7\u8FC7\u6EE4\u540E\u7684\u7B26\u53F7\uFF0C\u6536\u96C6\u5E76\u5B58\u50A8\u8981\u751F\u6210\u7684\u5B57\u6BB5\u540D\u548C\u5168\u9650\u5B9A\u540D\uFF0C</li><li>\u6700\u540E\u901A\u8FC7 <code>KotlinPoet</code> \u751F\u6210\u7D22\u5F15\u7C7B\u3002</li></ol><p><img src="'+u+`" alt="idea"></p><p>\u4E0B\u9762\u6839\u636E\u5B9E\u73B0\u601D\u8DEF\u4F9D\u6B21\u5B9E\u73B0\u3002 \u9996\u5148\u5B9A\u4E49\u4E00\u4E9B\u5E38\u91CF\uFF0C\u7528\u4E8E\u540E\u9762\u4EE3\u7801\u7684\u7F16\u5199\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u5E94\`ProxyHandler\`\u6CE8\u89E3\u91CC\u7684\`paramName\`\u53C2\u6570\u540D\u79F0</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token keyword">val</span> PARAM_NAME <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;paramName&quot;</span></span>

    <span class="token comment">// \u751F\u6210\u7D22\u5F15\u7C7B\u7684\u5305\u540D\uFF0C\u63D0\u4F9B\u7ED9\u5916\u90E8\u914D\u7F6E\uFF0C\u9ED8\u8BA4\`com.guodong.android.sword\`</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token keyword">val</span> PACKAGE_NAME_PARAM_NAME <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;sword.pkg&quot;</span></span>

    <span class="token comment">// \u9ED8\u8BA4\u7D22\u5F15\u7C7B\u7684\u5305\u540D</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token keyword">val</span> DEFAULT_PACKAGE_NAME <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.guodong.android.sword&quot;</span></span>
    
    <span class="token comment">// \u7D22\u5F15\u7C7B\u6240\u5728\u6587\u4EF6\u540D</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token keyword">val</span> FILE_NAME <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;HandlerFqName&quot;</span></span>
    
    <span class="token comment">// \u7D22\u5F15\u7C7B\u7684\u7C7B\u540D</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token keyword">val</span> CLASS_NAME <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;HandlerFqName&quot;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u5B9A\u4E49\u4E00\u4E2A\u5B9E\u4F53\uFF0C\u7528\u4E8E\u5B58\u50A8\u751F\u6210\u7684\u5B57\u6BB5\u540D\u548C\u5168\u9650\u5B9A\u540D\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">ProxyHandlerParam</span><span class="token punctuation">(</span>
    <span class="token comment">/**
     * \u53C2\u6570\u540D\u79F0, \u9ED8\u8BA4\u4E3A\u7C7B\u540D
     */</span>
    <span class="token keyword">val</span> paramName<span class="token operator">:</span> String<span class="token punctuation">,</span>

    <span class="token comment">/**
     * [InvocationHandler]\u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D
     *
     * e.g. com.example.ProxyTestInvocationHandler
     */</span>
    <span class="token keyword">val</span> fqName<span class="token operator">:</span> String<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u4E3B\u8981\u5206\u6790 <code>SymbolProcessor</code> \u7684 <code>process(resolver: Resolver)</code> \u51FD\u6570\uFF0C\u4E0B\u9762\u4EE3\u7801\u662F\u601D\u8DEF\u4E2D\u524D\u4E24\u6B65\u7684\u5177\u4F53\u5B9E\u73B0\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">private</span> <span class="token keyword">val</span> mInvocationHandlerName <span class="token operator">=</span> <span class="token function">requireNotNull</span><span class="token punctuation">(</span>InvocationHandler<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>qualifiedName<span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token keyword">val</span> mProxyHandlerName <span class="token operator">=</span> <span class="token function">requireNotNull</span><span class="token punctuation">(</span>ProxyHandler<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>qualifiedName<span class="token punctuation">)</span>

<span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">process</span><span class="token punctuation">(</span>resolver<span class="token operator">:</span> Resolver<span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>KSAnnotated<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD\u5F53\u524D\u6A21\u5757\u662F\u5426\u6709 \`InvocationHandler\` \u63A5\u53E3\uFF0C\u5982\u82E5\u6CA1\u6709\uFF0C\u5219\u4E0D\u5904\u7406</span>
    <span class="token keyword">val</span> mProxyHandlerType <span class="token operator">=</span>
    	resolver<span class="token punctuation">.</span><span class="token function">getClassDeclarationByName</span><span class="token punctuation">(</span>mProxyHandlerName<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">asType</span><span class="token punctuation">(</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mProxyHandlerType <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">TAG</span></span><span class="token string">: Not found \`ProxyHandler\`&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5224\u65AD\u5F53\u524D\u6A21\u5757\u662F\u5426\u6709 \`ProxyHandler\` \u6CE8\u89E3\uFF0C\u5982\u82E5\u6CA1\u6709\uFF0C\u5219\u4E0D\u5904\u7406</span>
    <span class="token keyword">val</span> mInvocationHandlerType <span class="token operator">=</span>
    	resolver<span class="token punctuation">.</span><span class="token function">getClassDeclarationByName</span><span class="token punctuation">(</span>mInvocationHandlerName<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">asType</span><span class="token punctuation">(</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mInvocationHandlerType <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">TAG</span></span><span class="token string">: Not found \`InvocationHandler\`&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    
    <span class="token operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u5305\u542B <code>ProxyHandler</code> \u6CE8\u89E3\u7684\u6240\u6709 <code>Kotlin</code> \u7B26\u53F7\u6BD4\u8F83\u7B80\u5355\uFF0C\u901A\u8FC7 <code>KSP</code> \u63D0\u4F9B\u7684 API\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5F88\u65B9\u4FBF\u7684\u83B7\u53D6\u5230\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> symbols <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">getSymbolsWithAnnotation</span><span class="token punctuation">(</span>mProxyHandlerName<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6839\u636E\u5B9E\u73B0\u601D\u8DEF\u7684\u7B2C\u56DB\u6B65\u8FC7\u6EE4\u6211\u4EEC\u83B7\u53D6\u5230\u7684\u7B26\u53F7\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> classDeclaration <span class="token operator">=</span> symbols
	<span class="token punctuation">.</span><span class="token function">filter</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
	<span class="token punctuation">.</span>filterIsInstance<span class="token operator">&lt;</span>KSClassDeclaration<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">filter</span> <span class="token punctuation">{</span> declaration <span class="token operator">-&gt;</span>
         <span class="token comment">// Class</span>
         <span class="token keyword">val</span> isClass <span class="token operator">=</span> declaration<span class="token punctuation">.</span>classKind <span class="token operator">==</span> ClassKind<span class="token punctuation">.</span>CLASS

         <span class="token comment">// Public &amp;&amp; !Abstract</span>
         <span class="token keyword">val</span> isPublic <span class="token operator">=</span>
         Modifier<span class="token punctuation">.</span>PUBLIC <span class="token keyword">in</span> declaration<span class="token punctuation">.</span>modifiers <span class="token operator">||</span> declaration<span class="token punctuation">.</span>modifiers<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token keyword">val</span> isNotAbstract <span class="token operator">=</span> Modifier<span class="token punctuation">.</span>ABSTRACT <span class="token operator">!</span><span class="token keyword">in</span> declaration<span class="token punctuation">.</span>modifiers

         <span class="token comment">// \u65E0\u53C2\u6784\u9020\u65B9\u6CD5</span>
         <span class="token keyword">val</span> primaryConstructor <span class="token operator">=</span> declaration<span class="token punctuation">.</span>primaryConstructor
         <span class="token keyword">val</span> hasNoArgumentConstructor <span class="token operator">=</span>
         primaryConstructor <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> primaryConstructor<span class="token punctuation">.</span>parameters<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

         <span class="token comment">// \u5B9E\u73B0\`InvocationHandler\`\u63A5\u53E3</span>
         <span class="token keyword">val</span> isImplInvocationHandler <span class="token operator">=</span>
         declaration<span class="token punctuation">.</span>superTypes<span class="token punctuation">.</span><span class="token function">any</span> <span class="token punctuation">{</span> ref <span class="token operator">-&gt;</span> ref<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> mInvocationHandlerType <span class="token punctuation">}</span>

         isClass <span class="token operator">&amp;&amp;</span> isPublic <span class="token operator">&amp;&amp;</span> isNotAbstract <span class="token operator">&amp;&amp;</span> hasNoArgumentConstructor <span class="token operator">&amp;&amp;</span> isImplInvocationHandler
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FC7\u6EE4\u7B26\u53F7\u540E\uFF0C\u5C31\u53EF\u4EE5\u6536\u96C6\u5E76\u5B58\u50A8\u8981\u751F\u6210\u7684\u5B57\u6BB5\u540D\u548C\u5168\u9650\u5B9A\u540D\u4E86\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> params <span class="token operator">=</span> mutableListOf<span class="token operator">&lt;</span>ProxyHandlerParam<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>declaration <span class="token keyword">in</span> classDeclaration<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">annotation</span> <span class="token keyword">in</span> declaration<span class="token punctuation">.</span>annotations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8FD9\u91CC\u7B14\u8005\u6CA1\u6709\u5224\u65AD\u5F53\u524D\`annotation\`\u662F\u5426\u662F\`ProxyHandler\`\u53EF\u80FD\u4F1A\u5B58\u5728\u95EE\u9898</span>
        <span class="token comment">// \u56E0\u4E3A\`resolve()\`\u51FD\u6570\u7684\u6CE8\u91CA\u4E2D\u63CF\u8FF0\u8C03\u7528\u6B64\u51FD\u6570\u7684\u4EE3\u4EF7\u6BD4\u8F83\u6602\u8D35, \u5E94\u5C3D\u53EF\u80FD\u907F\u514D\u8C03\u7528\uFF0C\u8FD9\u91CC\u53C8\u662F\u5728\u904D\u5386\u4E2D\u8C03\u7528\uFF0C\u6240\u4EE5\u7B14\u8005\u5C31\u6CA1\u6709\u5224\u65AD</span>
        <span class="token comment">// \u5982\u679C\u5B58\u5728\u95EE\u9898\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7ED9\`ProxyHandler\`\u6CE8\u89E3\u7684\`paramName\`\u53C2\u6570\u6362\u4E2A\u552F\u4E00\u4E0D\u4F1A\u91CD\u590D\u7684\u540D\u79F0</span>
        <span class="token comment">/*if (annotation.annotationType.resolve() != mProxyHandlerType) {
            continue
        }*/</span>
        
        <span class="token keyword">for</span> <span class="token punctuation">(</span>argument <span class="token keyword">in</span> <span class="token keyword">annotation</span><span class="token punctuation">.</span>arguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">val</span> name <span class="token operator">=</span> argument<span class="token punctuation">.</span>name<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?:</span> <span class="token keyword">continue</span>
            <span class="token comment">// \u5224\u65AD\u662F\u5426\u662F\`ProxyHandler\`\u6CE8\u89E3\u4E2D\u7684\u53C2\u6570\u540D\u79F0</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> PARAM_NAME<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u83B7\u53D6\u6CE8\u89E3\u4E2D\u7684\u53C2\u6570\u503C</span>
                <span class="token keyword">val</span> value<span class="token operator">:</span> String <span class="token operator">=</span> argument<span class="token punctuation">.</span>value <span class="token keyword">as</span><span class="token operator">?</span> String <span class="token operator">?:</span> <span class="token keyword">continue</span>
                <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D</span>
                <span class="token keyword">val</span> fqName<span class="token operator">:</span> String <span class="token operator">=</span> declaration<span class="token punctuation">.</span>qualifiedName<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?:</span> <span class="token keyword">continue</span>

                <span class="token comment">// \u5982\u679C\u6CE8\u89E3\u6CA1\u6709\u6CE8\u5165\u53C2\u6570\u540D\u5219\u4F7F\u7528\u7C7B\u540D</span>
                <span class="token keyword">val</span> paramName <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">ifEmpty</span> <span class="token punctuation">{</span> declaration<span class="token punctuation">.</span>simpleName<span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
                
                <span class="token comment">// \u6536\u96C6\u5B58\u50A8</span>
                <span class="token keyword">val</span> param <span class="token operator">=</span> <span class="token function">ProxyHandlerParam</span><span class="token punctuation">(</span>paramName<span class="token punctuation">,</span> fqName<span class="token punctuation">)</span>
                params<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6536\u96C6\u6211\u4EEC\u6240\u9700\u7684\u6570\u636E\u540E\uFF0C\u6700\u540E\u5C31\u53EF\u4EE5\u751F\u6210\u7D22\u5F15\u7C7B\u4E86\uFF0C\u7B14\u8005\u4F7F\u7528 <code>KotlinPoet</code> \u6765\u751F\u6210\u7D22\u5F15\u7C7B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// \u6784\u5EFA\u7C7B\u4E2D\u7684\u5168\u9650\u5B9A\u540D\u5C5E\u6027</span>
<span class="token keyword">val</span> propertySpecs <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> param <span class="token operator">-&gt;</span>
    PropertySpec<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span>paramName<span class="token punctuation">,</span> String<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>KModifier<span class="token punctuation">.</span>CONST<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">initializer</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;%S&quot;</span></span><span class="token punctuation">,</span> param<span class="token punctuation">.</span>fqName<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addKdoc</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">param<span class="token punctuation">.</span>fqName</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6784\u5EFA\`HandlerFqName\`\u7C7B</span>
<span class="token keyword">val</span> type <span class="token operator">=</span> TypeSpec<span class="token punctuation">.</span><span class="token function">objectBuilder</span><span class="token punctuation">(</span>CLASS_NAME<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addKdoc</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;The class is automatic generated by Sword, don&#39;t modify it.\\n\\n&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addKdoc</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">mInvocationHandlerName</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]\u5B9E\u73B0\u7C7B\u7684\u5168\u9650\u5B9A\u540D&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addProperties</span><span class="token punctuation">(</span>propertySpecs<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u83B7\u53D6\u5305\u540D</span>
<span class="token keyword">val</span> pkg <span class="token operator">=</span> env<span class="token punctuation">.</span>options<span class="token punctuation">[</span>PACKAGE_NAME_PARAM_NAME<span class="token punctuation">]</span>
<span class="token keyword">val</span> packageName <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pkg<span class="token punctuation">.</span><span class="token function">isNullOrEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    DEFAULT_PACKAGE_NAME
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    pkg
<span class="token punctuation">}</span>

<span class="token comment">// \u6784\u5EFA\`HandlerFqName\`\u6587\u4EF6</span>
<span class="token keyword">val</span> fileBuilder <span class="token operator">=</span> FileSpec<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>packageName<span class="token punctuation">,</span> FILE_NAME<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addFileComment</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;The file is automatic generated by Sword, don&#39;t modify it.&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>

<span class="token comment">// \u521B\u5EFA\u751F\u6210\u6587\u4EF6\u7684\u4F9D\u8D56\u5173\u7CFB</span>
<span class="token keyword">val</span> sources <span class="token operator">=</span>
    classDeclaration<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>containingFile <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">filterNotNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toTypedArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> dependencies <span class="token operator">=</span> <span class="token function">Dependencies</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">*</span>sources<span class="token punctuation">)</span>

<span class="token comment">// \u751F\u6210\u7D22\u5F15\u7C7B</span>
fileBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeTo</span><span class="token punctuation">(</span>codegen<span class="token punctuation">,</span> dependencies<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u6B64\uFF0C\u901A\u8FC7 <code>KSP</code> \u751F\u6210\u7D22\u5F15\u7C7B\u5B8C\u6210\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u672C\u6587\u7B80\u5355\u8BB0\u5F55\u4E86 <code>Sword</code> \u7684\u4F7F\u7528\u65B9\u5F0F\uFF0C\u4EE5\u53CA\u5728\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u53D1\u73B0\u7684\u95EE\u9898\uFF0C\u6700\u540E\u4F7F\u7528 <code>KSP</code> \u89E3\u51B3\u95EE\u9898\u7684\u8FC7\u7A0B\u3002\u5728\u89E3\u51B3\u95EE\u9898\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u7B14\u8005\u53C2\u8003 <code>EventBus</code> \u7684\u5B9E\u73B0\uFF0C\u7ED3\u5408\u95EE\u9898\u672C\u8EAB\u7684\u903B\u8F91\uFF0C\u5F62\u6210\u81EA\u5DF1\u7684\u89E3\u51B3\u65B9\u6848\u3002</p><p>\u901A\u8FC7\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u7684\u8FC7\u7A0B\uFF0C\u7B14\u8005\u611F\u53D7\u5230\u5B66\u4E60\u5F00\u6E90\u9879\u76EE\u7684\u9B45\u529B\uFF0C\u5F53\u6211\u4EEC\u9047\u5230\u95EE\u9898\u65F6\uFF0C\u6216\u8BB8\u5F00\u6E90\u9879\u76EE\u4E5F\u9047\u5230\u8FC7\u7C7B\u4F3C\u95EE\u9898\u5E76\u6709\u6210\u719F\u7684\u89E3\u51B3\u65B9\u6848\u4F9B\u6211\u4EEC\u53C2\u8003\u3002</p><p>\u6700\u8FD1\u7B14\u8005\u5BF9 <code>Sword</code> \u7684\u529F\u80FD\u5B9E\u73B0\u6709\u65B0\u7684\u60F3\u6CD5\uFF1A\u901A\u8FC7 <code>Kotlin IR</code> \u8FDB\u884C\u5B9E\u73B0\u3002</p><p>\u76EE\u524D\u8FD9\u53EA\u662F\u4E00\u4E2A\u521D\u6B65\u60F3\u6CD5\uFF0C\u7406\u8BBA\u4E0A\u5B9E\u73B0\u8D77\u6765\u5E94\u8BE5\u6BD4\u4F7F\u7528 <code>ASM</code> \u7B80\u5355\u4E00\u4E9B\u5427\uFF0C\u5F85\u7B14\u8005\u5B9E\u73B0\u540E\u518D\u8BB0\u5F55\u4E00\u4E0B\u5427\u3002</p><p>\u4E0B\u7BC7\u518D\u89C1\uFF0Chappy~</p>`,24);function M(F,B){const e=p("RouterLink"),t=p("ExternalLinkIcon");return l(),r("div",null,[k,v,m,n("ol",null,[n("li",null,[a(e,{to:"/OpenSourceProject/Sword/00-sword.html"},{default:o(()=>[b]),_:1})]),n("li",null,[a(e,{to:"/OpenSourceProject/Sword/01-sword.html"},{default:o(()=>[g]),_:1})])]),y,n("p",null,[n("a",w,[f,a(t)]),h,A,x,N,_,H,q]),n("p",null,[S,T,I,n("a",P,[C,a(t)]),E,K,G]),L])}var D=i(d,[["render",M],["__file","02-sword.html.vue"]]);export{D as default};
