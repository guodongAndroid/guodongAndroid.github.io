import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,a,b as t,e as p,d as n,r as l}from"./app.9dba3054.js";const i={},u=p('<h1 id="\u4FEE\u6539linphone-sdk-android-\u4E0A\u7BC7" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539linphone-sdk-android-\u4E0A\u7BC7" aria-hidden="true">#</a> \u4FEE\u6539linphone-sdk-android-\u4E0A\u7BC7</h1><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>\u8BB0\u5F55\u4FEE\u6539linphone-sdk-android\u8FC7\u7A0B\uFF0C\u8BA1\u5212\u5206\u4E3A\u4E0A\u3001\u4E2D\u3001\u4E0B\u4E09\u7BC7</p><p>\u672C\u6587\u662F\u4E0A\u7BC7\uFF0C\u672C\u7BC7\u4EC5\u8BB0\u5F55\u4E0B\u4E66\u95EE\u98982\u7684\u521D\u6B65\u6392\u67E5\u8FC7\u7A0B\uFF0C\u5C3D\u91CF\u63CF\u8FF0\u6392\u67E5\u95EE\u9898\u8FC7\u7A0B\u4E2D\u7684\u601D\u8DEF\u4E0E\u65B9\u5411</p><p>\u4F59\u4E0B\u4E24\u7BC7\u8BB0\u5F55\u95EE\u98981\u30012\u7684\u4FEE\u6539\u8FC7\u7A0B</p><h2 id="\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#\u80CC\u666F" aria-hidden="true">#</a> \u80CC\u666F</h2>',6),k=n("\u63A5\u4E0A\u6587"),r={href:"https://juejin.cn/post/7087496636657565727",target:"_blank",rel:"noopener noreferrer"},d=n("\u7F16\u8BD1linphone-sdk-android"),v=p(`<p>\u9879\u76EE\u4E2D\u4F7F\u7528\u7684linphone-sdk-android\u7248\u672C\u4E3A4.5.x\uFF0C\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u53D1\u73B0\u4EE5\u4E0B\u4E24\u4E2A\u95EE\u9898\uFF1A</p><ol><li>\u6253\u5F00\u97F3\u9891\u7F16\u89E3\u7801G722\u3001G729\u65F6\uFF0C\u53D1\u8D77\u547C\u53EB\u7684INVITE SDP\u4E2D\uFF0C\u6CA1\u6709G722\u3001G729\u7684RTP MAP\uFF0C\u5F53\u65F6\u4EE5\u4E3A\u662Flinphone\u7684bug\uFF0C\u540E\u9762\u770B\u6E90\u7801\u53CA\u67E5\u8D44\u6599\u53D1\u73B0\u53EF\u80FD\u4E0D\u662Fbug\uFF0C\u8FD9\u91CC\u5148\u6309\u4E0B\u4E0D\u8868</li><li>\u4F7F\u7528sdk\u63D0\u4F9B\u7684JavaLogger\u8F93\u51FA\u65E5\u5FD7\u65F6\uFF0C\u4F2A\u4EE3\u7801\uFF1A<code>mFactory.getLoggingService().addListener(mAndroidLoggingService);</code>\uFF0C\u5076\u73B0JNI\u5D29\u6E83\u95EE\u9898</li></ol><div class="language-logcat ext-logcat line-numbers-mode"><pre class="language-logcat"><code>    --------- beginning of crash
2022-04-11 14:16:22.350 1142-1430/? A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 1430 (RealLinphonePro)
2022-04-11 14:16:22.441 3756-3756/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
2022-04-11 14:16:22.442 3756-3756/? A/DEBUG: Build fingerprint: &#39;Android/rk3288/rk3288:7.1.2/NHG47K/builde03162201:userdebug/test-keys&#39;
2022-04-11 14:16:22.444 3756-3756/? A/DEBUG: Revision: &#39;0&#39;
2022-04-11 14:16:22.446 3756-3756/? A/DEBUG: ABI: &#39;arm&#39;
2022-04-11 14:16:22.447 3756-3756/? A/DEBUG: pid: 1142, tid: 1430, name: RealLinphonePro  &gt;&gt;&gt; com.guodong.android.linphone &lt;&lt;&lt;
2022-04-11 14:16:22.448 3756-3756/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------
2022-04-11 14:16:22.454 3756-3756/? A/DEBUG: Abort message: &#39;art/runtime/indirect_reference_table.cc:80] JNI ERROR (app bug): accessed deleted WeakGlobal 0x21ab&#39;
2022-04-11 14:16:22.456 3756-3756/? A/DEBUG:     r0 00000000  r1 00000596  r2 00000006  r3 00000008
2022-04-11 14:16:22.457 3756-3756/? A/DEBUG:     r4 89aff978  r5 00000006  r6 89aff920  r7 0000010c
2022-04-11 14:16:22.459 3756-3756/? A/DEBUG:     r8 00000043  r9 aaa7eef0  sl 0000000a  fp 89d04400
2022-04-11 14:16:22.461 3756-3756/? A/DEBUG:     ip 0000000b  sp 89afef88  lr ab175857  pc ab1780c0  cpsr 600b0010
2022-04-11 14:16:22.509 3756-3756/? A/DEBUG: backtrace:
2022-04-11 14:16:22.511 3756-3756/? A/DEBUG:     #00 pc 0004a0c0  /system/lib/libc.so (tgkill+12)
2022-04-11 14:16:22.512 3756-3756/? A/DEBUG:     #01 pc 00047853  /system/lib/libc.so (pthread_kill+34)
2022-04-11 14:16:22.514 3756-3756/? A/DEBUG:     #02 pc 0001d8b5  /system/lib/libc.so (raise+10)
2022-04-11 14:16:22.515 3756-3756/? A/DEBUG:     #03 pc 00019401  /system/lib/libc.so (__libc_android_abort+34)
2022-04-11 14:16:22.517 3756-3756/? A/DEBUG:     #04 pc 00017048  /system/lib/libc.so (abort+4)
2022-04-11 14:16:22.518 3756-3756/? A/DEBUG:     #05 pc 0031d8cd  /system/lib/libart.so (_ZN3art7Runtime5AbortEPKc+328)
2022-04-11 14:16:22.520 3756-3756/? A/DEBUG:     #06 pc 000b5503  /system/lib/libart.so (_ZN3art10LogMessageD2Ev+1134)
2022-04-11 14:16:22.521 3756-3756/? A/DEBUG:     #07 pc 001bd0ff  /system/lib/libart.so (_ZN3art22IndirectReferenceTable17AbortIfNoCheckJNIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE+134)
2022-04-11 14:16:22.523 3756-3756/? A/DEBUG:     #08 pc 0023ecaf  /system/lib/libart.so (_ZNK3art22IndirectReferenceTable10GetCheckedEPv+250)
2022-04-11 14:16:22.525 3756-3756/? A/DEBUG:     #09 pc 0023c05b  /system/lib/libart.so (_ZN3art9JavaVMExt16DecodeWeakGlobalEPNS_6ThreadEPv+30)
2022-04-11 14:16:22.526 3756-3756/? A/DEBUG:     #10 pc 00337679  /system/lib/libart.so (_ZNK3art6Thread13DecodeJObjectEP8_jobject+164)
2022-04-11 14:16:22.528 3756-3756/? A/DEBUG:     #11 pc 00265843  /system/lib/libart.so (_ZN3art3JNI11NewLocalRefEP7_JNIEnvP8_jobject+406)
2022-04-11 14:16:22.530 3756-3756/? A/DEBUG:     #12 pc 0060eff9  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (getLoggingService+88)
2022-04-11 14:16:22.531 3756-3756/? A/DEBUG:     #13 pc 0061a977  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.533 3756-3756/? A/DEBUG:     #14 pc 005ef911  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.535 3756-3756/? A/DEBUG:     #15 pc 00025437  /data/app/com.guodong.android.linphone-1/lib/arm/libbctoolbox.so (bctbx_logv+182)
2022-04-11 14:16:22.536 3756-3756/? A/DEBUG:     #16 pc 006f5061  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.538 3756-3756/? A/DEBUG:     #17 pc 006f51d9  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (wake_lock_acquire+152)
2022-04-11 14:16:22.539 3756-3756/? A/DEBUG:     #18 pc 006601c5  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.541 3756-3756/? A/DEBUG:     #19 pc 00660b27  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (belle_sip_client_transaction_init+138)
2022-04-11 14:16:22.542 3756-3756/? A/DEBUG:     #20 pc 006fb1d3  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (belle_sip_nict_new+30)
2022-04-11 14:16:22.544 3756-3756/? A/DEBUG:     #21 pc 0065c3a7  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (belle_sip_provider_create_client_transaction+46)
2022-04-11 14:16:22.546 3756-3756/? A/DEBUG:     #22 pc 0065dec3  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.547 3756-3756/? A/DEBUG:     #23 pc 0065daf7  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (belle_sip_refresher_refresh+28)
2022-04-11 14:16:22.549 3756-3756/? A/DEBUG:     #24 pc 005fac23  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (linphone_proxy_config_refresh_register+34)
2022-04-11 14:16:22.550 3756-3756/? A/DEBUG:     #25 pc 005e9fc5  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (linphone_core_refresh_registers+40)
2022-04-11 14:16:22.552 3756-3756/? A/DEBUG:     #26 pc 019fc3bf  /data/app/com.guodong.android.linphone-1/oat/arm/base.odex (offset 0x18de000)
2022-04-11 14:16:23.096 227-255/? I/AudioFlinger: BUFFER TIMEOUT: remove(4099) from active list on thread 0xabd03e00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a> \u5206\u6790</h2><h3 id="\u95EE\u98982" tabindex="-1"><a class="header-anchor" href="#\u95EE\u98982" aria-hidden="true">#</a> \u95EE\u98982</h3><p>\u901A\u8FC7\u5D29\u6E83\u65E5\u5FD7\u7B2C27\u884C<code>2022-04-11 14:16:22.530 3756-3756/? A/DEBUG: #12 pc 0060eff9 /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (getLoggingService+88)</code>\u53EF\u4EE5\u5224\u65AD\u5D29\u6E83\u662F\u5728<code>getLoggingService()</code>\u8FD9\u4E2A\u65B9\u6CD5\u91CC</p><p>\u5982\u6B64\u9700\u8981\u5148\u627E\u5230<code>getLoggingService()</code>\u65B9\u6CD5\u7684\u6E90\u7801\uFF0C\u5148\u5728Source Insight\u4E2D\u641C\u7D22<code>getLoggingService()</code>\uFF0C\u641C\u7D22\u4E00\u5708\u53D1\u73B0\u6CA1\u6709\uFF0C\u731C\u60F3\u6B64\u65B9\u6CD5\u5E94\u8BE5\u662F\u7F16\u8BD1\u540E\u81EA\u52A8\u751F\u6210\u7684</p><p>\u5728Ubuntu\u7F16\u8BD1\u73AF\u5883\u91CC\u627E\u627E\uFF0C\u901A\u8FC7<code>find</code>\u547D\u4EE4\u67E5\u627E\u5305\u542B<code>getLoggingService</code>\u6587\u672C\u7684\u6587\u4EF6</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> linphone-sdk/build/
$ <span class="token function">find</span> <span class="token builtin class-name">.</span> -type f <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">grep</span> <span class="token string">&quot;getLoggingService&quot;</span>
./WORK/android-armv7/Build/linphone/wrappers/java/src/linphone_jni.cc:JNIEXPORT jobject JNICALL getLoggingService<span class="token punctuation">(</span>JNIEnv *env, LinphoneLoggingService *cptr, bool_t takeref<span class="token punctuation">)</span> <span class="token punctuation">{</span>
./WORK/android-armv7/Build/linphone/wrappers/java/src/linphone_jni.cc:	jobject j_logService <span class="token operator">=</span> getLoggingService<span class="token punctuation">(</span>env, <span class="token punctuation">(</span>LinphoneLoggingService *<span class="token punctuation">)</span>logService, TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
./WORK/android-armv7/Build/linphone/wrappers/java/src/linphone_jni.cc:	jobject jni_result <span class="token operator">=</span> <span class="token punctuation">(</span>jobject<span class="token punctuation">)</span>getLoggingService<span class="token punctuation">(</span>env, <span class="token punctuation">(</span>LinphoneLoggingService *<span class="token punctuation">)</span>linphone_logging_service_get<span class="token punctuation">(</span><span class="token punctuation">)</span>, TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u627E\u5230\u4E86bingo~</p><p>\u6253\u5F00<code>linphone_jni.cc</code>\uFF0C<code>getLoggingService()</code>\u65B9\u6CD5\u4F53\u5982\u4E0B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>JNIEXPORT jobject JNICALL <span class="token function">getLoggingService</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> LinphoneLoggingService <span class="token operator">*</span>cptr<span class="token punctuation">,</span> bool_t takeref<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	jobject jobj <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>cptr <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">void</span> <span class="token operator">*</span>up <span class="token operator">=</span> <span class="token function">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>belle_sip_object_t <span class="token operator">*</span><span class="token punctuation">)</span>cptr<span class="token punctuation">,</span> belle_sip_java_user_data_key<span class="token punctuation">)</span><span class="token punctuation">;</span>
		LinphoneJavaBindings <span class="token operator">*</span>ljb <span class="token operator">=</span> <span class="token punctuation">(</span>LinphoneJavaBindings <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">linphone_factory_get_user_data</span><span class="token punctuation">(</span><span class="token function">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ljb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			ljb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">LinphoneJavaBindings</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">linphone_factory_set_user_data</span><span class="token punctuation">(</span><span class="token function">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ljb<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		jclass linphone_logging_service_class <span class="token operator">=</span> ljb<span class="token operator">-&gt;</span>linphone_logging_service_class<span class="token punctuation">;</span>
		jmethodID linphone_logging_service_constructor <span class="token operator">=</span> ljb<span class="token operator">-&gt;</span>linphone_logging_service_class_constructor<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>up <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			jobj <span class="token operator">=</span> env<span class="token operator">-&gt;</span><span class="token function">NewObject</span><span class="token punctuation">(</span>linphone_logging_service_class<span class="token punctuation">,</span> linphone_logging_service_constructor<span class="token punctuation">,</span> <span class="token punctuation">(</span>jlong<span class="token punctuation">)</span>cptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span>belle_sip_object_t <span class="token operator">*</span><span class="token punctuation">)</span>cptr<span class="token punctuation">,</span> belle_sip_java_user_data_key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>env<span class="token operator">-&gt;</span><span class="token function">NewWeakGlobalRef</span><span class="token punctuation">(</span>jobj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>takeref<span class="token punctuation">)</span>
				<span class="token function">linphone_logging_service_ref</span><span class="token punctuation">(</span>cptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			jobj <span class="token operator">=</span> env<span class="token operator">-&gt;</span><span class="token function">NewLocalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>jobject<span class="token punctuation">)</span>up<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>jobj <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Delete weak ref ?</span>
				env<span class="token operator">-&gt;</span><span class="token function">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>jobject<span class="token punctuation">)</span>up<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// takes implicit local ref</span>
				jobj <span class="token operator">=</span> env<span class="token operator">-&gt;</span><span class="token function">NewObject</span><span class="token punctuation">(</span>linphone_logging_service_class<span class="token punctuation">,</span> linphone_logging_service_constructor<span class="token punctuation">,</span> <span class="token punctuation">(</span>jlong<span class="token punctuation">)</span>cptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span>belle_sip_object_t <span class="token operator">*</span><span class="token punctuation">)</span>cptr<span class="token punctuation">,</span> belle_sip_java_user_data_key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>env<span class="token operator">-&gt;</span><span class="token function">NewWeakGlobalRef</span><span class="token punctuation">(</span>jobj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>takeref<span class="token punctuation">)</span>
					<span class="token function">linphone_logging_service_ref</span><span class="token punctuation">(</span>cptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> jobj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u55EF\uFF0C\u770B\u8D77\u6765\u6CA1\u5565\u95EE\u9898\uFF0C\u4E5F\u6709\u5224\u7A7A\u5904\u7406\uFF0C\u4E00\u65F6\u95F4\u6478\u4E0D\u7740\u5934\u7EEA\uFF0C\u5148\u5728<code>getLoggingService()</code>\u65B9\u6CD5\u4E2D\u52A0\u70B9\u65E5\u5FD7\u8F93\u51FA\u770B\u770B\u5427</p><p>\u524D\u9762\u8BF4<code>linphone_jni.cc</code>\u662F\u81EA\u52A8\u751F\u6210\u7684\uFF0C\u73B0\u5728\u9700\u8981\u627E\u5230\u81EA\u52A8\u751F\u6210<code>linphone_jni.cc</code>\u7684\u4EE3\u7801\uFF0C\u6839\u636E\u5D29\u6E83\u65E5\u5FD7\u53EF\u4EE5\u53D1\u73B0<code>getLoggingService()</code>\u5728<code>linphone.so</code>\u4E2D\uFF0C\u800C\u6E90\u7801\u4E2D\u6709<code>liblinphone</code>\u8FD9\u4E2A\u76EE\u5F55\uFF0C\u5148\u5728\u8FD9\u4E2A\u76EE\u5F55\u4E0B\u627E\u627E\u5427\uFF0C\u901A\u8FC7<code>find</code>\u547D\u4EE4\u67E5\u627E\u6587\u4EF6\u540D\u4E2D\u5305\u542B<code>jni</code>\u7684\u6587\u4EF6</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> linphone-sdk/liblinphone/
$ <span class="token function">find</span> <span class="token builtin class-name">.</span> -name *jni*
./coreapi/linphonecore_jni.cc
./tools/lpc2xml_jni.cc
./tools/xml2lpc_jni.cc
./tools/my_jni.h
./wrappers/java/jni.mustache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u67E5\u627E\u51FA\u6765\u591A\u4E2A\u6587\u4EF6\uFF0C\u65E2\u7136<code>linphone_jni.cc</code>\u662F\u81EA\u52A8\u751F\u6210\u7684\uFF0C\u6240\u4EE5\u53EF\u4EE5\u786E\u5B9A<code>.cc</code>\u3001<code>.h</code>\u540E\u7F00\u7684\u51E0\u4E2A\u6587\u4EF6\u80AF\u5B9A\u4E0D\u662F\uFF0C\u6392\u9664\u540E\u53EA\u5269\u4E0B\u8FD9\u4E2A<code>jni.mustache</code>\u6587\u4EF6\uFF0C\u6253\u5F00\u6587\u4EF6<code>vim ./wrappers/java/jni.mustache</code>\u6CE8\u91CA\u7B2C\u4E00\u884C\u5C31\u662F<code>linphone_jni.cc</code>\uFF0C\u592A\u68D2\u4E86\uFF0C\u627E\u5230\u81EA\u52A8\u751F\u6210\u7684\u4EE3\u7801\u4E86</p><p>\u901A\u8FC7\u4E00\u4E9B\u67E5\u770B\uFF0C\u5E76\u4E0E<code>linphone_jni.cc</code>\u4E2D\u7684\u5B9E\u73B0\u5BF9\u6BD4\uFF0C\u9501\u5B9A\u4E86\u4EE5\u4E0B\u4EE3\u7801\u5373\u4E3A\u81EA\u52A8\u751F\u6210\u7684\u6A21\u677F\u4EE3\u7801\uFF1A</p><div class="language-mustache ext-mustache line-numbers-mode"><pre class="language-mustache"><code><span class="token number">290</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">objects</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token number">291</span> <span class="token variable">JNIEXPORT</span> <span class="token variable">jobject</span> <span class="token variable">JNICALL</span> <span class="token variable">get</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">className</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token variable">JNIEnv</span> <span class="token punctuation">*</span><span class="token variable">env</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">*</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">bool_t</span> <span class="token variable">takeref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">292</span>         <span class="token variable">jobject</span> <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">;</span>
<span class="token number">293</span> 
<span class="token number">294</span>         <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">cptr</span> <span class="token punctuation">!</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">295</span>                 <span class="token variable">void</span> <span class="token punctuation">*</span><span class="token variable">up</span> <span class="token punctuation">=</span> <span class="token variable">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">296</span>                 <span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">linphone_factory_get_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">297</span>                 <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token punctuation">!</span><span class="token variable">ljb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">298</span>                         <span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token variable">new</span> <span class="token variable">LinphoneJavaBindings</span><span class="token punctuation">(</span><span class="token variable">env</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">299</span>                         <span class="token variable">linphone_factory_set_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">ljb</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">300</span>                 <span class="token punctuation">}</span>
<span class="token number">301</span> 
<span class="token number">302</span>                 <span class="token variable">jclass</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">;</span>
<span class="token number">303</span>                 <span class="token variable">jmethodID</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class_constructor</span><span class="token punctuation">;</span>
<span class="token number">304</span> 
<span class="token number">305</span>                 <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">up</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">306</span>                         <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">307</span>                         <span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">308</span>                         <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
<span class="token number">309</span>                                 <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token number">310</span>                 <span class="token punctuation">}</span> <span class="token variable">else</span> <span class="token punctuation">{</span>
<span class="token number">311</span>                         <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewLocalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">312</span>                         <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">jobj</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">313</span>                                 <span class="token block keyword">//</span> <span class="token variable">Delete</span> <span class="token variable">weak</span> <span class="token variable">ref</span> <span class="token variable">?</span>
<span class="token number">314</span>                                 <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">315</span>                                 <span class="token block keyword">//</span> <span class="token variable">takes</span> <span class="token variable">implicit</span> <span class="token variable">local</span> <span class="token variable">ref</span>
<span class="token number">316</span>                                 <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">317</span>                                 <span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">318</span>                                 <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
<span class="token number">319</span>                                         <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token number">320</span>                         <span class="token punctuation">}</span>
<span class="token number">321</span>                 <span class="token punctuation">}</span>
<span class="token number">322</span>         <span class="token punctuation">}</span>
<span class="token number">323</span>         <span class="token variable">return</span> <span class="token variable">jobj</span><span class="token punctuation">;</span>
<span class="token number">324</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),b=n("\u8FD9\u91CClinphone-sdk\u4F7F\u7528\u4E86"),_={href:"https://github.com/janl/mustache.js",target:"_blank",rel:"noopener noreferrer"},m=n("mustache"),g=n("\uFF0C\u8FD8\u8BB0\u5F97\u5728\u4E0A\u7BC7"),h={href:"https://juejin.cn/post/7087496636657565727",target:"_blank",rel:"noopener noreferrer"},j=n("\u7F16\u8BD1Linphone-SDK-Android"),f=n("\u4E2D\u6709\u5B89\u88C5"),y=a("code",null,"pip3 install pystache",-1),N=n("\uFF0C"),E=a("code",null,"pystache",-1),L=n("\u662F"),D=a("code",null,"mustache",-1),A=n("\u7684Python\u5B9E\u73B0\uFF0C"),G=a("code",null,"mustache",-1),w=n("\u7684\u8BED\u6CD5\u6BD4\u8F83\u7B80\u5355\uFF0C\u5728"),B=a("code",null,"github",-1),x=n("\u4E0A\u770B\u4E00\u773C\u6587\u6863\uFF0C\u518D\u8DDF\u7740\u6E90\u7801\u6BD4\u7740\u846B\u82A6\u753B\u74E2\uFF0C\u5E94\u8BE5\u5C31\u5DEE\u4E0D\u591A\u4E86"),U=p(`<p>\u597D\u7684\uFF0C\u5B66\u4E60\u5B8C<code>mustache</code>\u7684\u8BED\u6CD5\uFF0C\u4E86\u89E3\u5230\u9AD8\u7EA7\u7528\u6CD5\u53EF\u4EE5\u4F20\u4E00\u4E2A\u914D\u7F6E\u6587\u4EF6\u8FDB\u884C\u6E32\u67D3\uFF0C\u6B63\u597D\u4E0E<code>jni.mustache</code>\u540C\u7EA7\u76EE\u5F55\u4E2D\u6709\u4E2A<code>genwrapper.py</code>\u6587\u4EF6\uFF0C\u6253\u5F00\u6B64\u6587\u4EF6\uFF0C\u91CC\u9762\u5B9A\u4E49\u4E86\u5F88\u591A\u7C7B\uFF0C\u5176\u4E2D\u6709\u4E2A<code>Jni</code>\u7684\u7C7B\uFF0C\u91CC\u9762\u6709\u4E9B\u5B57\u6BB5\u4E0E<code>jni.mustache</code>\u4E2D\u7684\u6807\u7B7E\u6B63\u597D\u5BF9\u5E94\uFF0C\u5C31\u662F\u5B83\u4E86</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Jni</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">add_object</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> javaClass<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> javaClass<span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">&#39;Factory&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        obj <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;jniPrefix&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>jni_package<span class="token punctuation">,</span>
            <span class="token string">&#39;jniPath&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>jni_path<span class="token punctuation">,</span>
            <span class="token string">&#39;cPrefix&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>cPrefix<span class="token punctuation">,</span>
            <span class="token string">&#39;className&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>className<span class="token punctuation">,</span>
            <span class="token string">&#39;classCName&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>cName<span class="token punctuation">,</span>
            <span class="token string">&#39;classImplName&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>classImplName<span class="token punctuation">,</span>
            <span class="token string">&#39;refCountable&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>refCountable<span class="token punctuation">,</span>
            <span class="token string">&#39;notRefCountable&#39;</span><span class="token punctuation">:</span> <span class="token keyword">not</span> javaClass<span class="token punctuation">.</span>refCountable<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>append<span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>happy~\u4E07\u4E8B\u5177\u5907\uFF0C\u73B0\u5728\u53EF\u4EE5\u4FEE\u6539\u6E90\u7801\uFF0C\u6DFB\u52A0\u4E00\u4E9B\u65E5\u5FD7\u8F93\u51FA\u4E86</p>`,3),I=n("\u56E0\u4E3A\u5728"),P=a("code",null,"jni.mustache",-1),C=n("\u4E2D\u6A21\u677F\u65B9\u6CD5"),R=a("code",null,"get{{className}}",-1),S=n("\u662F\u53EF\u4EE5\u751F\u6210\u591A\u4E2A\u4EE5"),J=a("code",null,"get",-1),O=n("\u5F00\u5934\u7684\u65B9\u6CD5\uFF0C\u73B0\u5728\u9700\u8981\u5224\u65AD"),T=a("code",null,"{{className}}",-1),q=n("\u662F\u4E0D\u662F\u7B49\u4E8E"),W=a("code",null,"LoggingService",-1),K=n("\uFF0C\u800C\u5728"),F={href:"https://github.com/janl/mustache.js",target:"_blank",rel:"noopener noreferrer"},Z=n("mustache"),V=n("\u4E2D\u6CA1\u6709\u53D1\u73B0\u6BD4\u8F83\u5B57\u7B26\u4E32\u662F\u5426\u76F8\u540C\u7684\u8BED\u6CD5\uFF0C\u6240\u4EE5\u5728"),$=a("code",null,"genwrapper.py",-1),M=n("\u7684"),X=a("code",null,"Jni",-1),H=n("\u7C7B\u4E2D\u65B0\u589E\u4E00\u4E2A"),z=a("code",null,"isLoggingService",-1),Q=n("\u5B57\u6BB5\u8868\u793A\u662F\u5426\u662F"),Y=a("code",null,"getLoggingService()",-1),nn=n("\u65B9\u6CD5"),an=p(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Jni</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">add_object</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> javaClass<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> javaClass<span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">&#39;Factory&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        obj <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;jniPrefix&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>jni_package<span class="token punctuation">,</span>
            <span class="token string">&#39;jniPath&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>jni_path<span class="token punctuation">,</span>
            <span class="token string">&#39;cPrefix&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>cPrefix<span class="token punctuation">,</span>
            <span class="token string">&#39;className&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>className<span class="token punctuation">,</span>
            <span class="token string">&#39;classCName&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>cName<span class="token punctuation">,</span>
            <span class="token string">&#39;classImplName&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>classImplName<span class="token punctuation">,</span>
            <span class="token string">&#39;refCountable&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>refCountable<span class="token punctuation">,</span>
            <span class="token string">&#39;notRefCountable&#39;</span><span class="token punctuation">:</span> <span class="token keyword">not</span> javaClass<span class="token punctuation">.</span>refCountable<span class="token punctuation">,</span>
            <span class="token string">&#39;isLoggingService&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">&#39;LoggingService&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>append<span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u4FEE\u6539<code>jni.mustache</code>\u6587\u4EF6\uFF0C\u589E\u52A0\u65E5\u5FD7\uFF0C\u8F93\u51FA<code>up</code>\u6307\u9488\u6307\u5411\u7684\u5730\u5740\uFF0C<code>up</code>\u6307\u9488\u8F6C\u6210<code>jobject</code>\u540E\u4E0E<code>NULL</code>\u3001<code>nullptr</code>\u6BD4\u8F83\u7684\u7ED3\u679C\uFF0C\u5224\u65AD<code>up</code>\u662F\u5426\u5DF2\u7ECF\u88AB\u56DE\u6536\u4E86</p><p>\u8FD9\u91CC\u8BF4\u4E00\u4E0B\u4EE3\u7801\u7684\u5927\u6982\u610F\u601D\uFF0C<code>up</code>\u6307\u9488\u4ECE<code>belle_sip_object_data_get</code>\u65B9\u6CD5\u4E2D\u901A\u8FC7<code>belle_sip_java_user_data_key</code>\u8FD9\u4E2AKey\u83B7\u53D6\uFF0C\u53EF\u4EE5\u7B80\u5355\u7406\u89E3\u4E3AJava\u4E2D\u7684Map\uFF1B\u5982\u679C<code>up</code>\u4E3A\u7A7A\uFF0C\u5219\u8C03\u7528Java\u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C06\u521B\u5EFA\u7684Java\u5BF9\u8C61\u901A\u8FC7<code>NewWeakGlobalRef</code>\u65B9\u6CD5\u8F6C\u6362\u4E3A\u5168\u5C40\u5F31\u5F15\u7528\uFF0C\u518D\u901A\u8FC7<code>belle_sip_object_data_set</code>\u65B9\u6CD5\u4FDD\u5B58\u8D77\u6765\uFF1B\u5982\u679C<code>up</code>\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u5F3A\u8F6C\u4E3A<code>jobject</code>\uFF0C\u5224\u65AD<code>jobject</code>\u662F\u5426\u4E3A\u7A7A\uFF0C\u4E3A\u7A7A\u5219\u5220\u9664\u5168\u5C40\u5F31\u5F15\u7528\uFF0C\u518D\u521B\u5EFA\u4FDD\u5B58</p><div class="language-mustache ext-mustache line-numbers-mode"><pre class="language-mustache"><code><span class="token delimiter punctuation">{{</span><span class="token block keyword">#objects}}</span>
<span class="token variable">JNIEXPORT</span> <span class="token variable">jobject</span> <span class="token variable">JNICALL</span> <span class="token variable">get</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">className</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token variable">JNIEnv</span> <span class="token punctuation">*</span><span class="token variable">env</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">*</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">bool_t</span> <span class="token variable">takeref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token variable">jobject</span> <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">;</span>

	<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">cptr</span> <span class="token punctuation">!</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">void</span> <span class="token punctuation">*</span><span class="token variable">up</span> <span class="token punctuation">=</span> <span class="token variable">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">linphone_factory_get_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token punctuation">!</span><span class="token variable">ljb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token variable">new</span> <span class="token variable">LinphoneJavaBindings</span><span class="token punctuation">(</span><span class="token variable">env</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">linphone_factory_set_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">ljb</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token variable">jclass</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">;</span>
		<span class="token variable">jmethodID</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class_constructor</span><span class="token punctuation">;</span>

		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up = %p&quot;</span><span class="token punctuation">,</span> <span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token variable">jobject</span> <span class="token variable">temp_jobj1</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">;</span>
		<span class="token variable">jboolean</span> <span class="token variable">up_available1</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">IsSameObject</span><span class="token punctuation">(</span><span class="token variable">temp_jobj1</span><span class="token punctuation">,</span> <span class="token variable">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up_available1 = %d&quot;</span><span class="token punctuation">,</span> <span class="token variable">up_available1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token variable">jobject</span> <span class="token variable">temp_jobj2</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">;</span>
		<span class="token variable">jboolean</span> <span class="token variable">up_available2</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">IsSameObject</span><span class="token punctuation">(</span><span class="token variable">temp_jobj2</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up_available2 = %d&quot;</span><span class="token punctuation">,</span> <span class="token variable">up_available2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>

		<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">up</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
				<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token variable">else</span> <span class="token punctuation">{</span>
			<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewLocalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">jobj</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">Delete</span> <span class="token variable">weak</span> <span class="token variable">ref</span> <span class="token variable">?</span>
				<span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">takes</span> <span class="token variable">implicit</span> <span class="token variable">local</span> <span class="token variable">ref</span>
				<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
					<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token variable">return</span> <span class="token variable">jobj</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u597D\u7684\uFF0C\u4FEE\u6539\u5B8C\u6E90\u7801\u4FDD\u5B58\u540E\uFF0C\u5C31\u53EF\u4EE5\u7F16\u8BD1\u4E86</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> linphone-sdk/build/
$ cmake --build <span class="token builtin class-name">.</span> --parallel <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B49\u5F85\u7F16\u8BD1\u5B8C\u6210\uFF0C\u62F7\u8D1D\u51FA\u6765\u7F16\u8BD1\u597D\u7684<code>aar</code>\uFF0C\u653E\u5230Android Studio\u4E2D\u8FD0\u884C\uFF0C\u67E5\u770BLogcat\u8F93\u51FA</p>`,7);function sn(tn,pn){const s=l("ExternalLinkIcon");return o(),c("div",null,[u,a("p",null,[k,a("a",r,[d,t(s)])]),v,a("p",null,[b,a("a",_,[m,t(s)]),g,a("a",h,[j,t(s)]),f,y,N,E,L,D,A,G,w,B,x]),U,a("p",null,[I,P,C,R,S,J,O,T,q,W,K,a("a",F,[Z,t(s)]),V,$,M,X,H,z,Q,Y,nn]),an])}var cn=e(i,[["render",sn],["__file","\u4FEE\u6539linphone-sdk-android-\u7B2C\u4E00\u7BC7.html.vue"]]);export{cn as default};
