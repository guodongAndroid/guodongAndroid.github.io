import{_ as t,Y as o,Z as p,$ as s,a0 as n,a1 as e,a2 as c,a3 as l,E as i}from"./framework-3d290349.js";const u={},r=s("h2",{id:"前言",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),n(" 前言")],-1),k=s("code",null,"Type",-1),d=s("code",null,"Retrofit",-1),v=s("code",null,"Method",-1),m=s("code",null,"Method",-1),g=l(`<p>在学习 <code>Method</code> 之前，我们先看下如何获取 <code>Method</code>。</p><h2 id="获取method" tabindex="-1"><a class="header-anchor" href="#获取method" aria-hidden="true">#</a> 获取Method</h2><p><code>Method</code> 可以通过 <code>Class</code> 对象中以下几个方法获取：</p><table><thead><tr><th style="text-align:left;">返回值</th><th style="text-align:left;">方法名称与描述</th></tr></thead><tbody><tr><td style="text-align:left;">Method[]</td><td style="text-align:left;">getDeclaredMethods()<br> 返回 <code>Method</code> 对象的一个数组，这些对象反映此 <code>Class</code> 对象表示的类或接口声明的所有方法，包括公共、保护、默认（包）访问和私有方法，但不包括继承的方法。</td></tr><tr><td style="text-align:left;">Method[]</td><td style="text-align:left;">getMethods()<br> 返回 <code>Method</code> 对象的一个数组，这些对方反映此 <code>Class</code> 对象表示的类或接口声明的所有公共方法，包括类或接口声明的方法以及从父类和父接口继承的方法。</td></tr><tr><td style="text-align:left;">Method</td><td style="text-align:left;">getDeclaredMethod(String name, Class&lt;?&gt;... parameterTypes)<br> 返回一个 <code>Method</code> 对象，该对象反映此 <code>Class</code> 对象所表示的类或接口的指定声明方法。</td></tr><tr><td style="text-align:left;">Method</td><td style="text-align:left;">getMethod(String name, Class&lt;?&gt;... parameterTypes)<br> 返回一个 <code>Method</code> 对象，该对象反映此 <code>Class</code> 对象表示的类或接口的指定公共成员方法。</td></tr><tr><td style="text-align:left;">Method</td><td style="text-align:left;">getEnclosingMethod()<br> 如果此 <code>Class</code> 对象表示方法中的本地或匿名类，则返回 <code>Method</code> 对象，表示基础类的直接封闭方法。否则返回 null。</td></tr></tbody></table><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><p>创建父类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestParent</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">parent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建测试类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">TestParent</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token class-name">Object</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">class</span> <span class="token class-name">ClassA</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ClassA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">testProtected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testProtected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">testPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testPrivate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">Test</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Test</span><span class="token punctuation">&gt;</span></span> testClass <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredMethods <span class="token operator">=</span> testClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;declaredMethods: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>declaredMethods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods <span class="token operator">=</span> testClass<span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;methods: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>methods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Method</span> testPrivate <span class="token operator">=</span> testClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;testPrivate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testPrivate: &quot;</span> <span class="token operator">+</span> testPrivate<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Method</span> run <span class="token operator">=</span> testClass<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;run&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;run: &quot;</span> <span class="token operator">+</span> run<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Method</span> enclosingMethod <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnclosingMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;enclosingMethod: &quot;</span> <span class="token operator">+</span> enclosingMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>程序输出结果如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>declaredMethods: <span class="token punctuation">[</span>public static void com.guodong.android.retrofit.Test.main<span class="token punctuation">(</span>java.lang.String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> throws java.lang.Exception, public void com.guodong.android.retrofit.Test.run<span class="token punctuation">(</span><span class="token punctuation">)</span>, public void com.guodong.android.retrofit.Test.parent<span class="token punctuation">(</span><span class="token punctuation">)</span>, protected void com.guodong.android.retrofit.Test.testProtected<span class="token punctuation">(</span><span class="token punctuation">)</span>, private void com.guodong.android.retrofit.Test.testPrivate<span class="token punctuation">(</span><span class="token punctuation">)</span>, public void com.guodong.android.retrofit.Test.testPublic<span class="token punctuation">(</span><span class="token punctuation">)</span>, private java.lang.Object com.guodong.android.retrofit.Test.object<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

methods: <span class="token punctuation">[</span>public static void com.guodong.android.retrofit.Test.main<span class="token punctuation">(</span>java.lang.String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> throws java.lang.Exception, public void com.guodong.android.retrofit.Test.run<span class="token punctuation">(</span><span class="token punctuation">)</span>, public void com.guodong.android.retrofit.Test.parent<span class="token punctuation">(</span><span class="token punctuation">)</span>, public void com.guodong.android.retrofit.Test.testPublic<span class="token punctuation">(</span><span class="token punctuation">)</span>, public void com.guodong.android.retrofit.TestParent.parent2<span class="token punctuation">(</span><span class="token punctuation">)</span>, public final void java.lang.Object.wait<span class="token punctuation">(</span><span class="token punctuation">)</span> throws java.lang.InterruptedException, public final void java.lang.Object.wait<span class="token punctuation">(</span>long,int<span class="token punctuation">)</span> throws java.lang.InterruptedException, public final native void java.lang.Object.wait<span class="token punctuation">(</span>long<span class="token punctuation">)</span> throws java.lang.InterruptedException, public boolean java.lang.Object.equals<span class="token punctuation">(</span>java.lang.Object<span class="token punctuation">)</span>, public java.lang.String java.lang.Object.toString<span class="token punctuation">(</span><span class="token punctuation">)</span>, public native int java.lang.Object.hashCode<span class="token punctuation">(</span><span class="token punctuation">)</span>, public final native java.lang.Class java.lang.Object.getClass<span class="token punctuation">(</span><span class="token punctuation">)</span>, public final native void java.lang.Object.notify<span class="token punctuation">(</span><span class="token punctuation">)</span>, public final native void java.lang.Object.notifyAll<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

testPrivate: private void com.guodong.android.retrofit.Test.testPrivate<span class="token punctuation">(</span><span class="token punctuation">)</span>
run: public void com.guodong.android.retrofit.Test.run<span class="token punctuation">(</span><span class="token punctuation">)</span>
enclosingMethod: private java.lang.Object com.guodong.android.retrofit.Test.object<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h3><table><thead><tr><th>方法名称</th><th>方法总结</th></tr></thead><tbody><tr><td>getDeclaredMethods()</td><td>返回当前 <code>Class</code> 对象声明的所有方法，不包含父类的方法。</td></tr><tr><td>getMethods()</td><td>返回当前 <code>Class</code> 对象声明的所有公共方法，包含父类的方法。</td></tr><tr><td>getDeclaredMethod(String name, Class&lt;?&gt;... parameterTypes)</td><td>返回当前 <code>Class</code> 对象声明的指定方法，不包含父类的方法。</td></tr><tr><td>getMethod(String name, Class&lt;?&gt;... parameterTypes)</td><td>返回当前 <code>Class</code> 对象声明的指定公共方法，包含父类的方法。</td></tr><tr><td>getEnclosingMethod()</td><td>返回构建本地和匿名类的方法。</td></tr></tbody></table><p>在使用过程中，我们可以根据实际情况选择不同的获取 <code>Method</code> 的方式，比如想看看类自己声明了哪些方法，可以使用 <code>getDeclaredMethods()</code> 方法。</p><h2 id="method" tabindex="-1"><a class="header-anchor" href="#method" aria-hidden="true">#</a> Method</h2><p><code>Method</code> 中的方法较多，我们只学习其中的某些方法，这些方法是 <code>Retrofit</code> 中使用的或者笔者认为需要学习的。</p><h3 id="方法返回值" tabindex="-1"><a class="header-anchor" href="#方法返回值" aria-hidden="true">#</a> 方法返回值</h3><p>在 <code>Method</code> 中有三个方法可以获取方法返回值类型：</p><table><thead><tr><th>返回值</th><th>方法名称与描述</th></tr></thead><tbody><tr><td>Class&lt;?&gt;</td><td>getReturnType()<br> 返回 <code>Class</code> 对象，此对象表示方法的返回类型，不包含泛型信息。</td></tr><tr><td>Type</td><td>getGenericReturnType()<br> 返回 <code>Type</code> 对象，此对象表示方法底层的正式返回类型，包含泛型信息。</td></tr><tr><td>AnnotatedType</td><td>getAnnotatedReturnType()<br> 返回 <code>AnnotatedType</code> 对象，此对象表示方法底层的正式返回类型，包含泛型信息。</td></tr></tbody></table><p>测试代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">getT</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Test</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Test</span><span class="token punctuation">&gt;</span></span> testClass <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> declaredMethod <span class="token operator">:</span> testClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MethodName: &quot;</span> <span class="token operator">+</span> declaredMethod<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ReturnType: &quot;</span> <span class="token operator">+</span> declaredMethod<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;GenericReturnType: &quot;</span> <span class="token operator">+</span> declaredMethod<span class="token punctuation">.</span><span class="token function">getGenericReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;AnnotatedReturnType: &quot;</span> <span class="token operator">+</span> declaredMethod<span class="token punctuation">.</span><span class="token function">getAnnotatedReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>MethodName: main
ReturnType: void
GenericReturnType: void
AnnotatedReturnType: void
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
MethodName: getInt
ReturnType: int
GenericReturnType: int
AnnotatedReturnType: int
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
MethodName: getT
ReturnType: interface java.util.List
GenericReturnType: java.util.List<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span>
AnnotatedReturnType: java.util.List<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从输出结果可以看出，对于 <code>getInt()</code> 方法而言，它的返回值没有泛型，所以它的 <code>ReturnType</code> ， <code>GenericReturnType</code> 和 <code>AnnotatedReturnType</code> 表现一致，而 <code>getT()</code> 方法它的返回值包含泛型，它的 <code>ReturnType</code> 返回的是泛型擦除后的 <code>List</code> 对象，而 <code>GenericReturnType</code> 和 <code>AnnotatedReturnType</code> 返回了带有泛型信息真实的方法返回值类型 <code>List&lt;T&gt;</code>。</p><h3 id="方法参数" tabindex="-1"><a class="header-anchor" href="#方法参数" aria-hidden="true">#</a> 方法参数</h3><p>在 <code>Method</code> 中有六个方法与获取方法参数有关：</p><table><thead><tr><th>返回值</th><th>方法名称与描述</th></tr></thead><tbody><tr><td>int</td><td>getParameterCount()<br> 获取方法参数个数。</td></tr><tr><td>Parameter[]</td><td>getParameters()<br> 返回 <code>Parameter</code> 对象的一个数组，这些对象表示方法参数的名称，修饰符等信息。</td></tr><tr><td>Class&lt;?&gt;[]</td><td>getParameterTypes()<br> 返回 <code>Class</code> 对象的一个数组，这些对象表示方法参数的类型，不包含泛型信息。</td></tr><tr><td>Type[]</td><td>getGenericParameterTypes()<br> 返回 <code>Type</code> 对象的一个数组，这些对象表示方法参数的实际类型，包含泛型信息。</td></tr><tr><td>AnnotatedType[]</td><td>getAnnotatedParameterTypes()<br> 返回 <code>AnnotatedType</code> 对象的一个数组，这些对象表示方法参数的实际类型，包含泛型信息。</td></tr><tr><td><code>Annotation[][]</code></td><td>getParameterAnnotations()<br> 返回 <code>Annotation</code> 对象的一个二维数组，这些对象表示了方法参数注解的类型。</td></tr></tbody></table><p>创建注解类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">MyAnnotation</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">getT</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token annotation punctuation">@MyAnnotation</span> <span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">T</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Test</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Test</span><span class="token punctuation">&gt;</span></span> testClass <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        test<span class="token punctuation">.</span><span class="token function">getT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Method</span> getT <span class="token operator">=</span> testClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getT&quot;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MethodName: &quot;</span> <span class="token operator">+</span> getT<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ParameterCount: &quot;</span> <span class="token operator">+</span> getT<span class="token punctuation">.</span><span class="token function">getParameterCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Parameters: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>getT<span class="token punctuation">.</span><span class="token function">getParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ParameterTypes: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>getT<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;GenericParameterTypes: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>getT<span class="token punctuation">.</span><span class="token function">getGenericParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;AnnotatedParameterTypes: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>getT<span class="token punctuation">.</span><span class="token function">getAnnotatedParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">AnnotatedType</span><span class="token operator">::</span><span class="token function">getType</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ParameterAnnotations: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>getT<span class="token punctuation">.</span><span class="token function">getParameterAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>annotations <span class="token operator">-&gt;</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>annotations<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Annotation</span><span class="token operator">::</span><span class="token function">annotationType</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>MethodName: getT
ParameterCount: <span class="token number">3</span>
Parameters: <span class="token punctuation">[</span>int arg0, java.lang.String arg1, T arg2<span class="token punctuation">]</span>
ParameterTypes: <span class="token punctuation">[</span>int, class java.lang.String, class java.lang.Object<span class="token punctuation">]</span>
GenericParameterTypes: <span class="token punctuation">[</span>int, class java.lang.String, T<span class="token punctuation">]</span>
AnnotatedParameterTypes: <span class="token punctuation">[</span>int, class java.lang.String, T<span class="token punctuation">]</span>
ParameterAnnotations: <span class="token punctuation">[</span>interface com.guodong.android.retrofit.MyAnnotation<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从输出结果中可以比较直观的看出 <code>getParameters()</code>，<code>getParameterTypes()</code> ，<code>getGenericParameterTypes()</code> 以及 <code>getAnnotatedParameterTypes()</code> 这四个方法返回值的不同，通过 <code>getParameterAnnotations()</code> 方法可以获取方法参数注解的信息。</p><h3 id="方法注解" tabindex="-1"><a class="header-anchor" href="#方法注解" aria-hidden="true">#</a> 方法注解</h3><p>在 <code>Method</code> 中有六个方法与获取方法注解有关：</p><table><thead><tr><th>返回值</th><th>方法名称与描述</th></tr></thead><tbody><tr><td>Annotation[]</td><td>getAnnotations()<br> 返回 <code>Annotation</code> 对象数组，这些对象表示方法注解的类型，包含继承的注解。如果父类方法被子类重写，那么注解不会被继承，如果父类方法没有被子类重写，那么注解会被继承。</td></tr><tr><td>Annotation[]</td><td>getDeclaredAnnotations()<br> 返回 <code>Annotation</code> 对象数组，这些对象表示方法注解的类型，不包含继承的注解。</td></tr><tr><td><code>&lt;T extends Annotation&gt; T</code></td><td><code>getAnnotation(Class&lt;T&gt; annotationClass)</code><br> 根据传入的注解 <code>Class</code> 对象返回 <code>Annotation</code> 对象，如果没有对应的注解则返回 <code>null</code>，此对象表示方法注解的类型，包含继承的注解。</td></tr><tr><td><code>&lt;T extends Annotation&gt; T</code></td><td><code>getDeclaredAnnotation(Class&lt;T&gt; annotationClass)</code><br> 根据传入的注解 <code>Class</code> 对象返回 <code>Annotation</code> 对象，如果没有对应的注解则返回 <code>null</code>，此对象表示方法注解的类型，不包含继承的注解。</td></tr><tr><td><code>&lt;T extends Annotation&gt; T[]</code></td><td><code>getAnnotationsByType(Class&lt;T&gt; annotationClass)</code><br> 根据传入的注解 <code>Class</code> 对象返回 <code>Annotation</code> 对象数组，如果没有对应的注解则返回空的数组，这些对象表示方法注解的类型，包含继承的注解。JDK 1.8 新增，因 1.8 增加了 <code>@Repeatable</code> 注解。</td></tr><tr><td><code>&lt;T extends Annotation&gt; T[]</code></td><td><code>getDeclaredAnnotationsByType(Class&lt;T&gt; annotationClass)</code><br> 根据传入的注解 <code>Class</code> 对象返回 <code>Annotation</code> 对象数组，如果没有对应的注解则返回空的数组，这些对象表示方法注解的类型，不包含继承的注解。JDK 1.8 新增，因 1.8 增加了 <code>@Repeatable</code> 注解。</td></tr></tbody></table><p>创建两个注解，一个在父类中使用，一个在子类中使用：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ParentAnnotation</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SubAnnotation</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建父类，其中有两个方法 <code>parent()</code> 和 <code>parent2()</code>，两个方法都有 <code>@ParentAnnotation</code> 注解标记：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestParent</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@ParentAnnotation</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@ParentAnnotation</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建子类，在子类中重写了父类的 <code>parent()</code> 方法，而没有重写父类的 <code>parent2()</code> 方法，同时为子类的 <code>parent()</code> 方法增加 <code>@GET</code> 和 <code>@SubAnnotation</code> 注解。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">TestParent</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@SubAnnotation</span>
    <span class="token annotation punctuation">@GET</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试代码，首先看下 <code>parent()</code> 方法的注解：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">Test</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Test</span><span class="token punctuation">&gt;</span></span> testClass <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获取\`parent\`方法</span>
    <span class="token class-name">Method</span> parent <span class="token operator">=</span> testClass<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Annotations: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Annotation</span><span class="token operator">::</span><span class="token function">annotationType</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DeclaredAnnotations: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Annotation</span><span class="token operator">::</span><span class="token function">annotationType</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============================================================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getAnnotation-ParentAnnotation: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ParentAnnotation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getDeclaredAnnotation-ParentAnnotation: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ParentAnnotation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getAnnotation-SubAnnotation: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">SubAnnotation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getDeclaredAnnotation-SubAnnotation: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotation</span><span class="token punctuation">(</span><span class="token class-name">SubAnnotation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============================================================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getAnnotationsByType-ParentAnnotation: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">ParentAnnotation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getDeclaredAnnotationsByType-ParentAnnotation: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">ParentAnnotation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getAnnotationsByType-SubAnnotation: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">SubAnnotation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getDeclaredAnnotationsByType-SubAnnotation: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">SubAnnotation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============================================================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Annotations: <span class="token punctuation">[</span>interface com.guodong.android.retrofit.SubAnnotation, interface retrofit2.http.GET<span class="token punctuation">]</span>
DeclaredAnnotations: <span class="token punctuation">[</span>interface com.guodong.android.retrofit.SubAnnotation, interface retrofit2.http.GET<span class="token punctuation">]</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
getAnnotation-ParentAnnotation: null
getDeclaredAnnotation-ParentAnnotation: null
getAnnotation-SubAnnotation: @com.guodong.android.retrofit.SubAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span>
getDeclaredAnnotation-SubAnnotation: @com.guodong.android.retrofit.SubAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
getAnnotationsByType-ParentAnnotation: <span class="token punctuation">[</span><span class="token punctuation">]</span>
getDeclaredAnnotationsByType-ParentAnnotation: <span class="token punctuation">[</span><span class="token punctuation">]</span>
getAnnotationsByType-SubAnnotation: <span class="token punctuation">[</span>@com.guodong.android.retrofit.SubAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
getDeclaredAnnotationsByType-SubAnnotation: <span class="token punctuation">[</span>@com.guodong.android.retrofit.SubAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从输出结果可以看出：对于子类重写的方法，<code>getAnnotations()</code> 方法不会获取父类方法上的注解，这种情况 <code>getAnnotations()</code> 和 <code>getDeclaredAnnotations()</code> 方法表现一致，同时注解没有被继承，所以 <code>getAnnotation(ParentAnnotation.class)</code> 获取不到 <code>@ParentAnnotation</code> 注解，但是可以获取到 <code>@SubAnnotation</code> 注解，同理， <code>getAnnotationsByType()</code> 与 <code>getDeclaredAnnotationsByType()</code> 方法也是如此。</p><p>接下来，我们看下 <code>parent2()</code> 方法的注解，只需替换 <code>testClass.getMethod(&quot;parent&quot;);</code> 为 <code>testClass.getMethod(&quot;parent2&quot;);</code> 即可，输出结果如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Annotations: <span class="token punctuation">[</span>interface com.guodong.android.retrofit.ParentAnnotation<span class="token punctuation">]</span>
DeclaredAnnotations: <span class="token punctuation">[</span>interface com.guodong.android.retrofit.ParentAnnotation<span class="token punctuation">]</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
getAnnotation-ParentAnnotation: @com.guodong.android.retrofit.ParentAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span>
getDeclaredAnnotation-ParentAnnotation: @com.guodong.android.retrofit.ParentAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span>
getAnnotation-SubAnnotation: null
getDeclaredAnnotation-SubAnnotation: null
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
getAnnotationsByType-ParentAnnotation: <span class="token punctuation">[</span>@com.guodong.android.retrofit.ParentAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
getDeclaredAnnotationsByType-ParentAnnotation: <span class="token punctuation">[</span>@com.guodong.android.retrofit.ParentAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
getAnnotationsByType-SubAnnotation: <span class="token punctuation">[</span><span class="token punctuation">]</span>
getDeclaredAnnotationsByType-SubAnnotation: <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从输出结果可以看出：对于子类没有重写的方法，可以获取到父类方法上的注解。</p><h3 id="可重复注解" tabindex="-1"><a class="header-anchor" href="#可重复注解" aria-hidden="true">#</a> 可重复注解</h3><p>最后我们看下 <code>@Repeatable</code> 注解对各 <code>getXXXAnnotationX</code> 方法的影响，首先创建两个新的注解，一个标记为可重复注解 <code>@Element</code>，另一个为 <code>@Element</code> 的容器注解 <code>@Array</code>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span>
    <span class="token class-name">Element</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Repeatable</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Element</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改子类的 <code>parent()</code> 方法，新增 <code>@Element</code> 注解：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@Element
@Element
@SubAnnotation
@GET
@Override
public void parent() {
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改测试代码，新增获取 <code>@Element</code> 和 <code>@Array</code> 注解：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getAnnotation-Array: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getDeclaredAnnotation-Array: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getAnnotation-Element: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getDeclaredAnnotation-Element: &quot;</span> <span class="token operator">+</span> parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getAnnotationsByType-Array: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getDeclaredAnnotationsByType-Array: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getAnnotationsByType-Element: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getDeclaredAnnotationsByType-Element: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看下输出结果：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Annotations: <span class="token punctuation">[</span>interface com.guodong.android.retrofit.Array, interface com.guodong.android.retrofit.SubAnnotation, interface retrofit2.http.GET<span class="token punctuation">]</span>
DeclaredAnnotations: <span class="token punctuation">[</span>interface com.guodong.android.retrofit.Array, interface com.guodong.android.retrofit.SubAnnotation, interface retrofit2.http.GET<span class="token punctuation">]</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
getAnnotation-ParentAnnotation: null
getDeclaredAnnotation-ParentAnnotation: null
getAnnotation-SubAnnotation: @com.guodong.android.retrofit.SubAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span>
getDeclaredAnnotation-SubAnnotation: @com.guodong.android.retrofit.SubAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span>
getAnnotation-Array: @com.guodong.android.retrofit.Array<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">[</span>@com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span>, @com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
getDeclaredAnnotation-Array: @com.guodong.android.retrofit.Array<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">[</span>@com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span>, @com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
getAnnotation-Element: null
getDeclaredAnnotation-Element: null
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
getAnnotationsByType-ParentAnnotation: <span class="token punctuation">[</span><span class="token punctuation">]</span>
getDeclaredAnnotationsByType-ParentAnnotation: <span class="token punctuation">[</span><span class="token punctuation">]</span>
getAnnotationsByType-SubAnnotation: <span class="token punctuation">[</span>@com.guodong.android.retrofit.SubAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
getDeclaredAnnotationsByType-SubAnnotation: <span class="token punctuation">[</span>@com.guodong.android.retrofit.SubAnnotation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
getAnnotationsByType-Array: <span class="token punctuation">[</span>@com.guodong.android.retrofit.Array<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">[</span>@com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span>, @com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
getDeclaredAnnotationsByType-Array: <span class="token punctuation">[</span>@com.guodong.android.retrofit.Array<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">[</span>@com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span>, @com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
getAnnotationsByType-Element: <span class="token punctuation">[</span>@com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span>, @com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
getDeclaredAnnotationsByType-Element: <span class="token punctuation">[</span>@com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span>, @com.guodong.android.retrofit.Element<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从输出结果可以看出：</p><ol><li><code>getAnnotations()</code> 和 <code>getDeclaredAnnotations()</code> 方法没有返回 <code>@Element</code> 注解，而是 <code>@Array</code> 注解，</li><li><code>getAnnotation(Array.class)</code> 和 <code>getDeclaredAnnotation(Array.class)</code> 方法也没有返回 <code>@Element</code> 注解，也是 <code>@Array</code> 注解，</li><li><code>getAnnotation(Element.class)</code> 和 <code>getDeclaredAnnotation(Element.class)</code> 方法却返回了 null，这是不是说明 <code>parent()</code> 方法没有 <code>@Element</code> 注解呢？</li><li><code>getAnnotationsByType(Array.class)</code> 和 <code>getDeclaredAnnotationsByType(Array.class)</code> 方法返回了 <code>@Array</code> 注解，</li><li><code>getAnnotationsByType(Element.class)</code> 和 <code>getDeclaredAnnotationsByType(Element.class)</code> 方法返回了 <code>@Element</code> 注解，终于看到 <code>@Element</code> 注解了。</li></ol><p>可重复注解小结：</p><ol><li>对于可重复注解，有两个以上注解时，会被替换为容器注解，如上面的 <code>@Element</code> 注解，<code>parent()</code> 方法有两个 <code>@Element</code> 注解，那么编译后会替换为容器注解 <code>@Array</code>，</li><li>对于可重复注解，要获取真实的 <code>@Element</code> 注解，只能通过 <code>getDeclaredAnnotationsByType(Element.class)</code> 方法获取。</li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ol><li>对 <code>Method</code> 的学习，可以让我们更好的理解 Java 的设计思想，比如 <code>Method</code> 是如何抽象表示 Java 中的所有方法：方法参数的抽象，方法返回值的抽象以及方法注解的获取。</li><li>对 <code>Method</code> 的学习，可以让我们更好的分析 Retrofit 是如何解析我们定义的接口方法，比如如何获取方法参数与方法参数注解，如何获取方法返回值，如何获取方法上的注解等。</li></ol><p>反射相关的知识先学到这吧，目前关于反射的知识相信足以分析 Retrofit 相关的源码了，若是在分析时遇到新的知识点，我们再学习吧😃。</p><p>happy~</p>`,68);function b(y,A){const a=i("RouterLink");return o(),p("div",null,[r,s("p",null,[n("在 "),e(a,{to:"/SourceCodeAnalysis/Retrofit/4.%E5%8F%8D%E5%B0%84(%E4%B8%80).html"},{default:c(()=>[n("上一篇文章")]),_:1}),n(" 中我们学习了与反射相关的 "),k,n(" 知识。在 "),d,n(" 中与反射相关的主要是 "),v,n("，所以本文学习反射的重点在于 "),m,n(" 反射相关的知识点。")]),g])}const h=t(u,[["render",b],["__file","5.反射(二).html.vue"]]);export{h as default};
