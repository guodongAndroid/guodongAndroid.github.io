import{_ as n,Y as s,Z as a,a3 as t}from"./framework-3d290349.js";const o={},p=t(`<h1 id="修改linphone-sdk-android-第四篇" tabindex="-1"><a class="header-anchor" href="#修改linphone-sdk-android-第四篇" aria-hidden="true">#</a> 修改linphone-sdk-android-第四篇</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>在使用linphone-sdk-android过程中，发现当有一起呼叫在通话中时，又收到一起呼叫，会莫名其妙的播报振铃声音，问题是已经调用linphone-sdk-android提供的接口关闭了振铃声音</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 关闭Ring</span>
mCore<span class="token punctuation">.</span><span class="token function">setRing</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mCore<span class="token punctuation">.</span><span class="token function">setRingback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mCore<span class="token punctuation">.</span><span class="token function">setRemoteRingbackTone</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mCore<span class="token punctuation">.</span><span class="token function">setNativeRingingEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mCore<span class="token punctuation">.</span><span class="token function">setRingDuringIncomingEarlyMedia</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mCore<span class="token punctuation">.</span><span class="token function">setVibrationOnIncomingCallEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 关闭CallErrorTone</span>
<span class="token class-name">Reason</span><span class="token punctuation">[</span><span class="token punctuation">]</span> reasons <span class="token operator">=</span> <span class="token class-name">Reason</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Reason</span> reason <span class="token operator">:</span> reasons<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mCore<span class="token punctuation">.</span><span class="token function">setCallErrorTone</span><span class="token punctuation">(</span>reason<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 关闭ToneId</span>
<span class="token class-name">ToneID</span><span class="token punctuation">[</span><span class="token punctuation">]</span> toneIds <span class="token operator">=</span> <span class="token class-name">ToneID</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ToneID</span> toneId <span class="token operator">:</span> toneIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mCore<span class="token punctuation">.</span><span class="token function">setTone</span><span class="token punctuation">(</span>toneId<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p>查看Logcat输出的日志，分析发现有<code>ToneManager</code>、<code>doStartRingtone</code>等关键词</p><div class="language-logcat line-numbers-mode" data-ext="logcat"><pre class="language-logcat"><code>13056-13056/com.guodong.android.linphone I/liblinphone: [ToneManager] [0x934e70ac] state changed : [None, LinphoneCallIncomingReceived]
13056-13056/com.guodong.android.linphone I/liblinphone: [ToneManager] add new session [0x934e70ac]
13056-13056/com.guodong.android.linphone I/liblinphone: [ToneManager] doStopToneToPlaySomethingElse
13056-13056/com.guodong.android.linphone I/liblinphone: [ToneManager] doStartRingtone
13056-13056/com.guodong.android.linphone I/liblinphone: [ToneManager] doStartNamedTone [2]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开IDE去源码中搜索一番，发现<code>tone-manager.cpp</code>，在其中找到<code>doStopToneToPlaySomethingElse</code>、<code>doStartRingtone</code>、<code>doStartNamedTone</code>方法，与Logcat日志输出吻合</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">ToneManager</span><span class="token double-colon punctuation">::</span><span class="token function">doStopToneToPlaySomethingElse</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>shared_ptr<span class="token operator">&lt;</span>CallSession<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">lInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[ToneManager] &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">__func__</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAnotherSessionInState</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> State<span class="token double-colon punctuation">::</span>Tone<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">doStopTone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">ToneManager</span><span class="token double-colon punctuation">::</span><span class="token function">doStartRingtone</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>shared_ptr<span class="token operator">&lt;</span>CallSession<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">lInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[ToneManager] &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">__func__</span><span class="token punctuation">;</span>
	LinphoneCore <span class="token operator">*</span>lc <span class="token operator">=</span> <span class="token function">getCore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getCCore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 如果有一个正在通话的呼叫就调用\`doStartNamedTone\`</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAnotherSessionInState</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> State<span class="token double-colon punctuation">::</span>Call<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">/* play a tone within the context of the current call */</span>
		<span class="token function">doStartNamedTone</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> LinphoneToneCallWaiting<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		MSSndCard <span class="token operator">*</span>ringcard <span class="token operator">=</span> lc<span class="token operator">-&gt;</span>sound_conf<span class="token punctuation">.</span>lsd_card <span class="token operator">?</span> lc<span class="token operator">-&gt;</span>sound_conf<span class="token punctuation">.</span>lsd_card <span class="token operator">:</span> lc<span class="token operator">-&gt;</span>sound_conf<span class="token punctuation">.</span>ring_sndcard<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>ringcard <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">linphone_core_is_native_ringing_enabled</span><span class="token punctuation">(</span>lc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">linphone_core_callkit_enabled</span><span class="token punctuation">(</span>lc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token function">ms_snd_card_set_stream_type</span><span class="token punctuation">(</span>ringcard<span class="token punctuation">,</span> MS_SND_CARD_STREAM_RING<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">linphone_ringtoneplayer_start</span><span class="token punctuation">(</span>lc<span class="token operator">-&gt;</span>factory<span class="token punctuation">,</span> lc<span class="token operator">-&gt;</span>ringtoneplayer<span class="token punctuation">,</span> ringcard<span class="token punctuation">,</span> lc<span class="token operator">-&gt;</span>sound_conf<span class="token punctuation">.</span>local_ring<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
				<span class="token function">ms_message</span><span class="token punctuation">(</span><span class="token string">&quot;Callkit is enabled, not playing ringtone.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">ToneManager</span><span class="token double-colon punctuation">::</span><span class="token function">doStartNamedTone</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>shared_ptr<span class="token operator">&lt;</span>CallSession<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>session<span class="token punctuation">,</span> LinphoneToneID toneId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">lInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[ToneManager] &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">__func__</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; [&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token class-name">Utils</span><span class="token double-colon punctuation">::</span><span class="token function">toString</span><span class="token punctuation">(</span>toneId<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">;</span>
	LinphoneToneDescription <span class="token operator">*</span>tone <span class="token operator">=</span> <span class="token function">getToneFromId</span><span class="token punctuation">(</span>toneId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 在Java中已将audiofile置为&quot;&quot;，所以会走else分支</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>tone <span class="token operator">&amp;&amp;</span> tone<span class="token operator">-&gt;</span>audiofile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">playFile</span><span class="token punctuation">(</span>tone<span class="token operator">-&gt;</span>audiofile<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 此处生成振铃声音</span>
		MSDtmfGenCustomTone dtmfTone <span class="token operator">=</span> <span class="token function">generateToneFromId</span><span class="token punctuation">(</span>toneId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">playTone</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> dtmfTone<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好的，现在先找到调用<code>doStopToneToPlaySomethingElse</code>的方法，在IDE中查找，发现<code>startRingtone</code>方法</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">ToneManager</span><span class="token double-colon punctuation">::</span><span class="token function">printDebugInfo</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>shared_ptr<span class="token operator">&lt;</span>CallSession<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">auto</span> callState <span class="token operator">=</span> session<span class="token operator">-&gt;</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">auto</span> toneState <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">lInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[ToneManager] [&quot;</span> <span class="token operator">&lt;&lt;</span> session <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;] state changed : [&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token function">stateToString</span><span class="token punctuation">(</span>toneState<span class="token punctuation">)</span>  <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token class-name">Utils</span><span class="token double-colon punctuation">::</span><span class="token function">toString</span><span class="token punctuation">(</span>callState<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">ToneManager</span><span class="token double-colon punctuation">::</span><span class="token function">startRingtone</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>shared_ptr<span class="token operator">&lt;</span>CallSession<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">printDebugInfo</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 对应Logcat第一行输出日志</span>
	<span class="token function">setState</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> State<span class="token double-colon punctuation">::</span>Ringtone<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 对应Logcat第二行输出日志</span>
    <span class="token comment">// 如果另外一个呼叫不在Ringtone且不在Ringback状态</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAnotherSessionInState</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> State<span class="token double-colon punctuation">::</span>Ringtone<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isAnotherSessionInState</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> State<span class="token double-colon punctuation">::</span>Ringback<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">doStopToneToPlaySomethingElse</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">doStartRingtone</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mStats<span class="token operator">-&gt;</span>number_of_startRingtone<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看<code>ToneManager::startRingtone</code>下面的<code>startErrorTone</code>方法，发现此方法是调用<code>linphone_core_tone_indications_enabled</code>判断是否可以播报Tone，猜想可以在<code>startRingtone</code>方法中也增加此判断逻辑</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">ToneManager</span><span class="token double-colon punctuation">::</span><span class="token function">startErrorTone</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>shared_ptr<span class="token operator">&lt;</span>CallSession<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>session<span class="token punctuation">,</span> LinphoneReason reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	LinphoneCore <span class="token operator">*</span>lc <span class="token operator">=</span> <span class="token function">getCore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getCCore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 此处判断是否可以播报Tone</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">linphone_core_tone_indications_enabled</span><span class="token punctuation">(</span>lc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">printDebugInfo</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">doStopToneToPlaySomethingElse</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">doStartErrorTone</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mStats<span class="token operator">-&gt;</span>number_of_startErrorTone<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不过需要先了解下<code>linphone_core_tone_indications_enabled</code>方法的实现，此方法位于<code>msic.c</code>中，方法内部从<code>linphone_config</code>中读取<code>sound</code>section下<code>tone_indications</code>key的值转换为<code>bool_t</code>类型，大于0为Ture，小于等于0为Flase，其中<code>linphone_config</code>可以从Java层配置</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>bool_t <span class="token function">linphone_core_tone_indications_enabled</span><span class="token punctuation">(</span>LinphoneCore<span class="token operator">*</span>lc<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token function">linphone_config_get_int</span><span class="token punctuation">(</span>lc<span class="token operator">-&gt;</span>config<span class="token punctuation">,</span><span class="token string">&quot;sound&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;tone_indications&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好的，问题分析完毕，可以在<code>startRingtone</code>方法中也增加此判断逻辑了</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">ToneManager</span><span class="token double-colon punctuation">::</span><span class="token function">startRingtone</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>shared_ptr<span class="token operator">&lt;</span>CallSession<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">printDebugInfo</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">setState</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> State<span class="token double-colon punctuation">::</span>Ringtone<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// modified by guodongAndroid on 2022/04/24 修改有正在通话的呼叫时，又收到一起呼叫播报Ringtone问题</span>
	<span class="token comment">// 增加tone_indications是否开启判断</span>
	LinphoneCore <span class="token operator">*</span>lc <span class="token operator">=</span> <span class="token function">getCore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getCCore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">linphone_core_tone_indications_enabled</span><span class="token punctuation">(</span>lc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAnotherSessionInState</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> State<span class="token double-colon punctuation">::</span>Ringtone<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isAnotherSessionInState</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> State<span class="token double-colon punctuation">::</span>Ringback<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">doStopToneToPlaySomethingElse</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">doStartRingtone</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mStats<span class="token operator">-&gt;</span>number_of_startRingtone<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存重新编译，等待编译完成拷贝至AS中，现在只需在Java层初始化时配置Config，修改<code>tone_indications</code>的值即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// modified by guodongAndroid on 2022/04/24 修改有正在通话的呼叫时，又收到一起呼叫播报Ringtone问题</span>
<span class="token comment">// 关闭ToneIndications</span>
mCore<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token string">&quot;sound&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tone_indications&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>happy~</p>`,20),e=[p];function c(l,i){return s(),a("div",null,e)}const k=n(o,[["render",c],["__file","修改linphone-sdk-android-第四篇.html.vue"]]);export{k as default};
