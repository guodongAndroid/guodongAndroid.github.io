import{_ as p,Y as t,Z as e,$ as n,a0 as a,a1 as o,a3 as c,E as l}from"./framework-3d290349.js";const i={},u=n("h1",{id:"修改linphone-sdk-android-中篇",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#修改linphone-sdk-android-中篇","aria-hidden":"true"},"#"),a(" 修改linphone-sdk-android-中篇")],-1),k=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),a(" 前言")],-1),r={href:"https://juejin.cn/post/7089664949907095559",target:"_blank",rel:"noopener noreferrer"},v=c(`<p>本文是中篇，本篇记录问题2的后续排查过程及修复方案，尽量描述排查问题过程中的思路与方向</p><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p>上篇说到增加日志，编译后放到AS中运行，查看Logcat输出</p><div class="language-logcat line-numbers-mode" data-ext="logcat"><pre class="language-logcat"><code>// up不为NULL
2022-04-24 18:10:36.969 4002-4018/com.guodong.android.linphone D/guodongAndroid: up = 0x100433
2022-04-24 18:10:36.969 4002-4018/com.guodong.android.linphone D/guodongAndroid: up_available1 = 0
2022-04-24 18:10:36.969 4002-4018/com.guodong.android.linphone D/guodongAndroid: up_available2 = 0

// up为NULL
2022-04-24 18:10:39.669 4002-4018/com.guodong.android.linphone D/guodongAndroid: up = 0x0
2022-04-24 18:10:39.669 4002-4018/com.guodong.android.linphone D/guodongAndroid: up_available1 = 1
2022-04-24 18:10:39.669 4002-4018/com.guodong.android.linphone D/guodongAndroid: up_available2 = 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从日志中可以看出，有时<code>up</code>是<code>NULL</code>的，猜想有销毁的方法，再次查看<code>linphone_jni.cc</code>，发现有一个<code>unref</code>方法：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>JNIEXPORT jboolean JNICALL <span class="token function">Java_org_linphone_core_LoggingServiceImpl_unref</span><span class="token punctuation">(</span>JNIEnv<span class="token operator">*</span> env<span class="token punctuation">,</span> jobject thiz<span class="token punctuation">,</span> jlong ptr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	LinphoneLoggingService <span class="token operator">*</span>cptr <span class="token operator">=</span> <span class="token punctuation">(</span>LinphoneLoggingService<span class="token operator">*</span><span class="token punctuation">)</span>ptr<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>cptr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">bctbx_error</span><span class="token punctuation">(</span><span class="token string">&quot;Java_org_linphone_core_LoggingServiceImpl_unref&#39;s LinphoneLoggingService C ptr is null!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> TRUE<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	jobject wref <span class="token operator">=</span> <span class="token punctuation">(</span>jobject<span class="token punctuation">)</span><span class="token function">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>belle_sip_object_t <span class="token operator">*</span><span class="token punctuation">)</span>cptr<span class="token punctuation">,</span> belle_sip_java_user_data_key<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span>belle_sip_object_t <span class="token operator">*</span><span class="token punctuation">)</span>cptr<span class="token punctuation">,</span> belle_sip_java_user_data_key<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>wref<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		env<span class="token operator">-&gt;</span><span class="token function">DeleteWeakGlobalRef</span><span class="token punctuation">(</span>wref<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">belle_sip_object_unref_2</span><span class="token punctuation">(</span>cptr<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>嗯，看来这个就是销毁方法了，通过<code>belle_sip_object_data_get</code>方法取出值，再通过<code>belle_sip_object_data_set</code>方法设置为<code>nullptr</code>，然后删除全局弱引用</p><p>这个方法也加点日志输出吧，打开<code>jni.mustache</code>，找到模板方法，添加日志输出：</p><div class="language-mustache line-numbers-mode" data-ext="mustache"><pre class="language-mustache"><code><span class="token variable">JNIEXPORT</span> <span class="token variable">jboolean</span> <span class="token variable">JNICALL</span> <span class="token variable">Java_</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">jniPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classImplName</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_unref</span><span class="token punctuation">(</span><span class="token variable">JNIEnv</span><span class="token punctuation">*</span> <span class="token variable">env</span><span class="token punctuation">,</span> <span class="token variable">jobject</span> <span class="token variable">thiz</span><span class="token punctuation">,</span> <span class="token variable">jlong</span> <span class="token variable">ptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">*</span><span class="token variable">cptr</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">ptr</span><span class="token punctuation">;</span>
	<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">cptr</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">bctbx_error</span><span class="token punctuation">(</span><span class="token string">&quot;Java_{{jniPrefix}}{{classImplName}}_unref&#39;s {{classCName}} C ptr is null!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">return</span> <span class="token variable">TRUE</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token variable">jobject</span> <span class="token variable">wref</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">begin</span> <span class="token variable">-</span> <span class="token variable">added</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
    <span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;unref wref = %p&quot;</span><span class="token punctuation">,</span> <span class="token variable">wref</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
    <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
  	<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">end</span> <span class="token variable">-</span> <span class="token variable">added</span>

	<span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">wref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">wref</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">return</span> <span class="token variable">belle_sip_object_unref_2</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">notRefCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">return</span> <span class="token variable">FALSE</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">notRefCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新编译后放到AS中运行，查看Logcat输出</p><div class="language-logcat line-numbers-mode" data-ext="logcat"><pre class="language-logcat"><code>2022-04-24 18:18:52.359 4240-4249/com.guodong.android.linphone D/guodongAndroid: unref wref = 0x1002e3
2022-04-24 18:19:02.296 4240-4257/com.guodong.android.linphone D/guodongAndroid: up = 0x0
2022-04-24 18:19:02.296 4240-4257/com.guodong.android.linphone D/guodongAndroid: up_available1 = 1
2022-04-24 18:19:02.296 4240-4257/com.guodong.android.linphone D/guodongAndroid: up_available2 = 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从日志中可以分析出两点：</p><ol><li>的确有销毁的方法被调用</li><li>调用<code>unref</code>方法的线程与调用<code>getLoggingService</code>方法的线程不同</li></ol><p>结合以上两点，大胆的猜测问题出在多线程上，在多线程上此问题是偶现的就不奇怪了</p><p>出问题时，日志输出如下</p><div class="language-logcat line-numbers-mode" data-ext="logcat"><pre class="language-logcat"><code>2022-04-24 18:25:02.296 4240-4257/com.guodong.android.linphone D/guodongAndroid: up = 0x20004f
2022-04-24 18:25:02.296 4240-4257/com.guodong.android.linphone D/guodongAndroid: up_available1 = 1
2022-04-24 18:25:02.296 4240-4249/com.guodong.android.linphone D/guodongAndroid: unref wref = 0x1002e3
App Crash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多线程问题，第一想法是通过加锁，保证代码间调用的互斥性</p><p>再次打开<code>jni.mustache</code>，添加互斥锁相关代码：</p><div class="language-mustache line-numbers-mode" data-ext="mustache"><pre class="language-mustache"><code><span class="token block keyword">//</span> <span class="token variable">Added</span> <span class="token variable">by</span> <span class="token variable">guodongAndroid</span> <span class="token variable">on</span> <span class="token number">2022</span><span class="token punctuation">/</span><span class="token number">04</span><span class="token punctuation">/</span><span class="token number">22</span>
<span class="token block keyword">#ifdef</span> <span class="token variable">__ANDROID__</span>
<span class="token variable">static</span> <span class="token variable">pthread_mutex_t</span> <span class="token variable">mutex</span><span class="token punctuation">;</span>
<span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>

<span class="token variable">JNIEXPORT</span> <span class="token variable">jint</span> <span class="token variable">JNICALL</span> <span class="token variable">JNI_OnLoad</span><span class="token punctuation">(</span><span class="token variable">JavaVM</span> <span class="token punctuation">*</span><span class="token variable">ajvm</span><span class="token punctuation">,</span> <span class="token variable">void</span> <span class="token punctuation">*</span><span class="token variable">reserved</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
	<span class="token variable">ms_set_jvm</span><span class="token punctuation">(</span><span class="token variable">ajvm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">int</span> <span class="token variable">result</span> <span class="token punctuation">=</span> <span class="token variable">pthread_mutex_init</span><span class="token punctuation">(</span><span class="token punctuation">&amp;</span><span class="token variable">mutex</span><span class="token punctuation">,</span> <span class="token variable">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JNI_OnLoad, mutex init result = %d&quot;</span><span class="token punctuation">,</span> <span class="token variable">result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
	<span class="token variable">jvm</span> <span class="token punctuation">=</span> <span class="token variable">ajvm</span><span class="token punctuation">;</span>
	<span class="token variable">return</span> <span class="token variable">JNI_VERSION_1_2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">Added</span> <span class="token variable">by</span> <span class="token variable">guodongAndroid</span> <span class="token variable">on</span> <span class="token number">2022</span><span class="token punctuation">/</span><span class="token number">04</span><span class="token punctuation">/</span><span class="token number">22</span>
<span class="token variable">JNIEXPORT</span> <span class="token variable">void</span> <span class="token variable">JNI_OnUnload</span><span class="token punctuation">(</span><span class="token variable">JavaVM</span> <span class="token punctuation">*</span><span class="token variable">ajvm</span><span class="token punctuation">,</span> <span class="token variable">void</span> <span class="token punctuation">*</span><span class="token variable">reserved</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
	<span class="token variable">int</span> <span class="token variable">result</span> <span class="token punctuation">=</span> <span class="token variable">pthread_mutex_destroy</span><span class="token punctuation">(</span><span class="token punctuation">&amp;</span><span class="token variable">mutex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JNI_OnUnload, mutex destroy result = %d&quot;</span><span class="token punctuation">,</span> <span class="token variable">result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
<span class="token punctuation">}</span>

<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">objects</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token variable">JNIEXPORT</span> <span class="token variable">jobject</span> <span class="token variable">JNICALL</span> <span class="token variable">get</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">className</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token variable">JNIEnv</span> <span class="token punctuation">*</span><span class="token variable">env</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">*</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">bool_t</span> <span class="token variable">takeref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token variable">jobject</span> <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">;</span>

	<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">cptr</span> <span class="token punctuation">!</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">begin</span> <span class="token variable">add</span>
		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
		<span class="token variable">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token punctuation">&amp;</span><span class="token variable">mutex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">end</span> <span class="token variable">add</span>
		
		<span class="token variable">void</span> <span class="token punctuation">*</span><span class="token variable">up</span> <span class="token punctuation">=</span> <span class="token variable">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">linphone_factory_get_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token punctuation">!</span><span class="token variable">ljb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token variable">new</span> <span class="token variable">LinphoneJavaBindings</span><span class="token punctuation">(</span><span class="token variable">env</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">linphone_factory_set_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">ljb</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token variable">jclass</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">;</span>
		<span class="token variable">jmethodID</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class_constructor</span><span class="token punctuation">;</span>

		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up = %p&quot;</span><span class="token punctuation">,</span> <span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token variable">jobject</span> <span class="token variable">temp_jobj1</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">;</span>
		<span class="token variable">jboolean</span> <span class="token variable">up_available1</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">IsSameObject</span><span class="token punctuation">(</span><span class="token variable">temp_jobj1</span><span class="token punctuation">,</span> <span class="token variable">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up_available1 = %d&quot;</span><span class="token punctuation">,</span> <span class="token variable">up_available1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token variable">jobject</span> <span class="token variable">temp_jobj2</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">;</span>
		<span class="token variable">jboolean</span> <span class="token variable">up_available2</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">IsSameObject</span><span class="token punctuation">(</span><span class="token variable">temp_jobj2</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up_available2 = %d&quot;</span><span class="token punctuation">,</span> <span class="token variable">up_available2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>

		<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">up</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
				<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token variable">else</span> <span class="token punctuation">{</span>
			<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewLocalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">jobj</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">Delete</span> <span class="token variable">weak</span> <span class="token variable">ref</span> <span class="token variable">?</span>
				<span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">takes</span> <span class="token variable">implicit</span> <span class="token variable">local</span> <span class="token variable">ref</span>
				<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
					<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		
		<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">begin</span> <span class="token variable">add</span>
		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token variable">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token punctuation">&amp;</span><span class="token variable">mutex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">end</span> <span class="token variable">add</span>
	<span class="token punctuation">}</span>
	<span class="token variable">return</span> <span class="token variable">jobj</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">JNIEXPORT</span> <span class="token variable">jboolean</span> <span class="token variable">JNICALL</span> <span class="token variable">Java_</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">jniPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classImplName</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_unref</span><span class="token punctuation">(</span><span class="token variable">JNIEnv</span><span class="token punctuation">*</span> <span class="token variable">env</span><span class="token punctuation">,</span> <span class="token variable">jobject</span> <span class="token variable">thiz</span><span class="token punctuation">,</span> <span class="token variable">jlong</span> <span class="token variable">ptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">*</span><span class="token variable">cptr</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">ptr</span><span class="token punctuation">;</span>
	<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">cptr</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">bctbx_error</span><span class="token punctuation">(</span><span class="token string">&quot;Java_{{jniPrefix}}{{classImplName}}_unref&#39;s {{classCName}} C ptr is null!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">return</span> <span class="token variable">TRUE</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">begin</span> <span class="token variable">add</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
	<span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
	<span class="token variable">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token punctuation">&amp;</span><span class="token variable">mutex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
	<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">end</span> <span class="token variable">add</span>
	
	<span class="token variable">jobject</span> <span class="token variable">wref</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
    <span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;unref wref = %p&quot;</span><span class="token punctuation">,</span> <span class="token variable">wref</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
    <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>

	<span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">wref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">wref</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">begin</span> <span class="token variable">add</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
	<span class="token variable">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token punctuation">&amp;</span><span class="token variable">mutex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
	<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">end</span> <span class="token variable">add</span>
	
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">return</span> <span class="token variable">belle_sip_object_unref_2</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">notRefCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">return</span> <span class="token variable">FALSE</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">notRefCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新编译后拷贝到AS中运行，持续观察Logcat及运行情况</p>`,20);function b(d,_){const s=l("ExternalLinkIcon");return t(),e("div",null,[u,k,n("p",null,[a("接上篇"),n("a",r,[a("修改linphone-sdk-android-上篇"),o(s)])]),v])}const g=p(i,[["render",b],["__file","修改linphone-sdk-android-第二篇.html.vue"]]);export{g as default};
