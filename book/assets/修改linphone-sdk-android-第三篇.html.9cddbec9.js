import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as l,a as n,b as t,d as s,e,r as c}from"./app.43850152.js";const i={},u=n("h1",{id:"\u4FEE\u6539linphone-sdk-android-\u4E0B\u7BC7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4FEE\u6539linphone-sdk-android-\u4E0B\u7BC7","aria-hidden":"true"},"#"),s(" \u4FEE\u6539linphone-sdk-android-\u4E0B\u7BC7")],-1),r=n("h2",{id:"\u524D\u8A00",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u8A00","aria-hidden":"true"},"#"),s(" \u524D\u8A00")],-1),d=s("\u63A5\u4E0A\u7BC7"),k={href:"https://juejin.cn/post/7089664949907095559",target:"_blank",rel:"noopener noreferrer"},_=s("\u4FEE\u6539linphone-sdk-android-\u4E0A\u7BC7"),m=s("\u63A5\u4E2D\u7BC7"),v={href:"https://juejin.cn/post/7090172691617071118",target:"_blank",rel:"noopener noreferrer"},g=s("\u4FEE\u6539linphone-sdk-android-\u4E2D\u7BC7"),b=e(`<p>\u672C\u6587\u662F\u4E0B\u7BC7\uFF0C\u672C\u7BC7\u8BB0\u5F55\u5728\u4E0A\u7BC7\u4E2D\u63D0\u5230\u7684\u95EE\u98981\u6392\u67E5\u8FC7\u7A0B\u53CA\u4FEE\u590D\u65B9\u6848\uFF0C\u5C3D\u91CF\u63CF\u8FF0\u6392\u67E5\u95EE\u9898\u8FC7\u7A0B\u4E2D\u7684\u601D\u8DEF\u4E0E\u65B9\u5411</p><p>\u4E0A\u7BC7\u4E2D\u8BF4\u95EE\u98981\u5F53\u521D\u8BA4\u4E3A\u662Flinphone\u7684bug\uFF0C\u540E\u9762\u770B\u6E90\u7801\u53CA\u67E5\u8D44\u6599\u53D1\u73B0\u53EF\u80FD\u4E0D\u662Fbug\uFF0C\u672C\u7BC7\u5C06\u8BB0\u5F55\u4E2A\u4EBA\u7684\u7406\u89E3</p><h2 id="\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898" aria-hidden="true">#</a> \u95EE\u9898</h2><p>\u8FD9\u91CC\u518D\u63CF\u8FF0\u4E0B\u95EE\u98981\uFF1A\u6253\u5F00\u97F3\u9891\u7F16\u89E3\u7801G722\u3001G729\u7B49\u65F6\uFF0C\u53D1\u8D77\u547C\u53EB\u7684INVITE SDP\u4E2D\uFF0C\u6CA1\u6709G722\u3001G729\u7684<code>rtpmap</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>m=audio 7078 RTP/AVP 96 0 8 9 18 101 97
a=fmtp:18 annexb=yes
a=rtpmap:101 telephone-event/48000
a=rtpmap:97 telephone-event/8000
a=rtcp-fb:* trr-int 1000
a=rtcp-fb:* ccm tmmbr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a> \u5206\u6790</h2>`,6),f=s("\u8FD9\u91CC\u5148\u4E86\u89E3\u4E0BSDP\u534F\u8BAE\uFF0C\u53C2\u8003"),h={href:"https://www.3cx.com/blog/voip-howto/sdp-voip2/",target:"_blank",rel:"noopener noreferrer"},y=s("The Session Description Protocol (SDP) (3cx.com)"),x=n("p",null,[n("code",null,"rtpmap"),s("\u662F"),n("code",null,"Session attribute lines"),s("\uFF0C\u5373\u4E3A\u4F1A\u8BDD\u5C5E\u6027\u884C\uFF0C\u662F\u5BF9"),n("code",null,"Payload Type"),s("\u7684\u8865\u5145\u8BF4\u660E\uFF0C"),n("code",null,"Payload Type"),s("\u65E2\u662F"),n("code",null,"m=audio 7078 RTP/AVP 96 0 8 9 18 101 97"),s("\u4E2D"),n("code",null,"AVP"),s("\u540E\u9762\u7684\u6570\u5B57\uFF0C\u8FD9\u4E9B\u6570\u5B57\u662F\u97F3\u9891\u7F16\u89E3\u7801\u5BF9\u5E94\u7684\u4EE3\u7801\uFF0C\u5BF9\u5E94\u5173\u7CFB\u5982\u4E0B\uFF1A")],-1),w=s("\u4E0B\u8868\u6E90\u81EA"),C={href:"https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#rtp-parameters-1",target:"_blank",rel:"noopener noreferrer"},P=s("Real-Time Transport Protocol (RTP) Parameters (iana.org)"),L=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},[s("PT "),n("img",{src:"https://www.iana.org/assignments/_support/sort_none.gif",alt:"img"})]),n("th",{style:{"text-align":"left"}},[s("Encoding Name "),n("img",{src:"https://www.iana.org/assignments/_support/sort_none.gif",alt:"img"})]),n("th",{style:{"text-align":"left"}},[s("Audio/Video (A/V) "),n("img",{src:"https://www.iana.org/assignments/_support/sort_none.gif",alt:"img"})]),n("th",{style:{"text-align":"left"}},[s("Clock Rate (Hz) "),n("img",{src:"https://www.iana.org/assignments/_support/sort_none.gif",alt:"img"})]),n("th",{style:{"text-align":"left"}},[s("Channels "),n("img",{src:"https://www.iana.org/assignments/_support/sort_none.gif",alt:"img"})]),n("th",{style:{"text-align":"left"}},[s("Reference "),n("img",{src:"https://www.iana.org/assignments/_support/sort_none.gif",alt:"img"})])])],-1),A=n("td",{style:{"text-align":"left"}},"0",-1),S=n("td",{style:{"text-align":"left"}},"PCMU",-1),q=n("td",{style:{"text-align":"left"}},"A",-1),R=n("td",{style:{"text-align":"left"}},"8000",-1),D=n("td",{style:{"text-align":"left"}},"1",-1),N={style:{"text-align":"left"}},E=s("["),I={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},T=s("RFC3551"),M=s("]"),F=n("tr",null,[n("td",{style:{"text-align":"left"}},"1"),n("td",{style:{"text-align":"left"}},"Reserved"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),j=n("tr",null,[n("td",{style:{"text-align":"left"}},"2"),n("td",{style:{"text-align":"left"}},"Reserved"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),V=n("td",{style:{"text-align":"left"}},"3",-1),U=n("td",{style:{"text-align":"left"}},"GSM",-1),B=n("td",{style:{"text-align":"left"}},"A",-1),G=n("td",{style:{"text-align":"left"}},"8000",-1),O=n("td",{style:{"text-align":"left"}},"1",-1),J={style:{"text-align":"left"}},H=s("["),z={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},W=s("RFC3551"),X=s("]"),K=n("td",{style:{"text-align":"left"}},"4",-1),Y=n("td",{style:{"text-align":"left"}},"G723",-1),$=n("td",{style:{"text-align":"left"}},"A",-1),Q=n("td",{style:{"text-align":"left"}},"8000",-1),Z=n("td",{style:{"text-align":"left"}},"1",-1),nn={style:{"text-align":"left"}},sn=s("["),an={href:"https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#Vineet_Kumar",target:"_blank",rel:"noopener noreferrer"},tn=s("Vineet_Kumar"),en=s("]["),on={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},pn=s("RFC3551"),ln=s("]"),cn=n("td",{style:{"text-align":"left"}},"5",-1),un=n("td",{style:{"text-align":"left"}},"DVI4",-1),rn=n("td",{style:{"text-align":"left"}},"A",-1),dn=n("td",{style:{"text-align":"left"}},"8000",-1),kn=n("td",{style:{"text-align":"left"}},"1",-1),_n={style:{"text-align":"left"}},mn=s("["),vn={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},gn=s("RFC3551"),bn=s("]"),fn=n("td",{style:{"text-align":"left"}},"6",-1),hn=n("td",{style:{"text-align":"left"}},"DVI4",-1),yn=n("td",{style:{"text-align":"left"}},"A",-1),xn=n("td",{style:{"text-align":"left"}},"16000",-1),wn=n("td",{style:{"text-align":"left"}},"1",-1),Cn={style:{"text-align":"left"}},Pn=s("["),Ln={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},An=s("RFC3551"),Sn=s("]"),qn=n("td",{style:{"text-align":"left"}},"7",-1),Rn=n("td",{style:{"text-align":"left"}},"LPC",-1),Dn=n("td",{style:{"text-align":"left"}},"A",-1),Nn=n("td",{style:{"text-align":"left"}},"8000",-1),En=n("td",{style:{"text-align":"left"}},"1",-1),In={style:{"text-align":"left"}},Tn=s("["),Mn={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},Fn=s("RFC3551"),jn=s("]"),Vn=n("td",{style:{"text-align":"left"}},"8",-1),Un=n("td",{style:{"text-align":"left"}},"PCMA",-1),Bn=n("td",{style:{"text-align":"left"}},"A",-1),Gn=n("td",{style:{"text-align":"left"}},"8000",-1),On=n("td",{style:{"text-align":"left"}},"1",-1),Jn={style:{"text-align":"left"}},Hn=s("["),zn={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},Wn=s("RFC3551"),Xn=s("]"),Kn=n("td",{style:{"text-align":"left"}},"9",-1),Yn=n("td",{style:{"text-align":"left"}},"G722",-1),$n=n("td",{style:{"text-align":"left"}},"A",-1),Qn=n("td",{style:{"text-align":"left"}},"8000",-1),Zn=n("td",{style:{"text-align":"left"}},"1",-1),ns={style:{"text-align":"left"}},ss=s("["),as={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},ts=s("RFC3551"),es=s("]"),os=n("td",{style:{"text-align":"left"}},"10",-1),ps=n("td",{style:{"text-align":"left"}},"L16",-1),ls=n("td",{style:{"text-align":"left"}},"A",-1),cs=n("td",{style:{"text-align":"left"}},"44100",-1),is=n("td",{style:{"text-align":"left"}},"2",-1),us={style:{"text-align":"left"}},rs=s("["),ds={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},ks=s("RFC3551"),_s=s("]"),ms=n("td",{style:{"text-align":"left"}},"11",-1),vs=n("td",{style:{"text-align":"left"}},"L16",-1),gs=n("td",{style:{"text-align":"left"}},"A",-1),bs=n("td",{style:{"text-align":"left"}},"44100",-1),fs=n("td",{style:{"text-align":"left"}},"1",-1),hs={style:{"text-align":"left"}},ys=s("["),xs={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},ws=s("RFC3551"),Cs=s("]"),Ps=n("td",{style:{"text-align":"left"}},"12",-1),Ls=n("td",{style:{"text-align":"left"}},"QCELP",-1),As=n("td",{style:{"text-align":"left"}},"A",-1),Ss=n("td",{style:{"text-align":"left"}},"8000",-1),qs=n("td",{style:{"text-align":"left"}},"1",-1),Rs={style:{"text-align":"left"}},Ds=s("["),Ns={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},Es=s("RFC3551"),Is=s("]"),Ts=n("td",{style:{"text-align":"left"}},"13",-1),Ms=n("td",{style:{"text-align":"left"}},"CN",-1),Fs=n("td",{style:{"text-align":"left"}},"A",-1),js=n("td",{style:{"text-align":"left"}},"8000",-1),Vs=n("td",{style:{"text-align":"left"}},"1",-1),Us={style:{"text-align":"left"}},Bs=s("["),Gs={href:"https://www.iana.org/go/rfc3389",target:"_blank",rel:"noopener noreferrer"},Os=s("RFC3389"),Js=s("]"),Hs=n("td",{style:{"text-align":"left"}},"14",-1),zs=n("td",{style:{"text-align":"left"}},"MPA",-1),Ws=n("td",{style:{"text-align":"left"}},"A",-1),Xs=n("td",{style:{"text-align":"left"}},"90000",-1),Ks=n("td",{style:{"text-align":"left"}},null,-1),Ys={style:{"text-align":"left"}},$s=s("["),Qs={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},Zs=s("RFC3551"),na=s("]["),sa={href:"https://www.iana.org/go/rfc2250",target:"_blank",rel:"noopener noreferrer"},aa=s("RFC2250"),ta=s("]"),ea=n("td",{style:{"text-align":"left"}},"15",-1),oa=n("td",{style:{"text-align":"left"}},"G728",-1),pa=n("td",{style:{"text-align":"left"}},"A",-1),la=n("td",{style:{"text-align":"left"}},"8000",-1),ca=n("td",{style:{"text-align":"left"}},"1",-1),ia={style:{"text-align":"left"}},ua=s("["),ra={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},da=s("RFC3551"),ka=s("]"),_a=n("td",{style:{"text-align":"left"}},"16",-1),ma=n("td",{style:{"text-align":"left"}},"DVI4",-1),va=n("td",{style:{"text-align":"left"}},"A",-1),ga=n("td",{style:{"text-align":"left"}},"11025",-1),ba=n("td",{style:{"text-align":"left"}},"1",-1),fa={style:{"text-align":"left"}},ha=s("["),ya={href:"https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#Joseph_Di_Pol",target:"_blank",rel:"noopener noreferrer"},xa=s("Joseph_Di_Pol"),wa=s("]"),Ca=n("td",{style:{"text-align":"left"}},"17",-1),Pa=n("td",{style:{"text-align":"left"}},"DVI4",-1),La=n("td",{style:{"text-align":"left"}},"A",-1),Aa=n("td",{style:{"text-align":"left"}},"22050",-1),Sa=n("td",{style:{"text-align":"left"}},"1",-1),qa={style:{"text-align":"left"}},Ra=s("["),Da={href:"https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#Joseph_Di_Pol",target:"_blank",rel:"noopener noreferrer"},Na=s("Joseph_Di_Pol"),Ea=s("]"),Ia=n("td",{style:{"text-align":"left"}},"18",-1),Ta=n("td",{style:{"text-align":"left"}},"G729",-1),Ma=n("td",{style:{"text-align":"left"}},"A",-1),Fa=n("td",{style:{"text-align":"left"}},"8000",-1),ja=n("td",{style:{"text-align":"left"}},"1",-1),Va={style:{"text-align":"left"}},Ua=s("["),Ba={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},Ga=s("RFC3551"),Oa=s("]"),Ja=n("tr",null,[n("td",{style:{"text-align":"left"}},"19"),n("td",{style:{"text-align":"left"}},"Reserved"),n("td",{style:{"text-align":"left"}},"A"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),Ha=n("tr",null,[n("td",{style:{"text-align":"left"}},"20"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"A"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),za=n("tr",null,[n("td",{style:{"text-align":"left"}},"21"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"A"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),Wa=n("tr",null,[n("td",{style:{"text-align":"left"}},"22"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"A"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),Xa=n("tr",null,[n("td",{style:{"text-align":"left"}},"23"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"A"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),Ka=n("tr",null,[n("td",{style:{"text-align":"left"}},"24"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"V"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),Ya=n("td",{style:{"text-align":"left"}},"25",-1),$a=n("td",{style:{"text-align":"left"}},"CelB",-1),Qa=n("td",{style:{"text-align":"left"}},"V",-1),Za=n("td",{style:{"text-align":"left"}},"90000",-1),nt=n("td",{style:{"text-align":"left"}},null,-1),st={style:{"text-align":"left"}},at=s("["),tt={href:"https://www.iana.org/go/rfc2029",target:"_blank",rel:"noopener noreferrer"},et=s("RFC2029"),ot=s("]"),pt=n("td",{style:{"text-align":"left"}},"26",-1),lt=n("td",{style:{"text-align":"left"}},"JPEG",-1),ct=n("td",{style:{"text-align":"left"}},"V",-1),it=n("td",{style:{"text-align":"left"}},"90000",-1),ut=n("td",{style:{"text-align":"left"}},null,-1),rt={style:{"text-align":"left"}},dt=s("["),kt={href:"https://www.iana.org/go/rfc2435",target:"_blank",rel:"noopener noreferrer"},_t=s("RFC2435"),mt=s("]"),vt=n("tr",null,[n("td",{style:{"text-align":"left"}},"27"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"V"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),gt=n("td",{style:{"text-align":"left"}},"28",-1),bt=n("td",{style:{"text-align":"left"}},"nv",-1),ft=n("td",{style:{"text-align":"left"}},"V",-1),ht=n("td",{style:{"text-align":"left"}},"90000",-1),yt=n("td",{style:{"text-align":"left"}},null,-1),xt={style:{"text-align":"left"}},wt=s("["),Ct={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},Pt=s("RFC3551"),Lt=s("]"),At=n("tr",null,[n("td",{style:{"text-align":"left"}},"29"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"V"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),St=n("tr",null,[n("td",{style:{"text-align":"left"}},"30"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"V"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),qt=n("td",{style:{"text-align":"left"}},"31",-1),Rt=n("td",{style:{"text-align":"left"}},"H261",-1),Dt=n("td",{style:{"text-align":"left"}},"V",-1),Nt=n("td",{style:{"text-align":"left"}},"90000",-1),Et=n("td",{style:{"text-align":"left"}},null,-1),It={style:{"text-align":"left"}},Tt=s("["),Mt={href:"https://www.iana.org/go/rfc4587",target:"_blank",rel:"noopener noreferrer"},Ft=s("RFC4587"),jt=s("]"),Vt=n("td",{style:{"text-align":"left"}},"32",-1),Ut=n("td",{style:{"text-align":"left"}},"MPV",-1),Bt=n("td",{style:{"text-align":"left"}},"V",-1),Gt=n("td",{style:{"text-align":"left"}},"90000",-1),Ot=n("td",{style:{"text-align":"left"}},null,-1),Jt={style:{"text-align":"left"}},Ht=s("["),zt={href:"https://www.iana.org/go/rfc2250",target:"_blank",rel:"noopener noreferrer"},Wt=s("RFC2250"),Xt=s("]"),Kt=n("td",{style:{"text-align":"left"}},"33",-1),Yt=n("td",{style:{"text-align":"left"}},"MP2T",-1),$t=n("td",{style:{"text-align":"left"}},"AV",-1),Qt=n("td",{style:{"text-align":"left"}},"90000",-1),Zt=n("td",{style:{"text-align":"left"}},null,-1),ne={style:{"text-align":"left"}},se=s("["),ae={href:"https://www.iana.org/go/rfc2250",target:"_blank",rel:"noopener noreferrer"},te=s("RFC2250"),ee=s("]"),oe=n("td",{style:{"text-align":"left"}},"34",-1),pe=n("td",{style:{"text-align":"left"}},"H263",-1),le=n("td",{style:{"text-align":"left"}},"V",-1),ce=n("td",{style:{"text-align":"left"}},"90000",-1),ie=n("td",{style:{"text-align":"left"}},null,-1),ue={style:{"text-align":"left"}},re=s("["),de={href:"https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#Chunrong_Zhu",target:"_blank",rel:"noopener noreferrer"},ke=s("Chunrong_Zhu"),_e=s("]"),me=n("tr",null,[n("td",{style:{"text-align":"left"}},"35-71"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"?"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),ve=n("td",{style:{"text-align":"left"}},"72-76",-1),ge=n("td",{style:{"text-align":"left"}},"Reserved for RTCP conflict avoidance",-1),be=n("td",{style:{"text-align":"left"}},null,-1),fe=n("td",{style:{"text-align":"left"}},null,-1),he=n("td",{style:{"text-align":"left"}},null,-1),ye={style:{"text-align":"left"}},xe=s("["),we={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},Ce=s("RFC3551"),Pe=s("]"),Le=n("tr",null,[n("td",{style:{"text-align":"left"}},"77-95"),n("td",{style:{"text-align":"left"}},"Unassigned"),n("td",{style:{"text-align":"left"}},"?"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}})],-1),Ae=n("td",{style:{"text-align":"left"}},"96-127",-1),Se=n("td",{style:{"text-align":"left"}},"dynamic",-1),qe=n("td",{style:{"text-align":"left"}},"?",-1),Re=n("td",{style:{"text-align":"left"}},null,-1),De=n("td",{style:{"text-align":"left"}},null,-1),Ne={style:{"text-align":"left"}},Ee=s("["),Ie={href:"https://www.iana.org/go/rfc3551",target:"_blank",rel:"noopener noreferrer"},Te=s("RFC3551"),Me=s("]"),Fe=e(`<p>\u4ECE\u8868\u4E2D\u4E86\u89E3\u5230\uFF0CPayload Type(PT) code 0 - 95\u4E3A\u9759\u6001\u7C7B\u578B\uFF0C\u5373code\u5BF9\u5E94\u56FA\u5B9A\u7684codec(\u7F16\u89E3\u7801\u5668)\uFF0C96 - 127\u4E3A\u52A8\u6001codec\uFF0C\u5373\u9700\u8981\u5728SDP\u534F\u5546\u8FC7\u7A0B\u4E2D\u786E\u5B9A</p><p>\u63A5\u4E0B\u6765\u8FFD\u8E2A\u4E0B\u6E90\u7801\uFF0C\u770B\u770BSDP\u4E2D\u4E3A\u4EC0\u4E48\u6CA1\u6709<code>rtpmap</code></p><p>\u5148\u627E\u5230<code>Java</code>\u5C42\u53D1\u8D77\u547C\u53EB\u7684\u4EE3\u7801\uFF0C\u5728<code>Core.java</code>\u4E2D\u67094\u4E2A\u53D1\u8D77\u547C\u53EB\u7684\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Nullable</span>
<span class="token class-name">Call</span> <span class="token function">invite</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Nullable</span>
<span class="token class-name">Call</span> <span class="token function">inviteAddress</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Address</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Nullable</span>
<span class="token class-name">Call</span> <span class="token function">inviteAddressWithParams</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Address</span> var1<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">CallParams</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Nullable</span>
<span class="token class-name">Call</span> <span class="token function">inviteWithParams</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">CallParams</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5177\u4F53\u5B9E\u73B0\u5728<code>CoreImpl.java</code>\u4E2D\uFF0C\u67E5\u770B\u8FD9\u4E2A<code>public Call inviteAddress(@NonNull Address addr);</code>\u65B9\u6CD5\u5427</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token class-name">Call</span> <span class="token function">inviteAddress</span><span class="token punctuation">(</span><span class="token keyword">long</span> nativePtr<span class="token punctuation">,</span> <span class="token class-name">Address</span> addr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Override</span> <span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">synchronized</span> <span class="token keyword">public</span> <span class="token class-name">Call</span> <span class="token function">inviteAddress</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Address</span> addr<span class="token punctuation">)</span>  <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Call</span><span class="token punctuation">)</span><span class="token function">inviteAddress</span><span class="token punctuation">(</span>nativePtr<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Java</code>\u5C42\u8C03\u7528\u4E86<code>native</code>\u5C42\u4EE3\u7801\uFF0C\u6253\u5F00\u7F16\u8BD1\u540E\u751F\u6210\u7684<code>linphone_jni.cc</code>\uFF0C\u627E\u5230<code>Java_org_linphone_core_CoreImpl_inviteAddress</code>\u65B9\u6CD5</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>JNIEXPORT jobject JNICALL <span class="token function">Java_org_linphone_core_CoreImpl_inviteAddress</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject thiz<span class="token punctuation">,</span> jlong ptr<span class="token punctuation">,</span> jobject addr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	LinphoneCore <span class="token operator">*</span>cptr <span class="token operator">=</span> <span class="token punctuation">(</span>LinphoneCore<span class="token operator">*</span><span class="token punctuation">)</span>ptr<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>cptr <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">bctbx_error</span><span class="token punctuation">(</span><span class="token string">&quot;Java_org_linphone_core_CoreImpl_inviteAddress&#39;s LinphoneCore C ptr is null!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	LinphoneAddress<span class="token operator">*</span> c_addr <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>addr<span class="token punctuation">)</span> c_addr <span class="token operator">=</span> <span class="token punctuation">(</span>LinphoneAddress<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">GetObjectNativePtr</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	jobject jni_result <span class="token operator">=</span> <span class="token punctuation">(</span>jobject<span class="token punctuation">)</span><span class="token function">getCall</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token punctuation">(</span>LinphoneCall <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">linphone_core_invite_address</span><span class="token punctuation">(</span>cptr<span class="token punctuation">,</span> c_addr<span class="token punctuation">)</span><span class="token punctuation">,</span> TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> jni_result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>native</code>\u5C42\u8C03\u7528\u4E86<code>linphone_core_invite_address</code>\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u5728IDE\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7Ctrl+\u5DE6\u952E\u70B9\u51FB\u8FDB\u884C\u8DF3\u8F6C\uFF0C<code>linphone_core_invite_address</code>\u4F4D\u4E8E<code>linphonecore.c</code>\u4E2D</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>LinphoneCall <span class="token operator">*</span> <span class="token function">linphone_core_invite_address</span><span class="token punctuation">(</span>LinphoneCore <span class="token operator">*</span>lc<span class="token punctuation">,</span> <span class="token keyword">const</span> LinphoneAddress <span class="token operator">*</span>addr<span class="token punctuation">)</span><span class="token punctuation">{</span>
	LinphoneCall <span class="token operator">*</span>call<span class="token punctuation">;</span>
	LinphoneCallParams <span class="token operator">*</span>p<span class="token operator">=</span><span class="token function">linphone_core_create_call_params</span><span class="token punctuation">(</span>lc<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">linphone_call_params_enable_video</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token function">linphone_call_params_video_enabled</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>lc<span class="token operator">-&gt;</span>video_policy<span class="token punctuation">.</span>automatically_initiate<span class="token punctuation">)</span><span class="token punctuation">;</span>
	call<span class="token operator">=</span><span class="token function">linphone_core_invite_address_with_params</span> <span class="token punctuation">(</span>lc<span class="token punctuation">,</span>addr<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">linphone_call_params_unref</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> call<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>linphone_core_invite_address</code>\u65B9\u6CD5\u4E2D\u8C03\u7528\u4E86<code>linphone_core_invite_address_with_params</code>\u53D1\u8D77\u547C\u53EB\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u8F83\u957F\uFF0C\u5220\u51CF\u4E00\u4E9B\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>LinphoneCall <span class="token operator">*</span> <span class="token function">linphone_core_invite_address_with_params</span><span class="token punctuation">(</span>LinphoneCore <span class="token operator">*</span>lc<span class="token punctuation">,</span> <span class="token keyword">const</span> LinphoneAddress <span class="token operator">*</span>addr<span class="token punctuation">,</span> <span class="token keyword">const</span> LinphoneCallParams <span class="token operator">*</span>params<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>from<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
	LinphoneCall <span class="token operator">*</span>call<span class="token punctuation">;</span>
    
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>addr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">ms_error</span><span class="token punctuation">(</span><span class="token string">&quot;Can&#39;t invite a NULL address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	parsed_url2<span class="token operator">=</span><span class="token function">linphone_address_new</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
	call<span class="token operator">=</span><span class="token function">linphone_call_new_outgoing</span><span class="token punctuation">(</span>lc<span class="token punctuation">,</span>parsed_url2<span class="token punctuation">,</span>addr<span class="token punctuation">,</span>cp<span class="token punctuation">,</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">bool</span> defer <span class="token operator">=</span> <span class="token class-name">Call</span><span class="token double-colon punctuation">::</span><span class="token function">toCpp</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">initiateOutgoing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>defer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Call</span><span class="token double-colon punctuation">::</span><span class="token function">toCpp</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">startInvite</span><span class="token punctuation">(</span><span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">/* The call has already gone to error and released state, so do not return it */</span>
			call <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> call<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>linphone_core_invite_address_with_params</code>\u65B9\u6CD5\u4E2D\u8C03\u7528<code>linphone_call_new_outgoing</code>\u65B9\u6CD5\u521B\u5EFA<code>Call</code>\u5BF9\u8C61\uFF0C\u8C03\u7528<code>initiateOutgoing</code>\u65B9\u6CD5\u521D\u59CB\u5316\u53D1\u8D77\u547C\u53EB\u5E76\u8BBE\u7F6E\u5F53\u524D\u72B6\u6001\u4E3A<code>OutgoingInit</code>\uFF0C\u63A5\u4E0B\u6765\u8C03\u7528<code>startInvite</code>\u65B9\u6CD5\u53D1\u8D77\u547C\u53EB\uFF0C<code>startInvite</code>\u65B9\u6CD5\u4F4D\u4E8E<code>call.cpp</code>\u4E2D\uFF0C\u5728\u5176\u4E2D\u53C8\u8C03\u7528<code>getActiveSession</code>\u65B9\u6CD5\u83B7\u53D6<code>CallSession</code>\uFF0C\u8C03\u7528<code>CallSession::startInvite</code>\u65B9\u6CD5</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token class-name">Call</span><span class="token double-colon punctuation">::</span><span class="token function">startInvite</span> <span class="token punctuation">(</span><span class="token keyword">const</span> Address <span class="token operator">*</span>destination<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">getActiveSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">startInvite</span><span class="token punctuation">(</span>destination<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>CallSession::startInvite</code>\u65B9\u6CD5\u4F4D\u4E8E<code>call-session.cpp</code>\u4E2D\uFF0C\u5728\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\u627E\u4E86\u534A\u5929\uFF0C\u6CA1\u89C1\u6709\u4E0ESDP\u53D1\u9001\u76F8\u5173\u7684\u903B\u8F91\uFF0C\u5148\u53BB\u5934\u6587\u4EF6\u4E2D\u770B\u770B\u65B9\u6CD5\u539F\u578B\u5427</p><p>\u627E\u4E86\u534A\u5929\u4E5F\u662F\u6709\u70B9\u6536\u83B7\u7684\uFF0C\u5206\u6790\u51FA\u8C03\u7528<code>addAdditionalLocalBody</code>\u53BB\u7EC4\u88C5\u81EA\u5B9A\u4E49\u6269\u5C55\u5934\u6570\u636E</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token class-name">CallSession</span><span class="token double-colon punctuation">::</span><span class="token function">startInvite</span> <span class="token punctuation">(</span><span class="token keyword">const</span> Address <span class="token operator">*</span>destination<span class="token punctuation">,</span> <span class="token keyword">const</span> string <span class="token operator">&amp;</span>subject<span class="token punctuation">,</span> <span class="token keyword">const</span> Content <span class="token operator">*</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">L_D</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	d<span class="token operator">-&gt;</span>subject <span class="token operator">=</span> subject<span class="token punctuation">;</span>
	<span class="token comment">/* Try to be best-effort in giving real local or routable contact address */</span>
	d<span class="token operator">-&gt;</span><span class="token function">setContactOp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	string destinationStr<span class="token punctuation">;</span>
	<span class="token keyword">char</span> <span class="token operator">*</span>realUrl <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>destination<span class="token punctuation">)</span>
		destinationStr <span class="token operator">=</span> destination<span class="token operator">-&gt;</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		realUrl <span class="token operator">=</span> <span class="token function">linphone_address_as_string</span><span class="token punctuation">(</span>d<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>
		destinationStr <span class="token operator">=</span> realUrl<span class="token punctuation">;</span>
		<span class="token function">ms_free</span><span class="token punctuation">(</span>realUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">char</span> <span class="token operator">*</span>from <span class="token operator">=</span> <span class="token function">linphone_address_as_string</span><span class="token punctuation">(</span>d<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">/* Take a ref because sal_call() may destroy the CallSession if no SIP transport is available */</span>
	shared_ptr<span class="token operator">&lt;</span>CallSession<span class="token operator">&gt;</span> ref <span class="token operator">=</span> <span class="token function">getSharedFromThis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">)</span>
		d<span class="token operator">-&gt;</span>op<span class="token operator">-&gt;</span><span class="token function">setLocalBody</span><span class="token punctuation">(</span><span class="token operator">*</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// If a custom Content has been set in the call params, create a multipart body for the INVITE</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span><span class="token operator">&amp;</span> content <span class="token operator">:</span> d<span class="token operator">-&gt;</span>params<span class="token operator">-&gt;</span><span class="token function">getCustomContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		d<span class="token operator">-&gt;</span>op<span class="token operator">-&gt;</span><span class="token function">addAdditionalLocalBody</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">int</span> result <span class="token operator">=</span> d<span class="token operator">-&gt;</span>op<span class="token operator">-&gt;</span><span class="token function">call</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> destinationStr<span class="token punctuation">,</span> subject<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">ms_free</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d<span class="token operator">-&gt;</span>state <span class="token operator">!=</span> CallSession<span class="token double-colon punctuation">::</span>State<span class="token double-colon punctuation">::</span>Error<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d<span class="token operator">-&gt;</span>state <span class="token operator">!=</span> CallSession<span class="token double-colon punctuation">::</span>State<span class="token double-colon punctuation">::</span>Released<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// sal_call() may invoke call_failure() and call_released() SAL callbacks synchronously,</span>
			<span class="token comment">// in which case there is no need to perform a state change here.</span>
			d<span class="token operator">-&gt;</span><span class="token function">setState</span><span class="token punctuation">(</span>CallSession<span class="token double-colon punctuation">::</span>State<span class="token double-colon punctuation">::</span>Error<span class="token punctuation">,</span> <span class="token string">&quot;Call failed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token function">linphone_call_log_set_call_id</span><span class="token punctuation">(</span>d<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> d<span class="token operator">-&gt;</span>op<span class="token operator">-&gt;</span><span class="token function">getCallId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Must be known at that time */</span>
		d<span class="token operator">-&gt;</span><span class="token function">setState</span><span class="token punctuation">(</span>CallSession<span class="token double-colon punctuation">::</span>State<span class="token double-colon punctuation">::</span>OutgoingProgress<span class="token punctuation">,</span> <span class="token string">&quot;Outgoing call in progress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>CallSession::startInvite</code>\u65B9\u6CD5\u539F\u578B\u4E3A\uFF0C</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">virtual</span> <span class="token keyword">int</span> <span class="token function">startInvite</span> <span class="token punctuation">(</span><span class="token keyword">const</span> Address <span class="token operator">*</span>destination<span class="token punctuation">,</span> <span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string <span class="token operator">&amp;</span>subject <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">const</span> Content <span class="token operator">*</span>content <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u662F\u4E2A<code>virtual</code>\u865A\u51FD\u6570\uFF0C\u8BF4\u660E\u6709\u51FD\u6570\u590D\u5199\uFF0C\u5728IDE\u4E2D\u641C\u7D22\u53D1\u73B0<code>MediaSession</code>\u7C7B\u7EE7\u627F\u81EA<code>CallSession</code>\uFF0C\u597D\u7684\uFF0C\u627E\u5230<code>MediaSession</code>\u590D\u5199\u7684<code>startInvite</code>\u65B9\u6CD5\uFF0C\u65B9\u6CD5\u8F83\u957F\uFF0C\u5220\u9664\u4E00\u4E9B\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token class-name">MediaSession</span><span class="token double-colon punctuation">::</span><span class="token function">startInvite</span> <span class="token punctuation">(</span><span class="token keyword">const</span> Address <span class="token operator">*</span>destination<span class="token punctuation">,</span> <span class="token keyword">const</span> string <span class="token operator">&amp;</span>subject<span class="token punctuation">,</span> <span class="token keyword">const</span> Content <span class="token operator">*</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">L_D</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// \u5220\u9664\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</span>

	d<span class="token operator">-&gt;</span>op<span class="token operator">-&gt;</span><span class="token function">setLocalMediaDescription</span><span class="token punctuation">(</span>d<span class="token operator">-&gt;</span>localDesc<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token class-name">CallSession</span><span class="token double-colon punctuation">::</span><span class="token function">startInvite</span><span class="token punctuation">(</span>destination<span class="token punctuation">,</span> subject<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>d<span class="token operator">-&gt;</span>state <span class="token operator">==</span> CallSession<span class="token double-colon punctuation">::</span>State<span class="token double-colon punctuation">::</span>Error<span class="token punctuation">)</span>
			d<span class="token operator">-&gt;</span><span class="token function">stopStreams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> result<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>MediaSession::startInvite</code>\u4E2D\u8C03\u7528<code>setLocalMediaDescription</code>\u65B9\u6CD5\u7EC4\u88C5\u672C\u5730\u5A92\u4F53\u63CF\u8FF0\u4FE1\u606F\uFF0C\u6700\u540E\u518D\u8C03\u7528\u7236\u7C7B\u7684<code>CallSession::startInvite</code>\u65B9\u6CD5\u7EE7\u7EED\u53D1\u8D77\u547C\u53EB\uFF0C\u597D\u7684\uFF0C\u73B0\u5728\u53EA\u5173\u5FC3<code>setLocalMediaDescription</code>\u65B9\u6CD5\uFF0C\u5176\u4E2D<code>op</code>\u662F<code>SalCallOp</code>\uFF0C\u5728IDE\u4E2D\u6253\u5F00<code>call-op.cpp</code>\uFF0C\u627E\u5230<code>setLocalMediaDescription</code>\u65B9\u6CD5\uFF0C\u5220\u51CF\u4E00\u4E9B\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token class-name">SalCallOp</span><span class="token double-colon punctuation">::</span><span class="token function">setLocalMediaDescription</span> <span class="token punctuation">(</span>SalMediaDescription <span class="token operator">*</span>desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">sal_media_description_ref</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
		belle_sip_error_code error<span class="token punctuation">;</span>
		belle_sdp_session_description_t <span class="token operator">*</span>sdp <span class="token operator">=</span> <span class="token function">media_description_to_sdp</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
		vector<span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">&gt;</span> buffer <span class="token operator">=</span> <span class="token function">marshalMediaDescription</span><span class="token punctuation">(</span>sdp<span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">belle_sip_object_unref</span><span class="token punctuation">(</span>sdp<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token operator">!=</span> BELLE_SIP_OK<span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

		mLocalBody<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span>ContentType<span class="token double-colon punctuation">::</span>Sdp<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mLocalBody<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token function">move</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		mLocalBody <span class="token operator">=</span> <span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\u7EC8\u4E8E\u53D1\u73B0\u4E0ESDP\u76F8\u5173\u7684\u65B9\u6CD5\u4E86<code>media_description_to_sdp</code>\uFF0C\u7EE7\u7EED\u67E5\u770B<code>media_description_to_sdp</code>\u65B9\u6CD5\uFF0C\u6B64\u65B9\u6CD5\u4F4D\u4E8E<code>sal_sdp.c</code>\u4E2D\uFF0C\u65B9\u6CD5\u8F83\u957F\uFF0C\u4E3B\u8981\u662F\u7EC4\u88C5SDP\u534F\u8BAE\u6570\u636E\uFF0C\u6BD4\u5982\u8BBE\u7F6E\u7248\u672C\u3001\u521B\u5EFA\u6E90\u4FE1\u606F\uFF0C\u521B\u5EFA\u4F1A\u8BDD\u7B49\uFF0C\u8FD9\u91CC\u5220\u51CF\u4E00\u4E9B\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>belle_sdp_session_description_t <span class="token operator">*</span> <span class="token function">media_description_to_sdp</span><span class="token punctuation">(</span><span class="token keyword">const</span> SalMediaDescription <span class="token operator">*</span>desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	belle_sdp_session_description_t<span class="token operator">*</span> session_desc<span class="token operator">=</span><span class="token function">belle_sdp_session_description_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	bool_t inet6<span class="token punctuation">;</span>
	belle_sdp_origin_t<span class="token operator">*</span> origin<span class="token punctuation">;</span>
	<span class="token keyword">int</span> i<span class="token punctuation">;</span>
	<span class="token keyword">char</span> <span class="token operator">*</span>escaped_username <span class="token operator">=</span> <span class="token function">belle_sip_uri_to_escaped_username</span><span class="token punctuation">(</span>desc<span class="token operator">-&gt;</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strchr</span> <span class="token punctuation">(</span> desc<span class="token operator">-&gt;</span>addr<span class="token punctuation">,</span><span class="token char">&#39;:&#39;</span> <span class="token punctuation">)</span> <span class="token operator">!=</span><span class="token constant">NULL</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
		inet6<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> inet6<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token function">belle_sdp_session_description_set_version</span> <span class="token punctuation">(</span> session_desc<span class="token punctuation">,</span><span class="token function">belle_sdp_version_create</span> <span class="token punctuation">(</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

	origin <span class="token operator">=</span> <span class="token function">belle_sdp_origin_create</span> <span class="token punctuation">(</span> escaped_username
									  <span class="token punctuation">,</span>desc<span class="token operator">-&gt;</span>session_id
									  <span class="token punctuation">,</span>desc<span class="token operator">-&gt;</span>session_ver
									  <span class="token punctuation">,</span><span class="token string">&quot;IN&quot;</span>
									  <span class="token punctuation">,</span> inet6 <span class="token operator">?</span> <span class="token string">&quot;IP6&quot;</span> <span class="token operator">:</span><span class="token string">&quot;IP4&quot;</span>
									  <span class="token punctuation">,</span>desc<span class="token operator">-&gt;</span>addr <span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">bctbx_free</span><span class="token punctuation">(</span>escaped_username<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token function">belle_sdp_session_description_set_origin</span> <span class="token punctuation">(</span> session_desc<span class="token punctuation">,</span>origin <span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token function">belle_sdp_session_description_set_session_name</span> <span class="token punctuation">(</span> session_desc<span class="token punctuation">,</span>
		<span class="token function">belle_sdp_session_name_create</span> <span class="token punctuation">(</span> desc<span class="token operator">-&gt;</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token char">&#39;\\0&#39;</span> <span class="token operator">?</span> desc<span class="token operator">-&gt;</span>name <span class="token operator">:</span> <span class="token string">&quot;Talk&quot;</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u5220\u51CF\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>desc<span class="token operator">-&gt;</span>nb_streams<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">stream_description_to_sdp</span><span class="token punctuation">(</span>session_desc<span class="token punctuation">,</span> desc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>desc<span class="token operator">-&gt;</span>streams<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> session_desc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u6790<code>media_description_to_sdp</code>\u65B9\u6CD5\u627E\u5230\u5728<code>stream_description_to_sdp</code>\u65B9\u6CD5\u4E2D\u7EC4\u88C5\u6570\u636E\u6D41\u4FE1\u606F\u5230SDP\u534F\u8BAE\u4E2D\uFF0C<code>stream_description_to_sdp</code>\u65B9\u6CD5\u975E\u5E38\u957F\uFF0C\u6B64\u65B9\u6CD5\u4E3B\u8981\u662F\u7EC4\u88C5SDP\u534F\u8BAE\u4E2D\u7F16\u89E3\u7801\u76F8\u5173\u7684\u4FE1\u606F\uFF0C\u8FD9\u91CC\u5220\u9664\u5927\u90E8\u5206\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">stream_description_to_sdp</span> <span class="token punctuation">(</span> belle_sdp_session_description_t <span class="token operator">*</span>session_desc<span class="token punctuation">,</span> <span class="token keyword">const</span> SalMediaDescription <span class="token operator">*</span>md<span class="token punctuation">,</span> <span class="token keyword">const</span> SalStreamDescription <span class="token operator">*</span>stream <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token comment">// \u5220\u51CF\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</span>

	media_desc <span class="token operator">=</span> <span class="token function">belle_sdp_media_description_create</span> <span class="token punctuation">(</span> <span class="token function">sal_stream_description_get_type_as_string</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span>
				 <span class="token punctuation">,</span>stream<span class="token operator">-&gt;</span>rtp_port
				 <span class="token punctuation">,</span><span class="token number">1</span>
				 <span class="token punctuation">,</span><span class="token function">sal_media_proto_to_string</span> <span class="token punctuation">(</span> stream<span class="token operator">-&gt;</span>proto <span class="token punctuation">)</span>
				 <span class="token punctuation">,</span><span class="token constant">NULL</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u770B\u5230payloads\u5B57\u6BB5</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>stream<span class="token operator">-&gt;</span>payloads<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span> pt_it<span class="token operator">=</span>stream<span class="token operator">-&gt;</span>payloads<span class="token punctuation">;</span> pt_it<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">;</span> pt_it<span class="token operator">=</span>pt_it<span class="token operator">-&gt;</span>next <span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pt<span class="token operator">=</span> <span class="token punctuation">(</span> PayloadType<span class="token operator">*</span> <span class="token punctuation">)</span> pt_it<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span>
			mime_param<span class="token operator">=</span> <span class="token function">belle_sdp_mime_parameter_create</span> <span class="token punctuation">(</span> pt<span class="token operator">-&gt;</span>mime_type
					<span class="token punctuation">,</span> <span class="token function">payload_type_get_number</span> <span class="token punctuation">(</span> pt <span class="token punctuation">)</span>
					<span class="token punctuation">,</span> pt<span class="token operator">-&gt;</span>clock_rate
					<span class="token punctuation">,</span> pt<span class="token operator">-&gt;</span>channels<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">?</span> pt<span class="token operator">-&gt;</span>channels <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">belle_sdp_mime_parameter_set_parameters</span> <span class="token punctuation">(</span> mime_param<span class="token punctuation">,</span>pt<span class="token operator">-&gt;</span>recv_fmtp <span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span> stream<span class="token operator">-&gt;</span>ptime<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">belle_sdp_mime_parameter_set_ptime</span> <span class="token punctuation">(</span> mime_param<span class="token punctuation">,</span>stream<span class="token operator">-&gt;</span>ptime <span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
            <span class="token comment">// \u9501\u5B9A\u6B64\u65B9\u6CD5</span>
			<span class="token function">belle_sdp_media_description_append_values_from_mime_parameter</span> <span class="token punctuation">(</span> media_desc<span class="token punctuation">,</span>mime_param <span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">belle_sip_object_unref</span> <span class="token punctuation">(</span> mime_param <span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token comment">/* to comply with SDP we cannot have an empty payload type number list */</span>
		<span class="token comment">/* as it happens only when mline is declined with a zero port, it does not matter to put whatever codec*/</span>
		belle_sip_list_t<span class="token operator">*</span> format <span class="token operator">=</span> <span class="token function">belle_sip_list_append</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">belle_sdp_media_set_media_formats</span><span class="token punctuation">(</span><span class="token function">belle_sdp_media_description_get_media</span><span class="token punctuation">(</span>media_desc<span class="token punctuation">)</span><span class="token punctuation">,</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token comment">// \u7EC4\u88C5\u81EA\u5B9A\u4E49sdp\u5C5E\u6027</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>stream<span class="token operator">-&gt;</span>custom_sdp_attributes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		belle_sdp_session_description_t <span class="token operator">*</span>custom_desc <span class="token operator">=</span> <span class="token punctuation">(</span>belle_sdp_session_description_t <span class="token operator">*</span><span class="token punctuation">)</span>stream<span class="token operator">-&gt;</span>custom_sdp_attributes<span class="token punctuation">;</span>
		belle_sip_list_t <span class="token operator">*</span>l <span class="token operator">=</span> <span class="token function">belle_sdp_session_description_get_attributes</span><span class="token punctuation">(</span>custom_desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
		belle_sip_list_t <span class="token operator">*</span>elem<span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span>elem <span class="token operator">=</span> l<span class="token punctuation">;</span> elem <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> elem <span class="token operator">=</span> elem<span class="token operator">-&gt;</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">belle_sdp_media_description_add_attribute</span><span class="token punctuation">(</span>media_desc<span class="token punctuation">,</span> <span class="token punctuation">(</span>belle_sdp_attribute_t <span class="token operator">*</span><span class="token punctuation">)</span>elem<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
    
    <span class="token comment">// \u5220\u51CF\u4E0D\u5173\u5FC3\u7684\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>stream_description_to_sdp</code>\u65B9\u6CD5\u4E2D\u770B\u5230<code>payload</code>\u5B57\u6BB5\uFF0C\u9A6C\u4E0A\u5C31\u8981\u627E\u5230\u4E86happy~</p><p>\u7ECF\u8FC7\u5206\u6790\uFF0C\u9501\u5B9A<code>belle_sdp_media_description_append_values_from_mime_parameter</code>\u65B9\u6CD5\uFF0C\u5206\u6790\u6B64\u65B9\u6CD5\uFF0C\u5728\u5176\u4E2D\u627E\u5230\u7EC4\u88C5<code>rtpmap</code>\u7684\u6E90\u7801</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">belle_sdp_media_description_append_values_from_mime_parameter</span><span class="token punctuation">(</span>belle_sdp_media_description_t<span class="token operator">*</span> media_description<span class="token punctuation">,</span> <span class="token keyword">const</span> belle_sdp_mime_parameter_t<span class="token operator">*</span> mime_parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">BELLE_SDP_FORCE_RTP_MAP </span><span class="token comment">/* defined to for RTP map even for static codec*/</span></span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">mime_parameter_is_static</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">/*dynamic payload*/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">belle_sdp_mime_parameter_get_channel_count</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">snprintf</span><span class="token punctuation">(</span>atribute_value<span class="token punctuation">,</span>MAX_FMTP_LENGTH<span class="token punctuation">,</span><span class="token string">&quot;%i %s/%i/%i&quot;</span>
					<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_media_format</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span>
					<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_type</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span>
					<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_rate</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span>
					<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_channel_count</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token function">snprintf</span><span class="token punctuation">(</span>atribute_value<span class="token punctuation">,</span>MAX_FMTP_LENGTH<span class="token punctuation">,</span><span class="token string">&quot;%i %s/%i&quot;</span>
					<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_media_format</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span>
					<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_type</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span>
					<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_rate</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token function">belle_sdp_media_description_set_attribute_value</span><span class="token punctuation">(</span>media_description<span class="token punctuation">,</span><span class="token string">&quot;rtpmap&quot;</span><span class="token punctuation">,</span>atribute_value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">BELLE_SDP_FORCE_RTP_MAP</span></span>
	<span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
    
    <span class="token comment">// always include fmtp parameters if available</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">belle_sdp_mime_parameter_get_parameters</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">snprintf</span><span class="token punctuation">(</span>atribute_value<span class="token punctuation">,</span>MAX_FMTP_LENGTH<span class="token punctuation">,</span><span class="token string">&quot;%i %s&quot;</span>
				<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_media_format</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span>
				<span class="token punctuation">,</span><span class="token function">belle_sdp_mime_parameter_get_parameters</span><span class="token punctuation">(</span>mime_parameter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">belle_sdp_media_description_set_attribute_value</span><span class="token punctuation">(</span>media_description<span class="token punctuation">,</span><span class="token string">&quot;fmtp&quot;</span><span class="token punctuation">,</span>atribute_value<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u5148\u5206\u6790\u4E0B<code>mime_parameter_is_static</code>\u65B9\u6CD5\u662F\u5E72\u4EC0\u4E48\u7684\uFF1F\u67E5\u770B\u4EE5\u4E0B\u6E90\u7801\u53D1\u73B0\uFF0C\u5662~~\uFF0C\u539F\u6765\u662F\u7528\u4E8E\u5224\u65AD\u7F16\u89E3\u7801\u662F\u5426\u662F\u9759\u6001\u7C7B\u578B(\u524D\u9762\u63D0\u5230\u7684Payload Type)</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">static_payload</span> static_payload_list <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>
	<span class="token comment">/*audio*/</span>
	<span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;PCMU&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;GSM&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;G723&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;DVI4&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;DVI4&quot;</span><span class="token punctuation">,</span><span class="token number">16000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;LPC&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;PCMA&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;G722&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;L16&quot;</span><span class="token punctuation">,</span><span class="token number">44100</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;L16&quot;</span><span class="token punctuation">,</span><span class="token number">44100</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;QCELP&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;CN&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;MPA&quot;</span><span class="token punctuation">,</span><span class="token number">90000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;G728&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;DVI4&quot;</span><span class="token punctuation">,</span><span class="token number">11025</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;DVI4&quot;</span><span class="token punctuation">,</span><span class="token number">22050</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;G729&quot;</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token comment">/*video*/</span>
	<span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;CelB&quot;</span><span class="token punctuation">,</span><span class="token number">90000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;JPEG&quot;</span><span class="token punctuation">,</span><span class="token number">90000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;nv&quot;</span><span class="token punctuation">,</span><span class="token number">90000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;H261&quot;</span><span class="token punctuation">,</span><span class="token number">90000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;MPV&quot;</span><span class="token punctuation">,</span><span class="token number">90000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;MP2T&quot;</span><span class="token punctuation">,</span><span class="token number">90000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;H263&quot;</span><span class="token punctuation">,</span><span class="token number">90000</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">mime_parameter_is_static</span><span class="token punctuation">(</span><span class="token keyword">const</span> belle_sdp_mime_parameter_t <span class="token operator">*</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">static_payload</span><span class="token operator">*</span> iterator<span class="token punctuation">;</span>
	size_t i<span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span>iterator <span class="token operator">=</span> static_payload_list<span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>payload_list_elements<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">,</span>iterator<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>iterator<span class="token operator">-&gt;</span>number <span class="token operator">==</span> param<span class="token operator">-&gt;</span>media_format <span class="token operator">&amp;&amp;</span>
			<span class="token function">strcasecmp</span><span class="token punctuation">(</span>iterator<span class="token operator">-&gt;</span>type<span class="token punctuation">,</span>param<span class="token operator">-&gt;</span>type<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
			iterator<span class="token operator">-&gt;</span>channel_count<span class="token operator">==</span>param<span class="token operator">-&gt;</span>channel_count <span class="token operator">&amp;&amp;</span>
			iterator<span class="token operator">-&gt;</span>rate<span class="token operator">==</span>param<span class="token operator">-&gt;</span>rate <span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> TRUE<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> FALSE<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u518D\u6765\u5206\u6790\u4E0B<code>belle_sdp_media_description_append_values_from_mime_parameter</code>\u65B9\u6CD5\u7684\u610F\u601D\uFF0C\u5927\u610F\u5982\u4E0B\uFF1A\u5982\u679C\u6CA1\u6709\u5B9A\u4E49<code>BELLE_SDP_FORCE_RTP_MAP</code>\u8FD9\u4E2A\u5B8F\u5C31\u6267\u884C<code>if (!mime_parameter_is_static(mime_parameter))</code>\u5224\u65AD\u7F16\u89E3\u7801\u662F\u5426\u662F\u9759\u6001\u7C7B\u578B\uFF0C\u5982\u679C\u5B9A\u4E49\u4E86\u5C31\u4E0D\u5224\u65AD\u662F\u5426\u662F\u9759\u6001\u7C7B\u578B</p><p>\u603B\u7ED3\u4E00\u4E0B\u5C31\u662F\u5982\u679C\u6CA1\u6709\u5B9A\u4E49<code>BELLE_SDP_FORCE_RTP_MAP</code>\u8FD9\u4E2A\u5B8F\uFF0C\u5C31\u4E0D\u7EC4\u88C5\u9759\u6001\u7C7B\u578B\u7F16\u89E3\u7801\u7684<code>rtpmap</code>\u4FE1\u606F\uFF0C\u53EA\u7EC4\u88C5\u52A8\u6001\u7C7B\u578B\u7F16\u89E3\u7801\u7684<code>rtpmap</code>\u4FE1\u606F\uFF0C\u7EC8\u4E8E\u627E\u5230\u6E90\u5934\u4E86\uFF0C\u771F\u662F\u62E8\u4E91\u89C1\u65E5\u5440</p><p>\u5230\u8FD9\u91CC\u8FD8\u6CA1\u5B8C\uFF0C\u65E2\u7136\u662F\u6839\u636E\u5B8F\u5B9A\u4E49\u505A\u7684\u5224\u65AD\uFF0C\u80AF\u5B9A\u5728\u7F16\u8BD1\u7684\u65F6\u5019\u53EF\u4EE5\u914D\u7F6E\uFF0C\u5148\u770B\u770B\u80FD\u4E0D\u80FD\u627E\u5230\u5B9A\u4E49\u5B8F\u7684\u5730\u65B9\uFF0C\u5728IDE\u4E2D\u5168\u5C40\u641C\u7D22\uFF0C\u5728<code>belle-sip</code>\u4E0B\u7684<code>CMakeList.txt</code>\u4E2D\u53D1\u73B0</p><div class="language-cmake ext-cmake line-numbers-mode"><pre class="language-cmake"><code><span class="token keyword">option</span><span class="token punctuation">(</span>ENABLE_RTP_MAP_ALWAYS_IN_SDP <span class="token string">&quot;Always include rtpmap in SDP.&quot;</span> <span class="token boolean">OFF</span><span class="token punctuation">)</span>

<span class="token keyword">if</span><span class="token punctuation">(</span>ENABLE_RTP_MAP_ALWAYS_IN_SDP<span class="token punctuation">)</span> 
	<span class="token keyword">set</span><span class="token punctuation">(</span>BELLE_SDP_FORCE_RTP_MAP <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>bingo~\uFF0C\u771F\u7684\u662F\u5230\u6700\u540E\u4E86</p><p>\u6700\u540E\u5728\u7F16\u8BD1\u65F6\u589E\u52A0\u7F16\u8BD1\u914D\u7F6E\u9879</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> linphone-sdk/build/
$ cmake -DENABLE_RTP_MAP_ALWAYS_IN_SDP<span class="token operator">=</span>ON <span class="token punctuation">..</span>
$ cmake --build <span class="token builtin class-name">.</span> --parallel <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u65B0\u7F16\u8BD1\u540E\u62F7\u8D1D\u5230AS\u4E2D\u8FD0\u884C\uFF0C\u53D1\u8D77\u547C\u53EB\u67E5\u770BLogcat\u8F93\u51FA</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u5728\u6E90\u7801\u4E2D\u770B\u5230\u901A\u8FC7<code>BELLE_SDP_FORCE_RTP_MAP</code>\u8FD9\u4E2A\u5B8F\u63A7\u5236\u662F\u5426\u5728SDP\u4E2D\u5305\u542B\u9759\u6001\u7C7B\u578B\u7F16\u89E3\u7801\u7684<code>rtpmap</code>\u4FE1\u606F\uFF0C\u4E2A\u4EBA\u731C\u6D4B\u662F\u9759\u6001\u7C7B\u578B\u7684\u7F16\u89E3\u7801\u4FE1\u606F\uFF0C\u662F\u534F\u8BAE\u4E2D\u56FA\u5B9A\u7684\uFF0C\u4EFB\u4F55\u9075\u5FAA\u534F\u8BAE\u7684\u5B9E\u73B0\u65B9\uFF0C\u90FD\u53EF\u4EE5\u6839\u636E\u9759\u6001\u7C7B\u578B\u7F16\u89E3\u7801\u5BF9\u5E94\u7684<code>code</code>\u89E3\u6790\u51FA\u76F8\u5E94\u7684<code>rtpmap</code>\u4FE1\u606F\uFF0C\u6240\u4EE5\u5728SDP\u4E2D\u53BB\u6389\u9759\u6001\u7C7B\u578B\u7F16\u89E3\u7801\u5668\u7684<code>rtpmap</code>\u4FE1\u606F\uFF0C\u540C\u65F6\u4E5F\u53EF\u4EE5\u51CF\u5C11\u53D1\u9001\u6570\u636E\u5305\u7684\u5927\u5C0F\uFF0C\u51CF\u8F7B\u7F51\u7EDC\u538B\u529B</p>`,42);function je(Ve,Ue){const a=c("ExternalLinkIcon");return p(),l("div",null,[u,r,n("p",null,[d,n("a",k,[_,t(a)])]),n("p",null,[m,n("a",v,[g,t(a)])]),b,n("p",null,[f,n("a",h,[y,t(a)])]),x,n("p",null,[w,n("a",C,[P,t(a)])]),n("table",null,[L,n("tbody",null,[n("tr",null,[A,S,q,R,D,n("td",N,[E,n("a",I,[T,t(a)]),M])]),F,j,n("tr",null,[V,U,B,G,O,n("td",J,[H,n("a",z,[W,t(a)]),X])]),n("tr",null,[K,Y,$,Q,Z,n("td",nn,[sn,n("a",an,[tn,t(a)]),en,n("a",on,[pn,t(a)]),ln])]),n("tr",null,[cn,un,rn,dn,kn,n("td",_n,[mn,n("a",vn,[gn,t(a)]),bn])]),n("tr",null,[fn,hn,yn,xn,wn,n("td",Cn,[Pn,n("a",Ln,[An,t(a)]),Sn])]),n("tr",null,[qn,Rn,Dn,Nn,En,n("td",In,[Tn,n("a",Mn,[Fn,t(a)]),jn])]),n("tr",null,[Vn,Un,Bn,Gn,On,n("td",Jn,[Hn,n("a",zn,[Wn,t(a)]),Xn])]),n("tr",null,[Kn,Yn,$n,Qn,Zn,n("td",ns,[ss,n("a",as,[ts,t(a)]),es])]),n("tr",null,[os,ps,ls,cs,is,n("td",us,[rs,n("a",ds,[ks,t(a)]),_s])]),n("tr",null,[ms,vs,gs,bs,fs,n("td",hs,[ys,n("a",xs,[ws,t(a)]),Cs])]),n("tr",null,[Ps,Ls,As,Ss,qs,n("td",Rs,[Ds,n("a",Ns,[Es,t(a)]),Is])]),n("tr",null,[Ts,Ms,Fs,js,Vs,n("td",Us,[Bs,n("a",Gs,[Os,t(a)]),Js])]),n("tr",null,[Hs,zs,Ws,Xs,Ks,n("td",Ys,[$s,n("a",Qs,[Zs,t(a)]),na,n("a",sa,[aa,t(a)]),ta])]),n("tr",null,[ea,oa,pa,la,ca,n("td",ia,[ua,n("a",ra,[da,t(a)]),ka])]),n("tr",null,[_a,ma,va,ga,ba,n("td",fa,[ha,n("a",ya,[xa,t(a)]),wa])]),n("tr",null,[Ca,Pa,La,Aa,Sa,n("td",qa,[Ra,n("a",Da,[Na,t(a)]),Ea])]),n("tr",null,[Ia,Ta,Ma,Fa,ja,n("td",Va,[Ua,n("a",Ba,[Ga,t(a)]),Oa])]),Ja,Ha,za,Wa,Xa,Ka,n("tr",null,[Ya,$a,Qa,Za,nt,n("td",st,[at,n("a",tt,[et,t(a)]),ot])]),n("tr",null,[pt,lt,ct,it,ut,n("td",rt,[dt,n("a",kt,[_t,t(a)]),mt])]),vt,n("tr",null,[gt,bt,ft,ht,yt,n("td",xt,[wt,n("a",Ct,[Pt,t(a)]),Lt])]),At,St,n("tr",null,[qt,Rt,Dt,Nt,Et,n("td",It,[Tt,n("a",Mt,[Ft,t(a)]),jt])]),n("tr",null,[Vt,Ut,Bt,Gt,Ot,n("td",Jt,[Ht,n("a",zt,[Wt,t(a)]),Xt])]),n("tr",null,[Kt,Yt,$t,Qt,Zt,n("td",ne,[se,n("a",ae,[te,t(a)]),ee])]),n("tr",null,[oe,pe,le,ce,ie,n("td",ue,[re,n("a",de,[ke,t(a)]),_e])]),me,n("tr",null,[ve,ge,be,fe,he,n("td",ye,[xe,n("a",we,[Ce,t(a)]),Pe])]),Le,n("tr",null,[Ae,Se,qe,Re,De,n("td",Ne,[Ee,n("a",Ie,[Te,t(a)]),Me])])])]),Fe])}var Oe=o(i,[["render",je],["__file","\u4FEE\u6539linphone-sdk-android-\u7B2C\u4E09\u7BC7.html.vue"]]);export{Oe as default};
