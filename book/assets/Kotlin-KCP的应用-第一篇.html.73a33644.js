import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c,a as n,b as t,e,d as s,r as i}from"./app.059639ff.js";var l="/book/assets/202205081206919.0fa1907f.png",u="/book/assets/202205081212412.6f804789.png",r="/book/assets/202205081211833.2f71a736.png",d="/book/assets/202205081211011.cd668550.png",k="/book/assets/202205081312860.dc6e5f16.png";const v={},m=e(`<h1 id="kotlin-kcp\u7684\u5E94\u7528-\u7B2C\u4E00\u7BC7" tabindex="-1"><a class="header-anchor" href="#kotlin-kcp\u7684\u5E94\u7528-\u7B2C\u4E00\u7BC7" aria-hidden="true">#</a> Kotlin-KCP\u7684\u5E94\u7528-\u7B2C\u4E00\u7BC7</h1><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>KCP\u7684\u5E94\u7528\u8BA1\u5212\u5206\u4E24\u7BC7\uFF0C\u672C\u6587\u662F\u7B2C\u4E00\u7BC7</p><p>\u672C\u6587\u4E3B\u8981\u8BB0\u5F55\u4ECE\u53D1\u73B0\u95EE\u9898\u5230\u4F7F\u7528KCP\u89E3\u51B3\u95EE\u9898\u7684\u6298\u817E\u8FC7\u7A0B\uFF0C\u4E0B\u4E00\u7BC7\u8BB0\u5F55KCP\u7684\u5E94\u7528</p><h2 id="\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#\u80CC\u666F" aria-hidden="true">#</a> \u80CC\u666F</h2><p><code>Kotlin</code> \u53F7\u79F0\u767E\u5206\u767E\u517C\u5BB9 <code>Java</code> \uFF0C\u6240\u4EE5\u5728 <code>Kotlin</code> \u4E2D\u4E00\u4E9B\u4FEE\u9970\u7B26\uFF0C\u6BD4\u5982 <code>internal</code> \uFF0C\u5728\u7F16\u8BD1\u540E\u653E\u5728\u7EAF <code>Java</code> \u7684\u9879\u76EE\u4E2D\u4F7F\u7528(\u6CA1\u6709<code>Kotlin</code>\u73AF\u5883)\uFF0C<code>Java</code> \u4ECD\u7136\u53EF\u4EE5\u8BBF\u95EE\u88AB <code>internal</code> \u4FEE\u9970\u7684\u7C7B\u3001\u65B9\u6CD5\u3001\u5B57\u6BB5\u7B49</p><p>\u5728\u4F7F\u7528 <code>Kotlin</code> \u5F00\u53D1\u8FC7\u7A0B\u4E2D\u9700\u8981\u5BF9\u5916\u63D0\u4F9B <code>SDK</code> \u5305\uFF0C\u5728 <code>SDK</code> \u4E2D\u6709\u4E00\u4E9B <code>API</code> \u4E0D\u60F3\u88AB\u5916\u90E8\u8C03\u7528\uFF0C\u5E76\u4E14\u5DF2\u7ECF\u6DFB\u52A0\u4E86 <code>internal</code> \u4FEE\u9970\uFF0C\u4F46\u662F\u53D7\u9650\u4E8E\u4E0A\u8BC9\u95EE\u9898\u4E14\u7B2C\u4E09\u65B9\u4F7F\u7528 <code>SDK</code> \u7684\u73AF\u5883\u4E0D\u53EF\u63A7(\u4E0D\u80FD\u8981\u6C42\u7B2C\u4E09\u65B9\u5FC5\u987B\u4F7F\u7528<code>Kotlin</code>)</p><p>\u5E26\u7740\u95EE\u9898Google\u4E00\u756A\uFF0C\u67E5\u5230\u4EE5\u4E0B\u51E0\u4E2A\u89E3\u51B3\u65B9\u6848\uFF1A</p><ol><li>\u4F7F\u7528 <code>JvmName</code> \u6CE8\u89E3\u8BBE\u7F6E\u4E00\u4E2A\u4E0D\u7B26\u5408 <code>Java</code> \u547D\u540D\u89C4\u5219\u7684\u6807\u8BC6\u7B26<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></li><li>\u4F7F\u7528 <code>\u02CB\u02CB</code> \u5728 <code>Kotlin</code> \u4E2D\u628A\u4E00\u4E2A\u4E0D\u5408\u6CD5\u7684\u6807\u8BC6\u7B26\u5F3A\u884C\u5408\u6CD5\u5316<sup class="footnote-ref"><a href="#footnote1">[1:1]</a><a class="footnote-anchor" id="footnote-ref1:1"></a></sup></li><li>\u4F7F\u7528 <code>JvmSynthetic</code> \u6CE8\u89E3<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></li></ol><p>\u4EE5\u4E0A\u65B9\u6848\u53EF\u4EE5\u6EE1\u8DB3\u5927\u90E8\u5206\u9700\u6C42\uFF0C\u4F46\u662F\u4EE5\u4E0A\u65B9\u6848\u90FD\u4E0D\u6EE1\u8DB3\u9690\u85CF\u6784\u9020\u65B9\u6CD5\uFF0C\u53EF\u80FD\u4F1A\u60F3\u4EC0\u4E48\u60C5\u666F\u4E0B\u9700\u8981\u9690\u85CF\u6784\u9020\u65B9\u6CD5\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">class</span> <span class="token function">Builder</span><span class="token punctuation">(</span><span class="token keyword">internal</span> <span class="token keyword">val</span> a<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">internal</span> <span class="token keyword">val</span> b<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token comment">/**
     * non-public constructor for java
     */</span>
    <span class="token keyword">internal</span> <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u6B64\u6211\u8FD8\u63D0\u4E86\u4E2AIssue<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>\uFF0C\u671F\u671B\u5B98\u65B9\u628A <code>JvmSynthetic</code> \u7684\u4F5C\u7528\u57DF\u6269\u5C55\u5230\u6784\u9020\u65B9\u6CD5\uFF0C\u4E0D\u8FC7\u5B98\u65B9\u597D\u50CF\u6CA1\u6709\u6253\u7B97\u5B9E\u73B0\u{1F602}</p><p>\u4E3A\u89E3\u51B3\u9690\u85CF\u6784\u9020\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u628A\u6784\u9020\u65B9\u6CD5\u79C1\u6709\u5316\uFF0C\u5BF9\u5916\u66B4\u9732\u9759\u6001\u5DE5\u5382\u65B9\u6CD5\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">class</span> Builder <span class="token keyword">private</span> <span class="token keyword">constructor</span> <span class="token punctuation">(</span><span class="token keyword">internal</span> <span class="token keyword">val</span> a<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">internal</span> <span class="token keyword">val</span> b<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token comment">/**
     * non-public constructor for java
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    
    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span>

        <span class="token annotation builtin">@JvmStatic</span>
        <span class="token keyword">fun</span> <span class="token function">newBuilder</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Int<span class="token punctuation">,</span> b<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">Builder</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u51B3\u65B9\u6848\u8BF4\u5B8C\u4E86\uFF0C\u5927\u5BB6\u6563\u4E86\u5427\uFF0C\u6563\u4E86\u5427~</p><p>\u5F00\u73A9\u7B11\uFF0C\u5F00\u73A9\u7B11\u{1F61B}\uFF0C\u5FC5\u7136\u8981\u6298\u817E\u4E00\u756A</p><h2 id="\u6298\u817E" tabindex="-1"><a class="header-anchor" href="#\u6298\u817E" aria-hidden="true">#</a> \u6298\u817E</h2><h3 id="\u63A2\u7D22jvmsynthetic\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u63A2\u7D22jvmsynthetic\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> \u63A2\u7D22<code>JvmSynthetic</code>\u5B9E\u73B0\u539F\u7406</h3><p>\u5148\u770B\u4E0B <code>JvmSynthetic</code> \u6CE8\u89E3\u7684\u6CE8\u91CA\u6587\u6863</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>/**
 * Sets \`ACC_SYNTHETIC\` flag on the annotated target in the Java bytecode.
 *
 * Synthetic targets become inaccessible for Java sources at compile time while still being accessible for Kotlin sources.
 * Marking target as synthetic is a binary compatible change, already compiled Java code will be able to access such target.
 *
 * This annotation is intended for *rare cases* when API designer needs to hide Kotlin-specific target from Java API
 * while keeping it a part of Kotlin API so the resulting API is idiomatic for both languages.
 */
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u597D\u5BB6\u4F19\uFF0C\u5B9E\u73B0\u539F\u7406\u90FD\u8BF4\u4E86\uFF1A\u5728 <code>Java</code> \u5B57\u8282\u7801\u4E2D\u7684\u6CE8\u89E3\u76EE\u6807\u4E0A\u8BBE\u7F6E <code>ACC_SYNTHETIC</code> \u6807\u8BC6</p><p>\u6B64\u5904\u6D89\u53CA <code>Java</code> \u5B57\u8282\u7801\u77E5\u8BC6\u70B9\uFF0C<code>ACC_SYNTHETIC</code> \u6807\u8BC6\u53EF\u4EE5\u7B80\u5355\u7406\u89E3\u662F <code>Java</code> \u9690\u85CF\u7684\uFF0C\u975E\u516C\u5F00\u7684\u4E00\u79CD\u4FEE\u9970\u7B26\uFF0C\u53EF\u4EE5\u4FEE\u9970\u7C7B\u3001\u65B9\u6CD5\u3001\u5B57\u6BB5\u7B49<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></p>`,22),b=s("\u5F97\u770B\u770B "),f=n("code",null,"Kotlin",-1),g=s(" \u662F\u5982\u4F55\u8BBE\u7F6E "),h=n("code",null,"ACC_SYNTHETIC",-1),_=s(" \u6807\u8BC6\u7684\uFF0C\u6253\u5F00 "),y={href:"https://github.com/JetBrains/kotlin",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"Github Kotlin",-1),T=s(" \u4ED3\u5E93"),I=s("\uFF0C\u5728\u4ED3\u5E93\u5185\u641C\u7D22 "),A=n("code",null,"JvmSynthetic",-1),C=s(" \u5173\u952E\u5B57 "),x={href:"https://github.com/JetBrains/kotlin/search?q=JvmSynthetic",target:"_blank",rel:"noopener noreferrer"},N=s("Search \xB7 JvmSynthetic (github.com)"),S=n("p",null,[n("img",{src:l,alt:"image-20220508120615028"})],-1),E=s("\u5728\u641C\u7D22\u7ED3\u679C\u4E2D\u5206\u6790\u53D1\u73B0 "),O=n("code",null,"JVM_SYNTHETIC_ANNOTATION_FQ_NAME",-1),j=s(" \u5173\u8054\u6027\u8F83\u5927\uFF0C\u7EE7\u7EED\u5728\u4ED3\u5E93\u5185\u641C\u7D22 "),P=n("code",null,"JVM_SYNTHETIC_ANNOTATION_FQ_NAME",-1),H=s(" \u5173\u952E\u5B57 "),J={href:"https://github.com/JetBrains/kotlin/search?q=JVM_SYNTHETIC_ANNOTATION_FQ_NAME",target:"_blank",rel:"noopener noreferrer"},K=s("Search \xB7 JVM_SYNTHETIC_ANNOTATION_FQ_NAME (github.com)"),M=n("p",null,[n("img",{src:u,alt:"image-20220508121250275"})],-1),R=n("p",null,[n("img",{src:r,alt:"image-20220508121115651"})],-1),q=n("p",null,[n("img",{src:d,alt:"image-20220508121137580"})],-1),F=s("\u5728\u641C\u7D22\u7ED3\u679C\u4E2D\u53D1\u73B0\u51E0\u4E2A\u7C7B\u540D\u4E0E\u4EE3\u7801\u751F\u6210\u76F8\u5173\uFF0C\u8FD9\u91CC\u4EE5 "),D={href:"https://github.com/JetBrains/kotlin/blob/effd21d074fb07e64797aef4db624cae0decbf42/compiler/ir/backend.jvm/codegen/src/org/jetbrains/kotlin/backend/jvm/codegen/ClassCodegen.kt",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"ClassCodegen.kt",-1),V=s(" \u4E3A\u4F8B\uFF0C\u9644\u4E0A\u76F8\u5173\u4EE3\u7801"),Y=e(`<div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// \u83B7\u53D6Class\u7684SynthAccessFlag</span>
<span class="token keyword">private</span> <span class="token keyword">fun</span> IrClass<span class="token punctuation">.</span><span class="token function">getSynthAccessFlag</span><span class="token punctuation">(</span>languageVersionSettings<span class="token operator">:</span> LanguageVersionSettings<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6709\`JvmSynthetic\`\u6CE8\u89E3\uFF0C\u8FD4\u56DE\`ACC_SYNTHETIC\`\u6807\u8BC6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasAnnotation</span><span class="token punctuation">(</span>JVM_SYNTHETIC_ANNOTATION_FQ_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> Opcodes<span class="token punctuation">.</span>ACC_SYNTHETIC
    <span class="token keyword">if</span> <span class="token punctuation">(</span>origin <span class="token operator">==</span> IrDeclarationOrigin<span class="token punctuation">.</span>GENERATED_SAM_IMPLEMENTATION <span class="token operator">&amp;&amp;</span>
        languageVersionSettings<span class="token punctuation">.</span><span class="token function">supportsFeature</span><span class="token punctuation">(</span>LanguageFeature<span class="token punctuation">.</span>SamWrapperClassesAreSynthetic<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
        <span class="token keyword">return</span> Opcodes<span class="token punctuation">.</span>ACC_SYNTHETIC
    <span class="token keyword">return</span> <span class="token number">0</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8BA1\u7B97\u5B57\u6BB5\u7684AccessFlag</span>
<span class="token keyword">private</span> <span class="token keyword">fun</span> IrField<span class="token punctuation">.</span><span class="token function">computeFieldFlags</span><span class="token punctuation">(</span>context<span class="token operator">:</span> JvmBackendContext<span class="token punctuation">,</span> languageVersionSettings<span class="token operator">:</span> LanguageVersionSettings<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token operator">=</span>
    origin<span class="token punctuation">.</span>flags <span class="token operator">or</span> visibility<span class="token punctuation">.</span>flags <span class="token function">or</span>
            <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDeprecatedCallable</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">||</span>
                correspondingPropertySymbol<span class="token operator">?</span><span class="token punctuation">.</span>owner<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">isDeprecatedCallable</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">true</span>
            <span class="token punctuation">)</span> Opcodes<span class="token punctuation">.</span>ACC_DEPRECATED <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">or</span>
            <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>isFinal<span class="token punctuation">)</span> Opcodes<span class="token punctuation">.</span>ACC_FINAL <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">or</span>
            <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>isStatic<span class="token punctuation">)</span> Opcodes<span class="token punctuation">.</span>ACC_STATIC <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">or</span>
            <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasAnnotation</span><span class="token punctuation">(</span>VOLATILE_ANNOTATION_FQ_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> Opcodes<span class="token punctuation">.</span>ACC_VOLATILE <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">or</span>
            <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasAnnotation</span><span class="token punctuation">(</span>TRANSIENT_ANNOTATION_FQ_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> Opcodes<span class="token punctuation">.</span>ACC_TRANSIENT <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">or</span>
			<span class="token comment">// \u5982\u679C\u6709\`JvmSynthetic\`\u6CE8\u89E3\uFF0C\u8FD4\u56DE\`ACC_SYNTHETIC\`\u6807\u8BC6</span>
            <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasAnnotation</span><span class="token punctuation">(</span>JVM_SYNTHETIC_ANNOTATION_FQ_NAME<span class="token punctuation">)</span> <span class="token operator">||</span>
                <span class="token function">isPrivateCompanionFieldInInterface</span><span class="token punctuation">(</span>languageVersionSettings<span class="token punctuation">)</span>
            <span class="token punctuation">)</span> Opcodes<span class="token punctuation">.</span>ACC_SYNTHETIC <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u6E90\u7801\u4E2D <code>Opcodes</code> \u662F\u5B57\u8282\u7801\u64CD\u4F5C\u5E93 <code>ASM</code> \u4E2D\u7684\u7C7B</p><p>\u731C\u60F3 <code>Kotlin</code> \u7F16\u8BD1\u5668\u4E5F\u662F\u4F7F\u7528 <code>ASM</code> \u7F16\u8BD1\u751F\u6210/\u4FEE\u6539Class\u6587\u4EF6</p><p>\u{1F197}\uFF0C\u77E5\u9053\u4E86 <code>JvmSynthetic</code> \u6CE8\u89E3\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u662F\u4E0D\u662F\u53EF\u4EE5\u4EFF\u7167 <code>JvmSynthetic</code> \u7ED9\u6784\u9020\u65B9\u6CD5\u4E5F\u6DFB\u52A0 <code>ACC_SYNTHETIC</code> \u6807\u8BC6\u5462\u2753</p><p>\u9996\u5148\u60F3\u5230\u7684\u5C31\u662F\u5229\u7528 AGP Transform \u8FDB\u884C\u5B57\u8282\u7801\u4FEE\u6539</p><h3 id="agp-transform" tabindex="-1"><a class="header-anchor" href="#agp-transform" aria-hidden="true">#</a> AGP Transform</h3><p>AGP Transform \u7684\u642D\u5EFA\u3001\u4F7F\u7528\uFF0C\u7F51\u4E0A\u6709\u5F88\u591A\u76F8\u5173\u6587\u7AE0\uFF0C\u6B64\u5904\u4E0D\u518D\u63CF\u8FF0\uFF0C\u4E0B\u56FE\u662F\u672C\u4ED3\u5E93\u7684\u7EC4\u7EC7\u67B6\u6784</p><p><img src="`+k+`" alt="\u9879\u76EE\u67B6\u6784"></p><p>\u8FD9\u91CC\u7B80\u5355\u8BF4\u660E\u4E0B\uFF1A</p><h4 id="api-xxx" tabindex="-1"><a class="header-anchor" href="#api-xxx" aria-hidden="true">#</a> api-xxx</h4><p>api-xxx\u6A21\u5757\u4E2D\u53EA\u6709\u4E00\u4E2A\u6CE8\u89E3\u7C7B <code>Hide</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>CONSTRUCTOR<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>CLASS<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Hide</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Target</span><span class="token punctuation">(</span>
    AnnotationTarget<span class="token punctuation">.</span>FIELD<span class="token punctuation">,</span>
    AnnotationTarget<span class="token punctuation">.</span>CONSTRUCTOR<span class="token punctuation">,</span>
    AnnotationTarget<span class="token punctuation">.</span>FUNCTION<span class="token punctuation">,</span>
    AnnotationTarget<span class="token punctuation">.</span>PROPERTY_GETTER<span class="token punctuation">,</span>
    AnnotationTarget<span class="token punctuation">.</span>PROPERTY_SETTER<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token annotation builtin">@Retention</span><span class="token punctuation">(</span>AnnotationRetention<span class="token punctuation">.</span>BINARY<span class="token punctuation">)</span>
<span class="token keyword">annotation</span> <span class="token keyword">class</span> Hide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="kcp" tabindex="-1"><a class="header-anchor" href="#kcp" aria-hidden="true">#</a> kcp</h4><p>kcp\u76F8\u5173\uFF0C\u4E0B\u7BC7\u518D\u8BB2</p><h4 id="lib-xxx" tabindex="-1"><a class="header-anchor" href="#lib-xxx" aria-hidden="true">#</a> lib-xxx</h4><p>lib-xxx\u6A21\u5757\u4E2D\u5305\u542B\u5BF9\u6CE8\u89E3api-xxx\u7684\u6D4B\u8BD5\uFF0C\u6253\u5305\u6210<code>SDK</code>\uFF0C\u4F9Bapp\u6A21\u5757\u4F7F\u7528</p><h4 id="plugin" tabindex="-1"><a class="header-anchor" href="#plugin" aria-hidden="true">#</a> plugin</h4><p>plugin\u6A21\u5757\u5305\u542BAGP Transform</p><h3 id="\u5B9E\u73B0plugin\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0plugin\u6A21\u5757" aria-hidden="true">#</a> \u5B9E\u73B0plugin\u6A21\u5757</h3><h4 id="\u521B\u5EFAmaskplugin" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFAmaskplugin" aria-hidden="true">#</a> \u521B\u5EFAMaskPlugin</h4><p>\u521B\u5EFA <code>MaskPlugin</code> \u7C7B\uFF0C\u5B9E\u73B0 <code>org.gradle.api.Plugin</code> \u63A5\u53E3</p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">class</span> <span class="token class-name">MaskPlugin</span> <span class="token keyword">implements</span> <span class="token class-name">Plugin</span><span class="token operator">&lt;</span>Project<span class="token operator">&gt;</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span>Project project<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8F93\u51FA\u65E5\u5FD7\uFF0C\u67E5\u770BPlugin\u662F\u5426\u751F\u6548</span>
        project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Welcome to guodongAndroid mask plugin.&quot;</span></span><span class="token punctuation">)</span>

        <span class="token comment">// \u76EE\u524D\u589E\u52A0\u4E86\u9650\u5236\u4EC5\u80FD\u7528\u4E8E\`AndroidLibrary\`</span>
        LibraryExtension extension <span class="token operator">=</span> project<span class="token punctuation">.</span>extensions<span class="token punctuation">.</span><span class="token function">findByType</span><span class="token punctuation">(</span>LibraryExtension<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>extension <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Only support [AndroidLibrary].&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>

        extension<span class="token punctuation">.</span><span class="token function">registerTransform</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MaskTransform</span><span class="token punctuation">(</span>project<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u521B\u5EFAmasktransform" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFAmasktransform" aria-hidden="true">#</a> \u521B\u5EFAMaskTransform</h4><p>\u521B\u5EFA <code>MaskTransform</code>\uFF0C\u7EE7\u627F <code>com.android.build.api.transform.Transform</code> \u62BD\u8C61\u7C7B\uFF0C\u4E3B\u8981\u5B9E\u73B0 <code>transform</code> \u65B9\u6CD5\uFF0C\u4EE5\u4E0B\u4E3A\u6838\u5FC3\u4EE3\u7801</p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">class</span> <span class="token class-name">MaskTransform</span> <span class="token keyword">extends</span> <span class="token class-name">Transform</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span>TransformInvocation transformInvocation<span class="token punctuation">)</span> <span class="token keyword">throws</span> TransformException<span class="token punctuation">,</span> InterruptedException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>
        <span class="token keyword">long</span> start <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">logE</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">TAG</span></span><span class="token string"> - start&quot;</span></span><span class="token punctuation">)</span>

        TransformOutputProvider outputProvider <span class="token operator">=</span> transformInvocation<span class="token punctuation">.</span>outputProvider
        
        <span class="token comment">// \u6CA1\u6709\u9002\u914D\u589E\u91CF\u7F16\u8BD1</span>

        <span class="token comment">// \u53EA\u5173\u5FC3\u672C\u9879\u76EE\u751F\u6210\u7684Class\u6587\u4EF6</span>
        transformInvocation<span class="token punctuation">.</span>inputs<span class="token punctuation">.</span>each <span class="token punctuation">{</span> transformInput <span class="token operator">-&gt;</span>
            transformInput<span class="token punctuation">.</span>directoryInputs<span class="token punctuation">.</span>each <span class="token punctuation">{</span> dirInput <span class="token operator">-&gt;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>dirInput<span class="token punctuation">.</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dirInput<span class="token punctuation">.</span>file<span class="token punctuation">.</span>eachFileRecurse <span class="token punctuation">{</span> file <span class="token operator">-&gt;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;.class&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u4F7F\u7528ASM\u4FEE\u6539Class\u6587\u4EF6</span>
                            ClassReader cr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassReader</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>bytes<span class="token punctuation">)</span>
                            ClassWriter cw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassWriter</span><span class="token punctuation">(</span>cr<span class="token punctuation">,</span> ClassWriter<span class="token punctuation">.</span>COMPUTE_MAXS<span class="token punctuation">)</span>
                            ClassVisitor cv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckClassAdapter</span><span class="token punctuation">(</span>cw<span class="token punctuation">)</span>
                            cv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MaskClassNode</span><span class="token punctuation">(</span>Opcodes<span class="token punctuation">.</span>ASM9<span class="token punctuation">,</span> cv<span class="token punctuation">,</span> mProject<span class="token punctuation">)</span>
                            <span class="token keyword">int</span> parsingOptions <span class="token operator">=</span> <span class="token number">0</span>
                            cr<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>cv<span class="token punctuation">,</span> parsingOptions<span class="token punctuation">)</span>
                            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> cw<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

                            FileOutputStream fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
                            fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>
                            fos<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                File dest <span class="token operator">=</span> outputProvider<span class="token punctuation">.</span><span class="token function">getContentLocation</span><span class="token punctuation">(</span>dirInput<span class="token punctuation">.</span>name<span class="token punctuation">,</span> dirInput<span class="token punctuation">.</span>contentTypes<span class="token punctuation">,</span> dirInput<span class="token punctuation">.</span>scopes<span class="token punctuation">,</span> Format<span class="token punctuation">.</span>DIRECTORY<span class="token punctuation">)</span>
                FileUtils<span class="token punctuation">.</span><span class="token function">copyDirectory</span><span class="token punctuation">(</span>dirInput<span class="token punctuation">.</span>file<span class="token punctuation">,</span> dest<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// \u4E0D\u5173\u5FC3\u7B2C\u4E09\u65B9Jar\u4E2D\u7684Class\u6587\u4EF6</span>
            transformInput<span class="token punctuation">.</span>jarInputs<span class="token punctuation">.</span>each <span class="token punctuation">{</span> jarInput <span class="token operator">-&gt;</span>
                String jarName <span class="token operator">=</span> jarInput<span class="token punctuation">.</span>name
                String md5Name <span class="token operator">=</span> DigestUtils<span class="token punctuation">.</span><span class="token function">md5Hex</span><span class="token punctuation">(</span>jarInput<span class="token punctuation">.</span>file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>jarName<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;.jar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    jarName <span class="token operator">=</span> jarName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> jarName<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                File dest <span class="token operator">=</span> outputProvider<span class="token punctuation">.</span><span class="token function">getContentLocation</span><span class="token punctuation">(</span>jarName <span class="token operator">+</span> md5Name<span class="token punctuation">,</span> jarInput<span class="token punctuation">.</span>contentTypes<span class="token punctuation">,</span> jarInput<span class="token punctuation">.</span>scopes<span class="token punctuation">,</span> Format<span class="token punctuation">.</span>JAR<span class="token punctuation">)</span>
                FileUtils<span class="token punctuation">.</span><span class="token function">copyFile</span><span class="token punctuation">(</span>jarInput<span class="token punctuation">.</span>file<span class="token punctuation">,</span> dest<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">long</span> cost <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start
        <span class="token function">logE</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>Locale<span class="token punctuation">.</span>CHINA<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">TAG</span></span><span class="token string"> - end, cost: %dms&quot;</span></span><span class="token punctuation">,</span> cost<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">logE</span><span class="token punctuation">(</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mProject<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u521B\u5EFAmaskclassnode" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFAmaskclassnode" aria-hidden="true">#</a> \u521B\u5EFAMaskClassNode</h4><p>\u521B\u5EFA <code>MaskClassNode</code>\uFF0C\u7EE7\u627F <code>org.objectweb.asm.tree.ClassNode</code>\uFF0C\u4E3B\u8981\u5B9E\u73B0 <code>visitEnd</code> \u65B9\u6CD5</p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">class</span> <span class="token class-name">MaskClassNode</span> <span class="token keyword">extends</span> <span class="token class-name">ClassNode</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> MaskClassNode<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span>simpleName

    <span class="token comment">// api-java\u4E2D\`Hide\`\u6CE8\u89E3\u7684\u63CF\u8FF0\u7B26</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String HIDE_JAVA_DESCRIPTOR <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;Lcom/guodong/android/mask/api/Hide;&quot;</span></span>
    
    <span class="token comment">// api-kt\u4E2D\`Hide\`\u6CE8\u89E3\u7684\u63CF\u8FF0\u7B26</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String HIDE_KOTLIN_DESCRIPTOR <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;Lcom/guodong/android/mask/api/kt/Hide;&quot;</span></span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Set<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> HIDE_DESCRIPTOR_SET <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        HIDE_DESCRIPTOR_SET<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>HIDE_JAVA_DESCRIPTOR<span class="token punctuation">)</span>
        HIDE_DESCRIPTOR_SET<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>HIDE_KOTLIN_DESCRIPTOR<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> Project project

    <span class="token function">MaskClassNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> api<span class="token punctuation">,</span> ClassVisitor cv<span class="token punctuation">,</span> Project project<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>api<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>project <span class="token operator">=</span> project
        <span class="token keyword">this</span><span class="token punctuation">.</span>cv <span class="token operator">=</span> cv
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">visitEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// \u5904\u7406Field</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>fn <span class="token keyword">in</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> has <span class="token operator">=</span> <span class="token function">hasHideAnnotation</span><span class="token punctuation">(</span>fn<span class="token punctuation">.</span>invisibleAnnotations<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">TAG</span></span><span class="token string">, before --&gt; typeName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">name</span></span><span class="token string">, fieldName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">fn<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, access = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">fn<span class="token punctuation">.</span>access</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token comment">// \u4FEE\u6539\u5B57\u6BB5\u7684\u8BBF\u95EE\u6807\u8BC6</span>
                fn<span class="token punctuation">.</span>access <span class="token operator">+=</span> Opcodes<span class="token punctuation">.</span>ACC_SYNTHETIC
                project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">TAG</span></span><span class="token string">, after --&gt; typeName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">name</span></span><span class="token string">, fieldName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">fn<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, access = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">fn<span class="token punctuation">.</span>access</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5904\u7406Method</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>mn <span class="token keyword">in</span> methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> has <span class="token operator">=</span> <span class="token function">hasHideAnnotation</span><span class="token punctuation">(</span>mn<span class="token punctuation">.</span>invisibleAnnotations<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">TAG</span></span><span class="token string">, before --&gt; typeName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">name</span></span><span class="token string">, methodName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">mn<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, access = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">mn<span class="token punctuation">.</span>access</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token comment">// \u4FEE\u6539\u65B9\u6CD5\u7684\u8BBF\u95EE\u6807\u8BC6</span>
                mn<span class="token punctuation">.</span>access <span class="token operator">+=</span> Opcodes<span class="token punctuation">.</span>ACC_SYNTHETIC
                project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">TAG</span></span><span class="token string">, after --&gt; typeName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">name</span></span><span class="token string">, methodName = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">mn<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, access = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">mn<span class="token punctuation">.</span>access</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">visitEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>cv <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">accept</span><span class="token punctuation">(</span>cv<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * \u662F\u5426\u6709\`Hide\`\u6CE8\u89E3
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">hasHideAnnotation</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>AnnotationNode<span class="token operator">&gt;</span> annotationNodes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>annotationNodes <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>node <span class="token keyword">in</span> annotationNodes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>HIDE_DESCRIPTOR_SET<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>desc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528transform" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528transform" aria-hidden="true">#</a> \u4F7F\u7528Transform</h3><h4 id="build-gradle-project-level" tabindex="-1"><a class="header-anchor" href="#build-gradle-project-level" aria-hidden="true">#</a> build.gradle - project level</h4><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>buildscript <span class="token punctuation">{</span>
    ext<span class="token punctuation">.</span>plugin_version <span class="token operator">=</span> <span class="token string">&#39;x.x.x&#39;</span>
    dependencies <span class="token punctuation">{</span>
        classpath <span class="token interpolation-string"><span class="token string">&quot;com.guodong.android:mask-gradle-plugin:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">plugin_version</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="build-gradle-module-level" tabindex="-1"><a class="header-anchor" href="#build-gradle-module-level" aria-hidden="true">#</a> build.gradle - module level</h4><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code># lib<span class="token operator">-</span>kotlin
plugins <span class="token punctuation">{</span>
    id <span class="token string">&#39;com.android.library&#39;</span>
    id <span class="token string">&#39;kotlin-android&#39;</span>
    id <span class="token string">&#39;kotlin-kapt&#39;</span>
    id <span class="token string">&#39;maven-publish&#39;</span>
    id <span class="token string">&#39;com.guodong.android.mask&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lib-kotlin" tabindex="-1"><a class="header-anchor" href="#lib-kotlin" aria-hidden="true">#</a> lib-kotlin</h4><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">interface</span> InterfaceTest <span class="token punctuation">{</span>

    <span class="token comment">// \u4F7F\u7528api-kt\u4E2D\u7684\u6CE8\u89E3</span>
    <span class="token annotation builtin">@Hide</span>
    <span class="token keyword">fun</span> <span class="token function">testInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">class</span> <span class="token function">KotlinTest</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">:</span> InterfaceTest <span class="token punctuation">{</span>

    <span class="token comment">// \u4F7F\u7528api-kt\u4E2D\u7684\u6CE8\u89E3</span>
    <span class="token annotation builtin">@Hide</span>
    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>

    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span>

        <span class="token annotation builtin">@JvmStatic</span>
        <span class="token keyword">fun</span> <span class="token function">newKotlinTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">KotlinTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">val</span> binding<span class="token operator">:</span> LayoutKotlinTestBinding<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span>

    <span class="token comment">// \u4F7F\u7528api-kt\u4E2D\u7684\u6CE8\u89E3</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> a
        <span class="token annotation builtin">@Hide</span> <span class="token keyword">get</span>
        <span class="token annotation builtin">@Hide</span> <span class="token keyword">set</span>

    <span class="token keyword">fun</span> <span class="token function">getA1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a
    <span class="token punctuation">}</span>

    <span class="token keyword">fun</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        a <span class="token operator">=</span> <span class="token number">1000</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">testInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Interface function test&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> app</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code># <span class="token class-name">MainActivity</span><span class="token punctuation">.</span>java

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">testKotlinLib</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u5BF9\u8C61\u65F6\u4E0D\u80FD\u8BBF\u95EE\u65E0\u53C2\u6784\u9020\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u8BBF\u95EE\u6709\u53C2\u6784\u9020\u65B9\u6CD5\u6216\u8BBF\u95EE\u9759\u6001\u5DE5\u5382\u65B9\u6CD5</span>
    <span class="token class-name">KotlinTest</span> test <span class="token operator">=</span> <span class="token class-name">KotlinTest</span><span class="token punctuation">.</span><span class="token function">newKotlinTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8C03\u7528\u65F6\u4E0D\u80FD\u8BBF\u95EE\`test.getA()\`\u65B9\u6CD5\uFF0C\u4EC5\u80FD\u8BBF\u95EE\`getA1()\u65B9\u6CD5</span>
    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;testKotlinLib: before --&gt; &quot;</span> <span class="token operator">+</span> test<span class="token punctuation">.</span><span class="token function">getA1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    test<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;testKotlinLib: after --&gt; &quot;</span> <span class="token operator">+</span> test<span class="token punctuation">.</span><span class="token function">getA1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    
    test<span class="token punctuation">.</span><span class="token function">testInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">InterfaceTest</span> interfaceTest <span class="token operator">=</span> test<span class="token punctuation">;</span>
    <span class="token comment">// Error - cannot resolve method &#39;testInterface&#39; in &#39;InterfaceTest&#39;</span>
    interfaceTest<span class="token punctuation">.</span><span class="token function">testInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>happy:happy:</p><h2 id="\u53C2\u8003\u6587\u6863" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u6863" aria-hidden="true">#</a> \u53C2\u8003\u6587\u6863</h2><hr class="footnotes-sep">`,42),$={class:"footnotes"},G={class:"footnotes-list"},B={id:"footnote1",class:"footnote-item"},Q={href:"https://blog.csdn.net/qq_23626713/article/details/90698534",target:"_blank",rel:"noopener noreferrer"},U=s("\u6B63\u786E\u5730\u4F7F\u7528 Kotlin \u7684 internal"),W=s(),X=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1),z=s(),Z=n("a",{href:"#footnote-ref1:1",class:"footnote-backref"},"\u21A9\uFE0E",-1),nn={id:"footnote2",class:"footnote-item"},sn={href:"https://youtrack.jetbrains.com/issue/KT-24981/Support-more-targets-for-JvmSynthetic",target:"_blank",rel:"noopener noreferrer"},an=s("Support more targets for @JvmSynthetic : KT-24981 (jetbrains.com)"),tn=s(),en=n("a",{href:"#footnote-ref2",class:"footnote-backref"},"\u21A9\uFE0E",-1),on={id:"footnote3",class:"footnote-item"},pn={href:"https://youtrack.jetbrains.com/issue/KT-50609/Support-constructor-target-for-JvmSynthetic-annotation",target:"_blank",rel:"noopener noreferrer"},cn=s("Support 'constructor' target for JvmSynthetic annotation : KT-50609 (jetbrains.com)"),ln=s(),un=n("a",{href:"#footnote-ref3",class:"footnote-backref"},"\u21A9\uFE0E",-1),rn={id:"footnote4",class:"footnote-item"},dn={href:"https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html",target:"_blank",rel:"noopener noreferrer"},kn=s("Chapter 4. The class File Format (oracle.com)"),vn=s(),mn=n("a",{href:"#footnote-ref4",class:"footnote-backref"},"\u21A9\uFE0E",-1);function bn(fn,gn){const a=i("ExternalLinkIcon");return p(),c("div",null,[m,n("p",null,[b,f,g,h,_,n("a",y,[w,T,t(a)]),I,A,C,n("a",x,[N,t(a)])]),S,n("p",null,[E,O,j,P,H,n("a",J,[K,t(a)])]),M,R,q,n("p",null,[F,n("a",D,[L,t(a)]),V]),Y,n("section",$,[n("ol",G,[n("li",B,[n("p",null,[n("a",Q,[U,t(a)]),W,X,z,Z])]),n("li",nn,[n("p",null,[n("a",sn,[an,t(a)]),tn,en])]),n("li",on,[n("p",null,[n("a",pn,[cn,t(a)]),ln,un])]),n("li",rn,[n("p",null,[n("a",dn,[kn,t(a)]),vn,mn])])])])])}var yn=o(v,[["render",bn],["__file","Kotlin-KCP\u7684\u5E94\u7528-\u7B2C\u4E00\u7BC7.html.vue"]]);export{yn as default};
