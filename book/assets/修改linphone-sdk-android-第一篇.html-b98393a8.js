import{_ as e,Y as o,Z as c,$ as a,a0 as n,a1 as p,a3 as t,E as l}from"./framework-3d290349.js";const i={},u=t('<h1 id="修改linphone-sdk-android-上篇" tabindex="-1"><a class="header-anchor" href="#修改linphone-sdk-android-上篇" aria-hidden="true">#</a> 修改linphone-sdk-android-上篇</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>记录修改linphone-sdk-android过程，计划分为上、中、下三篇</p><p>本文是上篇，本篇仅记录下书问题2的初步排查过程，尽量描述排查问题过程中的思路与方向</p><p>余下两篇记录问题1、2的修改过程</p><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2>',6),k={href:"https://juejin.cn/post/7087496636657565727",target:"_blank",rel:"noopener noreferrer"},r=t(`<p>项目中使用的linphone-sdk-android版本为4.5.x，使用过程中发现以下两个问题：</p><ol><li>打开音频编解码G722、G729时，发起呼叫的INVITE SDP中，没有G722、G729的RTP MAP，当时以为是linphone的bug，后面看源码及查资料发现可能不是bug，这里先按下不表</li><li>使用sdk提供的JavaLogger输出日志时，伪代码：<code>mFactory.getLoggingService().addListener(mAndroidLoggingService);</code>，偶现JNI崩溃问题</li></ol><div class="language-logcat line-numbers-mode" data-ext="logcat"><pre class="language-logcat"><code>    --------- beginning of crash
2022-04-11 14:16:22.350 1142-1430/? A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 1430 (RealLinphonePro)
2022-04-11 14:16:22.441 3756-3756/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
2022-04-11 14:16:22.442 3756-3756/? A/DEBUG: Build fingerprint: &#39;Android/rk3288/rk3288:7.1.2/NHG47K/builde03162201:userdebug/test-keys&#39;
2022-04-11 14:16:22.444 3756-3756/? A/DEBUG: Revision: &#39;0&#39;
2022-04-11 14:16:22.446 3756-3756/? A/DEBUG: ABI: &#39;arm&#39;
2022-04-11 14:16:22.447 3756-3756/? A/DEBUG: pid: 1142, tid: 1430, name: RealLinphonePro  &gt;&gt;&gt; com.guodong.android.linphone &lt;&lt;&lt;
2022-04-11 14:16:22.448 3756-3756/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------
2022-04-11 14:16:22.454 3756-3756/? A/DEBUG: Abort message: &#39;art/runtime/indirect_reference_table.cc:80] JNI ERROR (app bug): accessed deleted WeakGlobal 0x21ab&#39;
2022-04-11 14:16:22.456 3756-3756/? A/DEBUG:     r0 00000000  r1 00000596  r2 00000006  r3 00000008
2022-04-11 14:16:22.457 3756-3756/? A/DEBUG:     r4 89aff978  r5 00000006  r6 89aff920  r7 0000010c
2022-04-11 14:16:22.459 3756-3756/? A/DEBUG:     r8 00000043  r9 aaa7eef0  sl 0000000a  fp 89d04400
2022-04-11 14:16:22.461 3756-3756/? A/DEBUG:     ip 0000000b  sp 89afef88  lr ab175857  pc ab1780c0  cpsr 600b0010
2022-04-11 14:16:22.509 3756-3756/? A/DEBUG: backtrace:
2022-04-11 14:16:22.511 3756-3756/? A/DEBUG:     #00 pc 0004a0c0  /system/lib/libc.so (tgkill+12)
2022-04-11 14:16:22.512 3756-3756/? A/DEBUG:     #01 pc 00047853  /system/lib/libc.so (pthread_kill+34)
2022-04-11 14:16:22.514 3756-3756/? A/DEBUG:     #02 pc 0001d8b5  /system/lib/libc.so (raise+10)
2022-04-11 14:16:22.515 3756-3756/? A/DEBUG:     #03 pc 00019401  /system/lib/libc.so (__libc_android_abort+34)
2022-04-11 14:16:22.517 3756-3756/? A/DEBUG:     #04 pc 00017048  /system/lib/libc.so (abort+4)
2022-04-11 14:16:22.518 3756-3756/? A/DEBUG:     #05 pc 0031d8cd  /system/lib/libart.so (_ZN3art7Runtime5AbortEPKc+328)
2022-04-11 14:16:22.520 3756-3756/? A/DEBUG:     #06 pc 000b5503  /system/lib/libart.so (_ZN3art10LogMessageD2Ev+1134)
2022-04-11 14:16:22.521 3756-3756/? A/DEBUG:     #07 pc 001bd0ff  /system/lib/libart.so (_ZN3art22IndirectReferenceTable17AbortIfNoCheckJNIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE+134)
2022-04-11 14:16:22.523 3756-3756/? A/DEBUG:     #08 pc 0023ecaf  /system/lib/libart.so (_ZNK3art22IndirectReferenceTable10GetCheckedEPv+250)
2022-04-11 14:16:22.525 3756-3756/? A/DEBUG:     #09 pc 0023c05b  /system/lib/libart.so (_ZN3art9JavaVMExt16DecodeWeakGlobalEPNS_6ThreadEPv+30)
2022-04-11 14:16:22.526 3756-3756/? A/DEBUG:     #10 pc 00337679  /system/lib/libart.so (_ZNK3art6Thread13DecodeJObjectEP8_jobject+164)
2022-04-11 14:16:22.528 3756-3756/? A/DEBUG:     #11 pc 00265843  /system/lib/libart.so (_ZN3art3JNI11NewLocalRefEP7_JNIEnvP8_jobject+406)
2022-04-11 14:16:22.530 3756-3756/? A/DEBUG:     #12 pc 0060eff9  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (getLoggingService+88)
2022-04-11 14:16:22.531 3756-3756/? A/DEBUG:     #13 pc 0061a977  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.533 3756-3756/? A/DEBUG:     #14 pc 005ef911  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.535 3756-3756/? A/DEBUG:     #15 pc 00025437  /data/app/com.guodong.android.linphone-1/lib/arm/libbctoolbox.so (bctbx_logv+182)
2022-04-11 14:16:22.536 3756-3756/? A/DEBUG:     #16 pc 006f5061  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.538 3756-3756/? A/DEBUG:     #17 pc 006f51d9  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (wake_lock_acquire+152)
2022-04-11 14:16:22.539 3756-3756/? A/DEBUG:     #18 pc 006601c5  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.541 3756-3756/? A/DEBUG:     #19 pc 00660b27  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (belle_sip_client_transaction_init+138)
2022-04-11 14:16:22.542 3756-3756/? A/DEBUG:     #20 pc 006fb1d3  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (belle_sip_nict_new+30)
2022-04-11 14:16:22.544 3756-3756/? A/DEBUG:     #21 pc 0065c3a7  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (belle_sip_provider_create_client_transaction+46)
2022-04-11 14:16:22.546 3756-3756/? A/DEBUG:     #22 pc 0065dec3  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so
2022-04-11 14:16:22.547 3756-3756/? A/DEBUG:     #23 pc 0065daf7  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (belle_sip_refresher_refresh+28)
2022-04-11 14:16:22.549 3756-3756/? A/DEBUG:     #24 pc 005fac23  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (linphone_proxy_config_refresh_register+34)
2022-04-11 14:16:22.550 3756-3756/? A/DEBUG:     #25 pc 005e9fc5  /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (linphone_core_refresh_registers+40)
2022-04-11 14:16:22.552 3756-3756/? A/DEBUG:     #26 pc 019fc3bf  /data/app/com.guodong.android.linphone-1/oat/arm/base.odex (offset 0x18de000)
2022-04-11 14:16:23.096 227-255/? I/AudioFlinger: BUFFER TIMEOUT: remove(4099) from active list on thread 0xabd03e00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><h3 id="问题2" tabindex="-1"><a class="header-anchor" href="#问题2" aria-hidden="true">#</a> 问题2</h3><p>通过崩溃日志第27行<code>2022-04-11 14:16:22.530 3756-3756/? A/DEBUG: #12 pc 0060eff9 /data/app/com.guodong.android.linphone-1/lib/arm/liblinphone.so (getLoggingService+88)</code>可以判断崩溃是在<code>getLoggingService()</code>这个方法里</p><p>如此需要先找到<code>getLoggingService()</code>方法的源码，先在Source Insight中搜索<code>getLoggingService()</code>，搜索一圈发现没有，猜想此方法应该是编译后自动生成的</p><p>在Ubuntu编译环境里找找，通过<code>find</code>命令查找包含<code>getLoggingService</code>文本的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> linphone-sdk/build/
$ <span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">grep</span> <span class="token string">&quot;getLoggingService&quot;</span>
./WORK/android-armv7/Build/linphone/wrappers/java/src/linphone_jni.cc:JNIEXPORT jobject JNICALL getLoggingService<span class="token punctuation">(</span>JNIEnv *env, LinphoneLoggingService *cptr, bool_t takeref<span class="token punctuation">)</span> <span class="token punctuation">{</span>
./WORK/android-armv7/Build/linphone/wrappers/java/src/linphone_jni.cc:	jobject j_logService <span class="token operator">=</span> getLoggingService<span class="token punctuation">(</span>env, <span class="token punctuation">(</span>LinphoneLoggingService *<span class="token punctuation">)</span>logService, TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
./WORK/android-armv7/Build/linphone/wrappers/java/src/linphone_jni.cc:	jobject jni_result <span class="token operator">=</span> <span class="token punctuation">(</span>jobject<span class="token punctuation">)</span>getLoggingService<span class="token punctuation">(</span>env, <span class="token punctuation">(</span>LinphoneLoggingService *<span class="token punctuation">)</span>linphone_logging_service_get<span class="token punctuation">(</span><span class="token punctuation">)</span>, TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找到了bingo~</p><p>打开<code>linphone_jni.cc</code>，<code>getLoggingService()</code>方法体如下：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>JNIEXPORT jobject JNICALL <span class="token function">getLoggingService</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> LinphoneLoggingService <span class="token operator">*</span>cptr<span class="token punctuation">,</span> bool_t takeref<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	jobject jobj <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>cptr <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">void</span> <span class="token operator">*</span>up <span class="token operator">=</span> <span class="token function">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>belle_sip_object_t <span class="token operator">*</span><span class="token punctuation">)</span>cptr<span class="token punctuation">,</span> belle_sip_java_user_data_key<span class="token punctuation">)</span><span class="token punctuation">;</span>
		LinphoneJavaBindings <span class="token operator">*</span>ljb <span class="token operator">=</span> <span class="token punctuation">(</span>LinphoneJavaBindings <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">linphone_factory_get_user_data</span><span class="token punctuation">(</span><span class="token function">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ljb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			ljb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">LinphoneJavaBindings</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">linphone_factory_set_user_data</span><span class="token punctuation">(</span><span class="token function">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ljb<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		jclass linphone_logging_service_class <span class="token operator">=</span> ljb<span class="token operator">-&gt;</span>linphone_logging_service_class<span class="token punctuation">;</span>
		jmethodID linphone_logging_service_constructor <span class="token operator">=</span> ljb<span class="token operator">-&gt;</span>linphone_logging_service_class_constructor<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>up <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			jobj <span class="token operator">=</span> env<span class="token operator">-&gt;</span><span class="token function">NewObject</span><span class="token punctuation">(</span>linphone_logging_service_class<span class="token punctuation">,</span> linphone_logging_service_constructor<span class="token punctuation">,</span> <span class="token punctuation">(</span>jlong<span class="token punctuation">)</span>cptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span>belle_sip_object_t <span class="token operator">*</span><span class="token punctuation">)</span>cptr<span class="token punctuation">,</span> belle_sip_java_user_data_key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>env<span class="token operator">-&gt;</span><span class="token function">NewWeakGlobalRef</span><span class="token punctuation">(</span>jobj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>takeref<span class="token punctuation">)</span>
				<span class="token function">linphone_logging_service_ref</span><span class="token punctuation">(</span>cptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			jobj <span class="token operator">=</span> env<span class="token operator">-&gt;</span><span class="token function">NewLocalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>jobject<span class="token punctuation">)</span>up<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>jobj <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Delete weak ref ?</span>
				env<span class="token operator">-&gt;</span><span class="token function">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>jobject<span class="token punctuation">)</span>up<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// takes implicit local ref</span>
				jobj <span class="token operator">=</span> env<span class="token operator">-&gt;</span><span class="token function">NewObject</span><span class="token punctuation">(</span>linphone_logging_service_class<span class="token punctuation">,</span> linphone_logging_service_constructor<span class="token punctuation">,</span> <span class="token punctuation">(</span>jlong<span class="token punctuation">)</span>cptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span>belle_sip_object_t <span class="token operator">*</span><span class="token punctuation">)</span>cptr<span class="token punctuation">,</span> belle_sip_java_user_data_key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>env<span class="token operator">-&gt;</span><span class="token function">NewWeakGlobalRef</span><span class="token punctuation">(</span>jobj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>takeref<span class="token punctuation">)</span>
					<span class="token function">linphone_logging_service_ref</span><span class="token punctuation">(</span>cptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> jobj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>嗯，看起来没啥问题，也有判空处理，一时间摸不着头绪，先在<code>getLoggingService()</code>方法中加点日志输出看看吧</p><p>前面说<code>linphone_jni.cc</code>是自动生成的，现在需要找到自动生成<code>linphone_jni.cc</code>的代码，根据崩溃日志可以发现<code>getLoggingService()</code>在<code>linphone.so</code>中，而源码中有<code>liblinphone</code>这个目录，先在这个目录下找找吧，通过<code>find</code>命令查找文件名中包含<code>jni</code>的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> linphone-sdk/liblinphone/
$ <span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> *jni*
./coreapi/linphonecore_jni.cc
./tools/lpc2xml_jni.cc
./tools/xml2lpc_jni.cc
./tools/my_jni.h
./wrappers/java/jni.mustache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查找出来多个文件，既然<code>linphone_jni.cc</code>是自动生成的，所以可以确定<code>.cc</code>、<code>.h</code>后缀的几个文件肯定不是，排除后只剩下这个<code>jni.mustache</code>文件，打开文件<code>vim ./wrappers/java/jni.mustache</code>注释第一行就是<code>linphone_jni.cc</code>，太棒了，找到自动生成的代码了</p><p>通过一些查看，并与<code>linphone_jni.cc</code>中的实现对比，锁定了以下代码即为自动生成的模板代码：</p><div class="language-mustache line-numbers-mode" data-ext="mustache"><pre class="language-mustache"><code><span class="token number">290</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">objects</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token number">291</span> <span class="token variable">JNIEXPORT</span> <span class="token variable">jobject</span> <span class="token variable">JNICALL</span> <span class="token variable">get</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">className</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token variable">JNIEnv</span> <span class="token punctuation">*</span><span class="token variable">env</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">*</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">bool_t</span> <span class="token variable">takeref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">292</span>         <span class="token variable">jobject</span> <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">;</span>
<span class="token number">293</span> 
<span class="token number">294</span>         <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">cptr</span> <span class="token punctuation">!</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">295</span>                 <span class="token variable">void</span> <span class="token punctuation">*</span><span class="token variable">up</span> <span class="token punctuation">=</span> <span class="token variable">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">296</span>                 <span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">linphone_factory_get_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">297</span>                 <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token punctuation">!</span><span class="token variable">ljb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">298</span>                         <span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token variable">new</span> <span class="token variable">LinphoneJavaBindings</span><span class="token punctuation">(</span><span class="token variable">env</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">299</span>                         <span class="token variable">linphone_factory_set_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">ljb</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">300</span>                 <span class="token punctuation">}</span>
<span class="token number">301</span> 
<span class="token number">302</span>                 <span class="token variable">jclass</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">;</span>
<span class="token number">303</span>                 <span class="token variable">jmethodID</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class_constructor</span><span class="token punctuation">;</span>
<span class="token number">304</span> 
<span class="token number">305</span>                 <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">up</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">306</span>                         <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">307</span>                         <span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">308</span>                         <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
<span class="token number">309</span>                                 <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token number">310</span>                 <span class="token punctuation">}</span> <span class="token variable">else</span> <span class="token punctuation">{</span>
<span class="token number">311</span>                         <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewLocalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">312</span>                         <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">jobj</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token number">313</span>                                 <span class="token block keyword">//</span> <span class="token variable">Delete</span> <span class="token variable">weak</span> <span class="token variable">ref</span> <span class="token variable">?</span>
<span class="token number">314</span>                                 <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">315</span>                                 <span class="token block keyword">//</span> <span class="token variable">takes</span> <span class="token variable">implicit</span> <span class="token variable">local</span> <span class="token variable">ref</span>
<span class="token number">316</span>                                 <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">317</span>                                 <span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">318</span>                                 <span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
<span class="token number">319</span>                                         <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token number">320</span>                         <span class="token punctuation">}</span>
<span class="token number">321</span>                 <span class="token punctuation">}</span>
<span class="token number">322</span>         <span class="token punctuation">}</span>
<span class="token number">323</span>         <span class="token variable">return</span> <span class="token variable">jobj</span><span class="token punctuation">;</span>
<span class="token number">324</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),d={href:"https://github.com/janl/mustache.js",target:"_blank",rel:"noopener noreferrer"},v={href:"https://juejin.cn/post/7087496636657565727",target:"_blank",rel:"noopener noreferrer"},b=a("code",null,"pip3 install pystache",-1),m=a("code",null,"pystache",-1),_=a("code",null,"mustache",-1),g=a("code",null,"mustache",-1),j=a("code",null,"github",-1),h=t(`<p>好的，学习完<code>mustache</code>的语法，了解到高级用法可以传一个配置文件进行渲染，正好与<code>jni.mustache</code>同级目录中有个<code>genwrapper.py</code>文件，打开此文件，里面定义了很多类，其中有个<code>Jni</code>的类，里面有些字段与<code>jni.mustache</code>中的标签正好对应，就是它了</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Jni</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">add_object</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> javaClass<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> javaClass<span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">&#39;Factory&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        obj <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;jniPrefix&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>jni_package<span class="token punctuation">,</span>
            <span class="token string">&#39;jniPath&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>jni_path<span class="token punctuation">,</span>
            <span class="token string">&#39;cPrefix&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>cPrefix<span class="token punctuation">,</span>
            <span class="token string">&#39;className&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>className<span class="token punctuation">,</span>
            <span class="token string">&#39;classCName&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>cName<span class="token punctuation">,</span>
            <span class="token string">&#39;classImplName&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>classImplName<span class="token punctuation">,</span>
            <span class="token string">&#39;refCountable&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>refCountable<span class="token punctuation">,</span>
            <span class="token string">&#39;notRefCountable&#39;</span><span class="token punctuation">:</span> <span class="token keyword">not</span> javaClass<span class="token punctuation">.</span>refCountable<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>append<span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>happy~万事具备，现在可以修改源码，添加一些日志输出了</p>`,3),f=a("code",null,"jni.mustache",-1),y=a("code",null,"get{{className}}",-1),N=a("code",null,"get",-1),E=a("code",null,"{{className}}",-1),L=a("code",null,"LoggingService",-1),D={href:"https://github.com/janl/mustache.js",target:"_blank",rel:"noopener noreferrer"},A=a("code",null,"genwrapper.py",-1),G=a("code",null,"Jni",-1),w=a("code",null,"isLoggingService",-1),B=a("code",null,"getLoggingService()",-1),x=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Jni</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">add_object</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> javaClass<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> javaClass<span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">&#39;Factory&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        obj <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;jniPrefix&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>jni_package<span class="token punctuation">,</span>
            <span class="token string">&#39;jniPath&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>jni_path<span class="token punctuation">,</span>
            <span class="token string">&#39;cPrefix&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>cPrefix<span class="token punctuation">,</span>
            <span class="token string">&#39;className&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>className<span class="token punctuation">,</span>
            <span class="token string">&#39;classCName&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>cName<span class="token punctuation">,</span>
            <span class="token string">&#39;classImplName&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>classImplName<span class="token punctuation">,</span>
            <span class="token string">&#39;refCountable&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>refCountable<span class="token punctuation">,</span>
            <span class="token string">&#39;notRefCountable&#39;</span><span class="token punctuation">:</span> <span class="token keyword">not</span> javaClass<span class="token punctuation">.</span>refCountable<span class="token punctuation">,</span>
            <span class="token string">&#39;isLoggingService&#39;</span><span class="token punctuation">:</span> javaClass<span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">&#39;LoggingService&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>append<span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后修改<code>jni.mustache</code>文件，增加日志，输出<code>up</code>指针指向的地址，<code>up</code>指针转成<code>jobject</code>后与<code>NULL</code>、<code>nullptr</code>比较的结果，判断<code>up</code>是否已经被回收了</p><p>这里说一下代码的大概意思，<code>up</code>指针从<code>belle_sip_object_data_get</code>方法中通过<code>belle_sip_java_user_data_key</code>这个Key获取，可以简单理解为Java中的Map；如果<code>up</code>为空，则调用Java方法创建一个对象，将创建的Java对象通过<code>NewWeakGlobalRef</code>方法转换为全局弱引用，再通过<code>belle_sip_object_data_set</code>方法保存起来；如果<code>up</code>不为空，则强转为<code>jobject</code>，判断<code>jobject</code>是否为空，为空则删除全局弱引用，再创建保存</p><div class="language-mustache line-numbers-mode" data-ext="mustache"><pre class="language-mustache"><code><span class="token delimiter punctuation">{{</span><span class="token block keyword">#objects}}</span>
<span class="token variable">JNIEXPORT</span> <span class="token variable">jobject</span> <span class="token variable">JNICALL</span> <span class="token variable">get</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">className</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token variable">JNIEnv</span> <span class="token punctuation">*</span><span class="token variable">env</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">classCName</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">*</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">bool_t</span> <span class="token variable">takeref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token variable">jobject</span> <span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">;</span>

	<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">cptr</span> <span class="token punctuation">!</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">void</span> <span class="token punctuation">*</span><span class="token variable">up</span> <span class="token punctuation">=</span> <span class="token variable">belle_sip_object_data_get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">LinphoneJavaBindings</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">linphone_factory_get_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token punctuation">!</span><span class="token variable">ljb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token variable">ljb</span> <span class="token punctuation">=</span> <span class="token variable">new</span> <span class="token variable">LinphoneJavaBindings</span><span class="token punctuation">(</span><span class="token variable">env</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">linphone_factory_set_user_data</span><span class="token punctuation">(</span><span class="token variable">linphone_factory_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">ljb</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token variable">jclass</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">;</span>
		<span class="token variable">jmethodID</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span> <span class="token punctuation">=</span> <span class="token variable">ljb-</span><span class="token punctuation">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class_constructor</span><span class="token punctuation">;</span>

		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">#</span><span class="token variable">ifdef</span> <span class="token variable">__ANDROID__</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up = %p&quot;</span><span class="token punctuation">,</span> <span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token variable">jobject</span> <span class="token variable">temp_jobj1</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">;</span>
		<span class="token variable">jboolean</span> <span class="token variable">up_available1</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">IsSameObject</span><span class="token punctuation">(</span><span class="token variable">temp_jobj1</span><span class="token punctuation">,</span> <span class="token variable">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up_available1 = %d&quot;</span><span class="token punctuation">,</span> <span class="token variable">up_available1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token variable">jobject</span> <span class="token variable">temp_jobj2</span> <span class="token punctuation">=</span> <span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">;</span>
		<span class="token variable">jboolean</span> <span class="token variable">up_available2</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">IsSameObject</span><span class="token punctuation">(</span><span class="token variable">temp_jobj2</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">__android_log_print</span><span class="token punctuation">(</span><span class="token variable">ANDROID_LOG_DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;guodongAndroid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;up_available2 = %d&quot;</span><span class="token punctuation">,</span> <span class="token variable">up_available2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">#</span><span class="token variable">endif</span> <span class="token punctuation">/</span><span class="token punctuation">*</span> <span class="token variable">__ANDROID__</span> <span class="token punctuation">*</span><span class="token punctuation">/</span>
		<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">isLoggingService</span><span class="token punctuation">}</span><span class="token punctuation">}</span>

		<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">up</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
				<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token variable">else</span> <span class="token punctuation">{</span>
			<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewLocalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">jobj</span> <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">Delete</span> <span class="token variable">weak</span> <span class="token variable">ref</span> <span class="token variable">?</span>
				<span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">DeleteWeakGlobalRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">jobject</span><span class="token punctuation">)</span><span class="token variable">up</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">takes</span> <span class="token variable">implicit</span> <span class="token variable">local</span> <span class="token variable">ref</span>
				<span class="token variable">jobj</span> <span class="token punctuation">=</span> <span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_class</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_constructor</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">jlong</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token variable">belle_sip_object_data_set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">belle_sip_object_t</span> <span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">cptr</span><span class="token punctuation">,</span> <span class="token variable">belle_sip_java_user_data_key</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">void</span><span class="token punctuation">*</span><span class="token punctuation">)</span><span class="token variable">env-</span><span class="token punctuation">&gt;</span><span class="token variable">NewWeakGlobalRef</span><span class="token punctuation">(</span><span class="token variable">jobj</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token variable">if</span> <span class="token punctuation">(</span><span class="token variable">takeref</span><span class="token punctuation">)</span>
					<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">cPrefix</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">_ref</span><span class="token punctuation">(</span><span class="token variable">cptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">refCountable</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token variable">return</span> <span class="token variable">jobj</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好的，修改完源码保存后，就可以编译了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> linphone-sdk/build/
$ cmake <span class="token parameter variable">--build</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">--parallel</span> <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>等待编译完成，拷贝出来编译好的<code>aar</code>，放到Android Studio中运行，查看Logcat输出</p>`,7);function U(I,P){const s=l("ExternalLinkIcon");return o(),c("div",null,[u,a("p",null,[n("接上文"),a("a",k,[n("编译linphone-sdk-android"),p(s)])]),r,a("p",null,[n("这里linphone-sdk使用了"),a("a",d,[n("mustache"),p(s)]),n("，还记得在上篇"),a("a",v,[n("编译Linphone-SDK-Android"),p(s)]),n("中有安装"),b,n("，"),m,n("是"),_,n("的Python实现，"),g,n("的语法比较简单，在"),j,n("上看一眼文档，再跟着源码比着葫芦画瓢，应该就差不多了")]),h,a("p",null,[n("因为在"),f,n("中模板方法"),y,n("是可以生成多个以"),N,n("开头的方法，现在需要判断"),E,n("是不是等于"),L,n("，而在"),a("a",D,[n("mustache"),p(s)]),n("中没有发现比较字符串是否相同的语法，所以在"),A,n("的"),G,n("类中新增一个"),w,n("字段表示是否是"),B,n("方法")]),x])}const R=e(i,[["render",U],["__file","修改linphone-sdk-android-第一篇.html.vue"]]);export{R as default};
